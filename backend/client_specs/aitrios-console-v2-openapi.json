{
  "openapi": "3.0.2",
  "info": {
    "title": "AITRIOS | Console",
    "version": "2.0.0",
    "description": "# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->"
  },
  "servers": [
    {
      "url": "{server}/api/v2",
      "variables": {
        "server": {
          "default": "https://console.aitrios.sony-semicon.com",
          "enum": [
            "https://console.aitrios.sony-semicon.com",
            "https://us.console.aitrios.sony-semicon.com",
            "https://eu.console.aitrios.sony-semicon.com"
          ]
        }
      }
    }
  ],
  "paths": {
    "/provisioning/qrcode": {
      "get": {
        "tags": [
          "Provisioning"
        ],
        "summary": "GetQrCodeForProvisioning",
        "description": "Returns a QR in base64-encoded format to provision the Edge Device.",
        "operationId": "get_qr_code_for_provisioning",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "ntp",
            "in": "query",
            "description": "NTP server. The maximum number of characters that can be specified is 64."
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "name": "auto",
            "in": "query",
            "description": "QR type.\n- Value definition:  \n  true: Generates an Enrollment QR for auto enrollment.  \n  false: Generates a Service QR for manual enrollment.  "
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "wifi_ssid",
            "description": "SSID information to connect the Wi-Fi network.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "wifi_pass",
            "description": "Password to connect the Wi-Fi network.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "proxy_url",
            "description": "URL of the proxy server.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "proxy_port",
            "description": "Port number of the proxy server.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "proxy_user_name",
            "description": "Username to access the proxy server.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "proxy_pass",
            "description": "Password to access the proxy server.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "ip_address",
            "in": "query",
            "description": "IP address assigned to the device. The maximum number of characters that can be specified is 39."
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "subnet_mask",
            "in": "query",
            "description": "Subnet mask applied to the device. The maximum number of characters that can be specified is 39."
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "gateway",
            "in": "query",
            "description": "Gateway to connect the device. The maximum number of characters that can be specified is 39."
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "dns",
            "in": "query",
            "description": "DNS information of the server. The maximum number of characters that can be specified is 39."
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "contents"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS"
                    },
                    "contents": {
                      "type": "string",
                      "description": "QR (base64 encoding)."
                    },
                    "expiration_date": {
                      "type": "string",
                      "description": "The expiration date of QR for auto enrollment."
                    }
                  }
                },
                "example": {
                  "result": "SUCCESS",
                  "contents": "string",
                  "expiration_date": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0030001  \n  Invalid parameter wifi_ssid.  \n- E.SC.API.0030002  \n  Invalid parameter wifi_pass.  \n- E.SC.API.0030003  \n  Invalid parameter manifest_file_url.  \n- E.SC.API.0030004  \n  Invalid parameter proxy_url.  \n- E.SC.API.0030005  \n  Invalid parameter proxy_port.  \n- E.SC.API.0030006  \n  Invalid parameter proxy_user_name.  \n- E.SC.API.0030007  \n  Invalid parameter proxy_pass.  \n- E.SC.API.0030008  \n  Invalid parameter ip_address.  \n- E.SC.API.0030009  \n  Invalid parameter subnet_mask.  \n- E.SC.API.0030010  \n  Invalid parameter gateway.  \n- E.SC.API.0030011  \n  Invalid parameter dns.  \n- E.SC.API.0030012  \n  Invalid parameter ntp.  \n- E.SC.API.0030013  \n  Parameter ntp is not set.  \n- E.SC.API.0030014  \n  Invalid parameter auto.  \n- E.SC.API.0030015  \n  Invalid parameter ip_address_ipv6.  \n- E.SC.API.0030016  \n  Invalid parameter subnet_mask_ipv6.  \n- E.SC.API.0030017  \n  Invalid parameter gateway_ipv6.  \n- E.SC.API.0030018  \n  Invalid parameter dns_ipv6.  \n- E.SC.API.0030019  \n  Parameter device_type is not set.  \n- E.SC.API.0030020  \n  Invalid parameter device_type.  \n- E.SC.API.0030021  \n  Parameter dhcp is not set.  \n- E.SC.API.0030022  \n  Invalid parameter dhcp.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/devices": {
      "post": {
        "tags": [
          "Certificate"
        ],
        "summary": "EnrollDevice",
        "description": "Registers your Edge Device with a device certificate.  \nAssumptions and Notes:    \n  ・Certification format: Primary device X.509 certificate (.pem file, .cer file, or .crt file).",
        "operationId": "enroll_device",
        "parameters": [
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnrollDeviceJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS"
                    },
                    "id": {
                      "type": "string",
                      "description": "The registered device ID."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0144001  \n  Json format is invalid.  \n- E.SC.API.0144002  \n  Parameter device_name is not set.  \n- E.SC.API.0144003  \n  Invalid parameter device_name.  \n- E.SC.API.0144004  \n  Parameter device_type is not set.  \n- E.SC.API.0144005  \n  Parameter primary_certificate is not set.  \n- E.SC.API.0144006  \n  The specified parameter device_name is registered.  \n- E.SC.API.0144008  \n  The specified certificate is registered.  \n- E.SC.API.0144009  \n  The specified certificate is registered by some device.  \n- E.SC.API.0144010  \n  An invalid or already enrolled device certificate was specified.  \n- E.SC.API.0144011  \n  The device of the specified certificate is already registered in another project.  \n- E.SC.API.0144012  \n  Invalid parameter device_version.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0144007  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000016  \n  Unsupported media type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000016",
                  "message": "Unsupported media type.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Manage Devices"
        ],
        "summary": "GetDevices",
        "description": "Lists the information of Edge Devices specified by query parameters.  \nThis API does not retrieve Edge Application properties. To retrieve them, please use the GetDevice API or GetProperty API.",
        "operationId": "get_devices",
        "parameters": [
          {
            "description": "Number of the items to fetch information. If the parameter (connection_state) is Disconnected, the actual amount of data retrievable will be less than the set limit value.  \nValue range: 1 to 1000",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 500
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "Retrieves additional data beyond the number of targets specified by the query parameter (limit). Specify the value obtained from the response (continuation_token) to fetch the next data.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "starting_after",
            "in": "query"
          },
          {
            "description": "Connection state.\n- Value definition:  \n  Connected  \n  Disconnected",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "connection_state",
            "in": "query"
          },
          {
            "description": "Name of the device. *Fuzzy searching is available.",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "device_name",
            "in": "query"
          },
          {
            "description": "Device ID. *Fuzzy searching is available.",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "device_id",
            "in": "query"
          },
          {
            "description": "Name of the device group.",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "device_group_id",
            "in": "query"
          },
          {
            "description": "To specify multiple device IDs, separate them with commas.",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "device_ids",
            "in": "query"
          },
          {
            "description": "The scope of response parameters to return.\n - Value definition:  \n  full: Returns all parameters  \n  minimal: Returns minimal parameters *effective for timesaving",
            "required": false,
            "schema": {
              "enum": [
                "full",
                "minimal"
              ],
              "default": "full"
            },
            "name": "scope",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "devices",
                    "continuation_token/files"
                  ],
                  "properties": {
                    "continuation_token": {
                      "type": "string",
                      "nullable": true,
                      "description": "Last token of extracted data. If there is no continuation data, it will be empty."
                    },
                    "devices": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Devices"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below: \n- E.SC.API.0000006\n  Bad request.\n- E.SC.API.0001003\n  Invalid parameter limit.\n- E.SC.API.0001004\n  Invalid parameter starting after.\n- E.SC.API.0001005\n  Invalid parameter scope."
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0001003",
                  "message": "Invalid parameter limit.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0000011  \n  Timeout occurred when requesting.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}": {
      "get": {
        "tags": [
          "Manage Devices"
        ],
        "summary": "GetDevice",
        "description": "Returns the information of an Edge Device specified by query parameters.",
        "operationId": "get_device",
        "parameters": [
          {
            "description": "Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0002001  \n  Not found.  \n- E.SC.API.0002002  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0000011  \n  Timeout occurred when requesting.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Manage Devices"
        ],
        "summary": "UpdateDevice",
        "description": "Updates the information of a specific Edge Device specified by path parameters.",
        "operationId": "update_device",
        "parameters": [
          {
            "description": "Device ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDeviceJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0291003  \n  Invalid parameter device_name. Device names should be in single-byte characters and the maximum number of characters that can be specified is 255.\n- E.SC.API.0291004  \n  Invalid parameter inactivity_timeout.  \n- E.SC.API.0291008  \n  The specified parameter device_name is registered.  \n- E.SC.API.0291010  \n  Invalid parameter description. The maximum number of characters that can be specified is 100."
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0291005  \n  Not found.  \n- E.SC.API.0291009  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000016  \n  Unsupported media type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000016",
                  "message": "Unsupported media type.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0291006  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Certificate"
        ],
        "summary": "DeleteDevice",
        "description": "Deletes the registered Edge Device (device_id) from the Console.",
        "operationId": "delete_device",
        "parameters": [
          {
            "description": "Device ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- W.SC.API.0111001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- W.SC.API.0111002  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/certificates": {
      "get": {
        "tags": [
          "Certificate"
        ],
        "summary": "GetDeviceCertificates",
        "description": "Lists the Edge Device certificate information.",
        "operationId": "get_device_certificates",
        "parameters": [
          {
            "description": "Number of the items to fetch information.\nValue range: 1 to 256",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "Retrieves additional data beyond the number of targets specified by the query parameter (limit). Specify the value obtained from the response (continuation_token) to fetch the next data.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "starting_after",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "certificates",
                    "continuation_token"
                  ],
                  "properties": {
                    "continuation_token": {
                      "type": "string",
                      "nullable": true,
                      "description": "Last token of extracted data. If there is no continuation data, it will be empty."
                    },
                    "certificates": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DeviceCertificate"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006\n  Bad request.\n- E.SC.API.0096001\n  Invalid parameter limit.\n- E.SC.API.0096002\n  Invalid parameter starting after."
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0096001",
                  "message": "Invalid parameter limit.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/certificates/{device_id}": {
      "get": {
        "tags": [
          "Certificate"
        ],
        "summary": "GetDeviceCertificate",
        "description": "The information for a specific Edge Device (device ID) within a group.",
        "operationId": "get_device_certificate",
        "parameters": [
          {
            "description": "Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceCertificate"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0097001  \n  Not found.  \n- E.SC.API.0097002  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Certificate"
        ],
        "summary": "UpdateDeviceCertificate",
        "description": "Updates the device certificate information for a specific Edge Device.",
        "operationId": "update_device_certificate",
        "parameters": [
          {
            "description": "Device ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDeviceCertificateJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0091001  \n  Json format is invalid.  \n- E.SC.API.0091002  \n  Parameter device_id is not set.  \n- E.SC.API.0091007  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0091005  \n  Not found.  \n- E.SC.API.0091009  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000016  \n  Unsupported media type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000016",
                  "message": "Unsupported media type.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0091006  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}/property": {
      "get": {
        "tags": [
          "Device Command"
        ],
        "summary": "GetDeviceProperty",
        "description": "Get Property of the Edge System Software. Property is a data format for storing information about the Edge System Software on a device. Property includes Configuration which is used to set desired state from the cloud to the device, and State which is used to report current state from the device to the cloud.",
        "operationId": "get_device_property",
        "parameters": [
          {
            "description": "Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Property"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0304001  \n  Not found.  \n- E.SC.API.0304002  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Device Command"
        ],
        "summary": "UpdateDeviceConfiguration",
        "description": "Updates the Configuration of a device. All fields under the specified Property name will be updated.",
        "operationId": "update_device_configuration",
        "parameters": [
          {
            "description": "Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "description": "Whether the response includes updated Configuration or not.",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "name": "include_updated_conf",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConfigurationJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS",
                      "example": "SUCCESS"
                    },
                    "configuration": {
                      "$ref": "#/components/schemas/ConfigurationResponse"
                    }
                  },
                  "description": "Get the Configuration."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0306001  \n  Invalid parameter device_id.  \n- E.SC.API.0306002  \n  A value of a property is invalid due to the limitations of the property or invalid type.  \n- E.SC.API.0306003  \n  A Value is missing when building the payload.  \n- E.SC.API.0306004  \n  payload validation is not passed.  \n- E.SC.API.0306005  \n  The value is against the rules of payload.  \n- E.SC.API.0306006  \n  The DTMI is not registered .  \n- E.SC.API.0306007  \n  The device type is not supported.  \n- E.SC.API.0306008  \n  The device type does not support the twin .  \n- E.SC.API.0306009  \n  Unable to connect to device.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000016  \n  Unsupported media type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000016",
                  "message": "Unsupported media type.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}/modules/{module_id}": {
      "get": {
        "tags": [
          "Device Command"
        ],
        "summary": "GetProperty",
        "description": "Get Property of a specified module. Property is a data format for storing information about the Edge System Software or Edge Applications on a device.​ Property includes Configuration which is used to set desired state from the cloud to the device, and State which is used to report current state from the device to the cloud.",
        "operationId": "get_property",
        "parameters": [
          {
            "description": "Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "description": "Module ID. When the destination is System App, specify $system.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "module_id",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "property": {
                      "$ref": "#/components/schemas/Property"
                    },
                    "module_id": {
                      "type": "string"
                    },
                    "$metadata": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0285001  \n  Not found.  \n- E.SC.API.0285002  \n  Not found.  \n- E.SC.API.0285003  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0285004  \n  The specified module_id has not been deployed.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "W.SC.API.0000010",
                  "message": "Conflict.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}/modules/{module_id}/property": {
      "get": {
        "tags": [
          "Device Command"
        ],
        "summary": "GetModuleProperty",
        "description": "Get Property of a specified module. Property is a data format for storing information about the Edge Applications on a device. Property includes Configuration which is used to set desired state from the cloud to the device, and State which is used to report current state from the device to the cloud.",
        "operationId": "get_module_property",
        "parameters": [
          {
            "description": "Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "description": "Module ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "module_id",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Property"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0305001  \n  Not found.  \n- E.SC.API.0305002  \n  Not found.  \n- E.SC.API.0305003  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Device Command"
        ],
        "summary": "UpdateModuleConfiguration",
        "description": "Updates the Configuration of a specific module. All fields under the specified Property name will be updated.",
        "operationId": "update_module_configuration",
        "parameters": [
          {
            "description": "Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "description": "Module ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "module_id",
            "in": "path"
          },
          {
            "description": "Whether the response includes updated Configuration or not.",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "name": "include_updated_conf",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConfigurationJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS",
                      "example": "SUCCESS"
                    },
                    "configuration": {
                      "$ref": "#/components/schemas/ConfigurationResponse"
                    }
                  },
                  "description": "Get the Configuration."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0307001  \n  Invalid parameter device_id.  \n- E.SC.API.0307002  \n  Invalid parameter module_id.  \n- E.SC.API.0307003  \n  A value of a property is invalid due to the limitations of the property or invalid type.  \n- E.SC.API.0307004  \n  A Value is missing when building the payload.  \n- E.SC.API.0307005  \n  payload validation is not passed.  \n- E.SC.API.0307006  \n  The value is against the rules of payload.  \n- E.SC.API.0307007  \n  The DTMI is not registered .  \n- E.SC.API.0307008  \n  The device type is not supported.  \n- E.SC.API.0307009  \n  The device type does not support the twin .  \n- E.SC.API.0307010  \n  Unable to connect to device.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000016  \n  Unsupported media type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000016",
                  "message": "Unsupported media type.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}/command": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "ExecuteDeviceCommand",
        "description": "Synchronously executes commands like device initialization and rebooting based on the parameters defined in the DTDL.",
        "operationId": "execute_device_command",
        "parameters": [
          {
            "description": "Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecuteCommandJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response (Response from the device must be included in this HTTP response body as \"command_response\". Respond with 200 HTTP status code regardless of response from the device. If the response from device is not SUCCESS, response parameter \"result\" should be WARNING)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS or WARNING."
                    },
                    "command_response": {
                      "type": "object",
                      "description": "Response from the device."
                    }
                  }
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0308001  \n  Invalid parameter device_id.  \n- E.SC.API.0308002  \n  Parameter command_name is not set.  \n- E.SC.API.0308003  \n  Unable to connect to Device.  \n- E.SC.API.0308004  \n  A Value is missing when building the payload.  \n- E.SC.API.0308005  \n  A value of a property is invalid due to the limitations of the property or invalid type.  \n- E.SC.API.0308006  \n  The parameter is missing when building the payload.  \n- E.SC.API.0308007  \n  Payload validation is not passed.  \n- E.SC.API.0308008  \n  The value is against the rules of payload.  \n- E.SC.API.0308009  \n  The DTMI is not registered.  \n- E.SC.API.0308010  \n  The device type is not supported.  \n- E.SC.API.0308011  \n  The device type does not support the command.  \n- E.SC.API.0308012  \n  Unable to connect to device.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000009  \n  Timeout occurred when requesting device.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.*yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000009",
                  "message": "Timeout occurred when requesting device.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000016  \n  Unsupported media type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000016",
                  "message": "Unsupported media type.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}/modules/{module_id}/command": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "ExecuteCommand",
        "description": "Synchronously executes commands like device initialization and rebooting based on the parameters defined in the DTDL.",
        "operationId": "execute_command",
        "parameters": [
          {
            "description": "Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "description": "Module ID. When the destination is System App, specify $system.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "module_id",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecuteCommandJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response (Response from the device must be included in this HTTP response body as \"command_response\". Respond with 200 HTTP status code regardless of response from the device. If the response from device is not SUCCESS, response parameter \"result\" should be WARNING)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- W.SC.API.0288007  \n  Device responded with an error when requested. Result = {0}  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0288001  \n  Invalid parameter device_id.  \n- E.SC.API.0288002  \n  Parameter command_name is not set.  \n- E.SC.API.0288003  \n  Invalid Parameter contents.  \n- E.SC.API.0288005  \n  Unable to connect to Device.  \n- E.SC.API.0288006  \n  Invalid parameter module_id.  \n- E.SC.API.0288008  \n  payload validation is not passed.  \n- E.SC.API.0288009  \n  A Value is missing when building the payload.  \n- E.SC.API.0288010  \n  A value of a property is invalid due to the limitations of the property or invalid type.  \n- E.SC.API.0288011  \n  The value is against the rules of payload.  \n- E.SC.API.0288012  \n  The DTMI is not registered.  \n- E.SC.API.0288013  \n  The device type does not support the command.  \n- E.SC.API.0288014  \n  Unable to connect to device.  \n- E.SC.API.0288015  \n  The device type is not supported.  \n- E.SC.API.0288016  \n  The parameter is missing when building the payload.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000009  \n  Timeout occurred when requesting device.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.*yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000009",
                  "message": "Timeout occurred when requesting device.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000016  \n  Unsupported media type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000016",
                  "message": "Unsupported media type.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/deploy_configs": {
      "get": {
        "tags": [
          "Deploy"
        ],
        "summary": "GetDeployConfigurations",
        "description": "Extracts and lists the settings of the Deploy Configuration.",
        "operationId": "get_deploy_configurations",
        "parameters": [
          {
            "description": "Number of the items to fetch information.  \nValue range: 1 to 256",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "Retrieves additional data beyond the number of targets specified by the query parameter (limit). Specify the value obtained from the response (continuation_token) to fetch the next data.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "starting_after",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "deploy_configs",
                    "continuation_token"
                  ],
                  "properties": {
                    "continuation_token": {
                      "type": "string",
                      "nullable": true,
                      "description": "Last token of extracted data. If there is no continuation data, it will be empty."
                    },
                    "deploy_configs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DeployConfiguration"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006\n  Bad request.\n- E.SC.API.0020001\n  Invalid parameter limit.\n- E.SC.API.0020002\n  Invalid parameter starting after."
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0020001",
                  "message": "Invalid parameter limit.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Deploy"
        ],
        "summary": "CreateDeployConfiguration",
        "description": "Creates the Deploy Configuration. The registration will include the following features:\n- Edge System Software\n- AI model\n- Edge App\n- AI model bundle",
        "operationId": "create_deploy_configuration",
        "parameters": [
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeployConfigurationJsonBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0022001  \n  Parameter config_id is not set.  \n- E.SC.API.0022002  \n  Invalid parameter config_id.  \n- E.SC.API.0022010  \n  The specified parameter config_id is registered.  \n- E.SC.API.0022023  \n  Invalid parameter description.  \n- E.SC.API.0022017  \n  Bad request.  \n- E.SC.API.0022018  \n  Invalid parameter edge_system_sw_package.  \n- E.SC.API.0022019  \n  Invalid parameter models or edge_apps or model_bundles.  \n- E.SC.API.0022021  \n  Invalid parameter model_ids.  \n- E.SC.API.0022022  \n  Invalid parameter edge_apps.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0022011  \n  Not found.  \n- E.SC.API.0022012  \n  Not found.  \n- E.SC.API.0022013  \n  Not found.  \n- E.SC.API.0022024  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000016  \n  Unsupported media type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000016",
                  "message": "Unsupported media type.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/deploy_configs/{config_id}": {
      "get": {
        "tags": [
          "Deploy"
        ],
        "summary": "GetDeployConfiguration",
        "description": "Lists the information of specified Deploy Configuration.",
        "operationId": "get_deploy_configuration",
        "parameters": [
          {
            "description": "Deploy Configuration ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Deploy Configuration ID"
            },
            "name": "config_id",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeployConfiguration"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse",
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0021001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Deploy"
        ],
        "summary": "DeleteDeployConfiguration",
        "description": "Deletes the specified Deploy Configuration.",
        "operationId": "delete_deploy_configuration",
        "parameters": [
          {
            "description": "Configuration ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "config_id",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0055002  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/deploy_configs/{config_id}/apply": {
      "post": {
        "tags": [
          "Deploy"
        ],
        "summary": "DeployByConfiguration",
        "description": "   Deploys the following features specified by the Deploy Configuration to Edge Devices: \n   - Edge System Software   \n   - AI model\n   - Edge App",
        "operationId": "deploy_by_configuration",
        "parameters": [
          {
            "description": "Setting ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "config_id",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeployByConfigurationJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploySuccessResponse"
                },
                "examples": {
                  "1": {
                    "summary": "Success Example",
                    "value": {
                      "result": "SUCCESS",
                      "deploy_id": "12345"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0027001  \n  Parameter device_ids is not set.  \n- E.SC.API.0027005  \n  Bad request.  \n- E.SC.API.0027006  \n  Unable to connect to device. device_ids = {0}  \n- E.SC.API.0027010  \n  Invalid parameter device_id.  \n- E.SC.API.0027011  \n  Bad request.  \n- E.SC.API.0027017  \n  Model includes DCPU, but device does not support DCPU. device_ids = {0}\n- E.SC.API.0027018  \n  Invalid parameter description.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  \n- E.SC.API.0027015  \n  Unauthorized operation.  \n- E.SC.API.0027019  \n  Unauthorized operation.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0027003  \n  Not found.  \n- E.SC.API.0027004  \n  Not found.   \n- E.SC.API.0027014  \n  Model does not found.  \n- E.SC.API.0027016  \n  Device app does not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000016  \n  Unsupported media type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000016",
                  "message": "Unsupported media type.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.   \n- E.SC.API.0027020  \n  Internal server error.   "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}/deploys/{deploy_id}/cancel": {
      "post": {
        "tags": [
          "Deploy"
        ],
        "summary": "CancelDeployment",
        "description": "Cancels the deployment of core features such as Edge System softwares, AI models, and Edge Applications that run on the Edge Device. This operation cancels the deployment for Edge Devices that have not yet received it. If the device already received the deployment, this operation does not change anything.",
        "operationId": "cancel_deployment",
        "parameters": [
          {
            "description": "Device ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "description": "Deploy ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "deploy_id",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0166003  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0166001  \n  Not found.  \n- E.SC.API.0166002  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0166004  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}/deploys": {
      "get": {
        "tags": [
          "Deploy"
        ],
        "summary": "GetDeviceDeployHistory",
        "description": "Returns the deployment history of core features such as Edge System softwares, AI models, and Edge Applications that run on the Edge Device.",
        "operationId": "get_device_deploy_history",
        "parameters": [
          {
            "description": "Device ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "description": "Number of the items to fetch information.  \nValue range: 1 to 256",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "Retrieves additional data beyond the number of targets specified by the query parameter (limit). Specify the value obtained from the response (continuation_token) to fetch the next data.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "starting_after",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "deploys",
                    "continuation_token"
                  ],
                  "properties": {
                    "continuation_token": {
                      "type": "string",
                      "nullable": true,
                      "description": "Last token of extracted data. If there is no continuation data, it will be empty."
                    },
                    "deploys": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DeviceDeployHistory"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006\n  Bad request.\n- E.SC.API.0028001\n  Invalid parameter limit.\n- E.SC.API.0028002\n  Invalid parameter starting after."
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0028002",
                  "message": "Invalid parameter starting after.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/deploy_history": {
      "get": {
        "tags": [
          "Deploy"
        ],
        "summary": "GetDeployHistory",
        "description": "Lists the deployment history.",
        "operationId": "get_deploy_history",
        "parameters": [
          {
            "description": "Number of the items to fetch information.  \nValue range: 1 to 256",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "Retrieves additional data beyond the number of targets specified by the query parameter (limit). Specify the value obtained from the response (continuation_token) to fetch the next data.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "starting_after",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "deploy_history",
                    "continuation_token"
                  ],
                  "properties": {
                    "continuation_token": {
                      "type": "string",
                      "nullable": true,
                      "description": "Last token of extracted data. If there is no continuation data, it will be empty."
                    },
                    "deploy_history": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DeployHistory"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006\n  Bad request.\n- E.SC.API.0273005\n  Invalid parameter limit.\n- E.SC.API.0273006\n  Invalid parameter starting after."
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0273005",
                  "message": "Invalid parameter limit.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/deploy_history/{deploy_id}": {
      "get": {
        "tags": [
          "Deploy"
        ],
        "summary": "GetDeployStatus",
        "description": "Returns the status of specified deployment ID.",
        "operationId": "get_deploy_status",
        "parameters": [
          {
            "description": "Deployment ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "deploy_id",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeployStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0274001  \n  Invalid parameter deploy_type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0274002  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/models/{model_id}/devices/{device_id}/deploy": {
      "post": {
        "tags": [
          "Deploy"
        ],
        "summary": "DeployDeviceModel",
        "description": "Deploys the device model to the specified Edge Device.",
        "operationId": "deploy_device_model",
        "parameters": [
          {
            "description": "ID of the AI model.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the AI model."
            },
            "name": "model_id",
            "in": "path"
          },
          {
            "description": "Device ID.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Device ID."
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "description": "Version number.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Version number.",
              "default": ""
            },
            "name": "version_number",
            "in": "query"
          },
          {
            "description": "Replace model ID.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Replace model ID.",
              "default": ""
            },
            "name": "replace_model_id",
            "in": "query"
          },
          {
            "description": "Description of the subject. The maximum number of characters that can be specified is 100.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Description",
              "default": ""
            },
            "name": "description",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0059003  \n  Bad request.  \n- E.SC.API.0059004  \n  Bad request.  \n- E.SC.API.0059006  \n  Bad request.  \n- E.SC.API.0059008  \n  Bad request.  \n- E.SC.API.0059011  \n  Invalid parameter description.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  \n- E.SC.API.0059010  \n  Unauthorized operation.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0059001  \n  Not found.  \n- E.SC.API.0059002  \n  Not found.  \n- E.SC.API.0059005  \n  Not found.  \n- E.SC.API.0059007  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/devicegroups": {
      "get": {
        "tags": [
          "Manage Devices"
        ],
        "summary": "GetDeviceGroups",
        "description": "Lists the information of registered Edge Devices included in the specified group. By specifying the device ID in the query parameter, you can also verify to which group the device belongs.",
        "operationId": "get_device_groups",
        "parameters": [
          {
            "description": "Number of the items to fetch information.  \nValue range: 1 to 256",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "Retrieves additional data beyond the number of targets specified by the query parameter (limit). Specify the value obtained from the response (continuation_token) to fetch the next data.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "starting_after",
            "in": "query"
          },
          {
            "required": false,
            "description": "ID of the device groups. *Fuzzy searching is available.",
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "device_group_id",
            "in": "query"
          },
          {
            "required": false,
            "description": "Description of the subject. *Fuzzy searching is available.",
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "description",
            "in": "query"
          },
          {
            "required": false,
            "description": "Device IDs within the corresponding group.\nReturns a list of device groups that includes the specified device ID.",
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "device_id",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "device_groups",
                    "continuation_token"
                  ],
                  "properties": {
                    "continuation_token": {
                      "type": "string",
                      "nullable": true,
                      "description": "Last token of extracted data. If there is no continuation data, it will be empty."
                    },
                    "device_groups": {
                      "type": "array",
                      "description": "Provides a list of subordinate elements in ascending order of the device group IDs.",
                      "items": {
                        "$ref": "#/components/schemas/DeviceGroup"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006\n  Bad request.\n- E.SC.API.0031001\n  Invalid parameter limit.\n- E.SC.API.0031002\n  Invalid parameter starting after."
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0031001",
                  "message": "Invalid parameter limit.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Manage Devices"
        ],
        "summary": "CreateDeviceGroup",
        "description": "Creates a new device group.",
        "operationId": "create_device_group",
        "parameters": [
          {
            "description": "Name of the device group.  \nGroup names should be in single-byte characters and the maximum number of characters that can be specified is 100. Half-width commas are not allowed. ",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_group_id",
            "in": "query"
          },
          {
            "description": "Description of the subject. The maximum number of characters that can be specified is 100.",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "description",
            "in": "query"
          },
          {
            "description": "Included device ID.  \nIf there are multiple targets: \n * use comma separation\n * avoid using same values",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "device_id",
            "in": "query"
          },
          {
            "description": "To remove the device belonging to multiple groups, configure the following:  \n- Value definition:\n  0: Do not delete  \n  1: Delete",
            "required": false,
            "schema": {
              "type": "string",
              "default": "0"
            },
            "name": "del_from_dgroup",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0033001  \n  Parameter device_group_id is not set.  \n- E.SC.API.0033002  \n  Invalid parameter device_group_id.  \n- E.SC.API.0033003  \n  Invalid parameter device_type.  \n- E.SC.API.0033004  \n  Invalid parameter device_id.  \n- E.SC.API.0033005  \n  Parameter device_group_id is registered.  \n- E.SC.API.0033009  \n  Invalid parameter del_from_dgroup. \n- E.SC.API.0033010  \n  Invalid parameter description.   "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0033006  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/devicegroups/{device_group_id}": {
      "get": {
        "tags": [
          "Manage Devices"
        ],
        "summary": "GetDeviceGroup",
        "description": "Lists the information for specific device groups (device group ID).",
        "operationId": "get_device_group",
        "parameters": [
          {
            "description": "The name of a device group.\nGroup names should be in single-byte characters and be specified within 100 characters. Half-width commas are not allowed. ",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_group_id",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceGroup"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0032001  \n  Not found.  \n- E.SC.API.0032002  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Manage Devices"
        ],
        "summary": "DeleteDeviceGroup",
        "description": "Deletes the device registration specified by the device_id.",
        "operationId": "delete_device_group",
        "parameters": [
          {
            "description": "ID of device group that you want to delete.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_group_id",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0035001  \n  Bad request.  \n- E.SC.API.0035002  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- W.SC.API.0035003  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0035004  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Manage Devices"
        ],
        "summary": "UpdateDeviceGroup",
        "description": "Performs device registration, deletion, and update within the specified device group.",
        "operationId": "update_device_group",
        "parameters": [
          {
            "description": "Name of the device group that you want to update.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_group_id",
            "in": "path"
          },
          {
            "description": "Description of the subject. The maximum number of characters that can be specified is 100.  \nTo delete the description, specify \"@@nullupdate\".  \n\n*An error will occur if description and device_id are not set.",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "description",
            "in": "query"
          },
          {
            "description": "The affiliated device ID you want to replace.  \nTo disaffiliate the device ID, specify \"@@nullupdate\".  \nIf there are multiple targets: \n* use comma separation\n* avoid using same values  \n\n*An error will occur if description and device_id are not set.",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "device_id",
            "in": "query"
          },
          {
            "description": "Specify whether or not to disaffiliate the device from the default group.\n- Value definition:  \n  0: Do not delete  \n  1: Delete",
            "required": false,
            "schema": {
              "type": "string",
              "default": "0"
            },
            "name": "del_from_dgroup",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0034002  \n  Bad request.  \n- E.SC.API.0034003  \n  Parameter is not set.  \n- E.SC.API.0034008  \n  Bad request.  \n- E.SC.API.0034009  \n  Invalid parameter del_from_dgroup.  \n- E.SC.API.0034010  \n  Invalid parameter description.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0034004  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0034005  \n  Internal server error.  \n- W.SC.API.0034006  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}/eventlogs": {
      "get": {
        "tags": [
          "Manage Devices"
        ],
        "summary": "GetEventLogs",
        "description": "Returns the event log for a specified Edge Device.",
        "operationId": "get_event_logs",
        "parameters": [
          {
            "description": "Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "description": "Number of the items to fetch information.  \nValue range: 1 to 256",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "Retrieves additional data beyond the number of targets specified by the query parameter (limit). Specify the value obtained from the response (continuation_token) to fetch the next data.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "starting_after",
            "in": "query"
          },
          {
            "description": "Date and time (From).\n- Format: yyyyMMddThhmmss.SSSSSS or yyyy-MM-ddThh:mm:ss.SSSSSS (ISO-8601)\n- The time range between from_datetime and to_datetime must not exceed the retention period.",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "from_datetime",
            "in": "query"
          },
          {
            "description": "Date and time (To).\n- Format: yyyyMMddThhmmss.SSSSSS or yyyy-MM-ddThh:mm:ss.SSSSSS (ISO-8601)\n- It must not be before or equal the value of from_datetime.\n- The time range between from_datetime and to_datetime must not exceed the retention period.",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "to_datetime",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "devices",
                    "continuation_token"
                  ],
                  "properties": {
                    "continuation_token": {
                      "type": "string",
                      "nullable": true,
                      "description": "Last token of extracted data. If there is no continuation data, it will be empty."
                    },
                    "event_logs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EventLog"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006\n  Bad request.\n- E.SC.API.0194005\n  Invalid parameter limit.\n- E.SC.API.0194006\n  Invalid parameter starting after.\n- E.SC.API.0194007  \n  Invalid parameter from_datetime.\n- E.SC.API.0194008  \n  Invalid parameter to_datetime.  \n- E.SC.API.0213009\n  to_datetime timestamp must not be before or equal to from_datetime\n- E.SC.API.0213010\n  The time range between from_datetime and to_datetime exceeds the retention period."
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0194005",
                  "message": "Invalid parameter limit.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}/applogs": {
      "get": {
        "tags": [
          "Manage Devices"
        ],
        "summary": "GetEdgeAppLogs",
        "description": "Returns logs output by the Edge Application on a specific Edge Device.",
        "operationId": "get_edge_app_logs",
        "parameters": [
          {
            "description": "Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "description": "Number of the items to fetch information.  \nValue range: 1 to 256",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "Retrieves additional data beyond the number of targets specified by the query parameter (limit). Specify the value obtained from the response (continuation_token) to fetch the next data.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "starting_after",
            "in": "query"
          },
          {
            "description": "Date and time (From).\n- Format: yyyyMMddThhmmss.SSSSSS or yyyy-MM-ddThh:mm:ss.SSSSSS (ISO-8601)\n- The time range between from_datetime and to_datetime must not exceed the retention period.",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "from_datetime",
            "in": "query"
          },
          {
            "description": "Date and time (To).\n- Format: yyyyMMddThhmmss.SSSSSS or yyyy-MM-ddThh:mm:ss.SSSSSS (ISO-8601)\n- It must not be before or equal the value of from_datetime.\n- The time range between from_datetime and to_datetime must not exceed the retention period.",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "to_datetime",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "logs",
                    "continuation_token"
                  ],
                  "properties": {
                    "continuation_token": {
                      "type": "string",
                      "nullable": true,
                      "description": "Last token of extracted data. If there is no continuation data, it will be empty."
                    },
                    "logs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AppLog"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006\n  Bad request.\n- E.SC.API.0213005\n  Invalid parameter limit.\n- E.SC.API.0213006\n  Invalid parameter starting after.\n- E.SC.API.0213007  \n  Invalid parameter from_datetime.\n- E.SC.API.0213008  \n  Invalid parameter to_datetime.\n- E.SC.API.0213009\n  to_datetime timestamp must not be before or equal to from_datetime\n- E.SC.API.0213010\n  The time range between from_datetime and to_datetime exceeds the retention period."
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0213005",
                  "message": "Invalid parameter limit.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0213004  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/models/training_kits": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetTrainingKits",
        "description": "Returns a list of specific training kit information.",
        "operationId": "get_training_kits",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "asc"
            },
            "name": "order_by",
            "description": "Sort order: Sorted by the training kit creation date.\nValue range: desc or asc",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "training_kits"
                  ],
                  "properties": {
                    "training_kits": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TrainingKit"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0159001  \n  Invalid parameter status.  \n- E.SC.API.0159002  \n  Invalid parameter training_kit_type.  \n- E.SC.API.0159003  \n  Invalid parameter order_by.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0159005  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetProjects",
        "description": "Searches and returns projects that match the conditions specified in the parameter. If no parameters are specified, all created projects are returned.",
        "operationId": "get_projects",
        "parameters": [
          {
            "description": "Name of the project. *Fuzzy searching is available.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "project_name",
            "in": "query"
          },
          {
            "description": "Specifies the AI model platform. \n - Value definition:  \n   0: Custom Vision  \n   1: Non-Custom Vision",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "model_platform",
            "in": "query"
          },
          {
            "description": "Specifies the project type. \n - Value definition:  \n   0: Base model  \n   1: Device model  ",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "project_type",
            "in": "query"
          },
          {
            "description": "Sorts the device ID.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "query"
          },
          {
            "description": "To return the project property, set \"true\". ",
            "required": false,
            "schema": {
              "type": "string",
              "default": "0"
            },
            "name": "include_training_flg",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "model_projects"
                  ],
                  "properties": {
                    "model_projects": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ModelProject"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006\n  Bad request.\n- E.SC.API.0071001\n  Invalid parameter model_platform.\n- E.SC.API.0071002\n  Invalid parameter project_type.\n- E.SC.API.0071003\n  Invalid parameter include_training_flg."
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0071001",
                  "message": "Invalid parameter model_platform.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/base": {
      "post": {
        "tags": [
          "Train Model"
        ],
        "summary": "CreateBaseProject",
        "description": "Creates a new project for a base model.",
        "operationId": "create_base_project",
        "parameters": [
          {
            "description": "Name of the project. The maximum number of characters that can be specified is 50.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_name",
            "in": "query"
          },
          {
            "description": "Specifies the ID of the training kit to use.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "training_kit",
            "in": "query"
          },
          {
            "description": "Description of the subject. The maximum number of characters that can be specified is 100.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "comment",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0044001  \n  Parameter project_name is not set.  \n- E.SC.API.0044002  \n  Invalid parameter project_name.  \n- E.SC.API.0044003  \n  Invalid parameter comment.  \n- E.SC.API.0044004  \n  The specified parameter project_name is registered.  \n- E.SC.API.0044005  \n  Invalid parameter training_kit.  \n- E.SC.API.0044006  \n  Parameter training_kit is not set.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/device": {
      "post": {
        "tags": [
          "Train Model"
        ],
        "summary": "CreateDeviceProject",
        "description": "Creates a project for the device model by using the specified model's base model.",
        "operationId": "create_device_project",
        "parameters": [
          {
            "description": "Name of the project. The maximum number of characters that can be specified is 50.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_name",
            "in": "query"
          },
          {
            "description": "ID of the AI model.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "model_id",
            "in": "query"
          },
          {
            "description": "Sorts the device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "query"
          },
          {
            "description": "Version number. The default version is set to the latest one.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "version_number",
            "in": "query"
          },
          {
            "description": "Description of the subject. The maximum number of characters that can be specified is 100.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "comment",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0046001  \n  Parameter model_id is not set.  \n- E.SC.API.0046002  \n  Parameter device_id is not set.  \n- E.SC.API.0046003  \n  Invalid parameter device_id.  \n- E.SC.API.0046004  \n  Parameter project_name is not set.  \n- E.SC.API.0046005  \n  Invalid parameter project_name.  \n- E.SC.API.0046006  \n  Invalid parameter comment.  \n- E.SC.API.0046007  \n  The specified parameter project_name is registered.  \n- E.SC.API.0046010  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0046008  \n  Not found.  \n- E.SC.API.0046009  \n  Not found.  \n- E.SC.API.0046012  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0046011  \n  Internal server error.  \n- E.SC.API.0046014  \n  Internal server error.  \n- E.SC.API.0046015  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_name}": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetProject",
        "description": "Returns a list of specific project's information.",
        "operationId": "get_project",
        "parameters": [
          {
            "description": "Name of the project.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_name",
            "in": "path"
          },
          {
            "description": "To return the project property, set \"true\". ",
            "required": false,
            "schema": {
              "type": "string",
              "default": "0"
            },
            "name": "include_training_flg",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelProjectInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0054001  \n  Not found.  \n- E.SC.API.0054002  \n  Invalid parameter include_training_flg.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Train Model"
        ],
        "summary": "DeleteProject",
        "description": "Deletes the created model. \n*To delete a model in process of creation, use DeleteModel instead.",
        "operationId": "delete_project",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_name",
            "description": "Name of the project.",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0079004  \n  Bad request.  \n- W.SC.API.0079005  \n  Since preparations for deletion have not been completed  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0079003  \n  Not found.  \n- W.SC.API.0079001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_name}/save": {
      "post": {
        "tags": [
          "Train Model"
        ],
        "summary": "SaveModel",
        "description": "Saves the pre-converted model (projects of base model or device model).",
        "operationId": "save_model",
        "parameters": [
          {
            "description": "Name of the project.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_name",
            "in": "path"
          },
          {
            "description": "ID of the AI model. The maximum number of characters that can be specified is 20 single-byte ones. \n*Available only when registering a new base model.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "model_id",
            "in": "query"
          },
          {
            "description": "An initial version number of the AI model to be saved. \n*Available only when registering a new base model.\n- Value range: 1 to 99  ",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "1"
            },
            "name": "initial_version_number",
            "in": "query"
          },
          {
            "description": "Description of the functionality. The maximum number of characters that can be specified is 100. \n*Available only when registering a new base model.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "functionality",
            "in": "query"
          },
          {
            "description": "Name of the vendor. The maximum number of characters that can be specified is 100. \n*Available only when registering a new base model.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "vendor_name",
            "in": "query"
          },
          {
            "description": "Description of the subject. The maximum number of characters that can be specified is 100. \n*If the description is saved for the first time, it will be applied for both model and its version. \n*When updating the content, it will be registered as a description for the version. ",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "comment",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0045001  \n  Parameter model_id is not set.  \n- E.SC.API.0045002  \n  Invalid parameter model_id.  \n- E.SC.API.0045003  \n  Invalid parameter initial_version_number.  \n- E.SC.API.0045004  \n  Invalid parameter functionality.  \n- E.SC.API.0045005  \n  Invalid parameter vendor_name.  \n- E.SC.API.0045006  \n  Invalid parameter comment.  \n- E.SC.API.0045008  \n  The specified parameter model_id is registered.  \n- E.SC.API.0045009  \n  Bad request.  \n- E.SC.API.0045014  \n  Bad request.  \n- E.SC.API.0045015  \n  Bad request.  \n- E.SC.API.0045018  \n  Bad request.  \n- E.SC.API.0045019  \n  Bad request.  \n- E.SC.API.0045020  \n  Bad request.  \n- E.SC.API.0045021  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  \n- E.SC.API.0045022  \n  Unauthorized operation.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0045007  \n  Not found.  \n- E.SC.API.0045011  \n  Not found.  \n- E.SC.API.0045013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000017  \n  Too many requests for the Re-learning Service. Please run it again after a while.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000017",
                  "message": "Too many requests for the Re-learning Service. Please run it again after a while.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0045016  \n  Internal server error.  \n- E.SC.API.0045017  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_name}/relearn": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetRelearnStatus",
        "description": "The retraining status of a specific model.",
        "operationId": "get_relearn_status",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_name",
            "description": "Name of the project.",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS"
                    },
                    "status": {
                      "type": "string",
                      "description": "The retraining status. \n- Value definition:  \nTraining  \nCompleted"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0075001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Train Model"
        ],
        "summary": "Relearn",
        "description": "Performs retraining to the specified project.",
        "operationId": "relearn",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_name",
            "description": "Name of the project.",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "Regular"
            },
            "name": "training_type",
            "description": "Training type. *Available only for Custom Vision projects.\n- Value definition:  \n  Regular: Facilitates rapid completion of the training. \n  Advanced: Increases the accuracy by specifying the training hours with reserved_budget_in_hours parameter.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The duration time to perform the retraining on Custom Vision projects. *This parameter is available when training_type is set to Advanced.",
            "name": "reserved_budget_in_hours",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS"
                    },
                    "iteration_id": {
                      "type": "string",
                      "description": "The iteration ID."
                    },
                    "iteration_name": {
                      "type": "string",
                      "description": "The iteration name."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0074002  \n  Bad request.  \n- E.SC.API.0074003  \n  Invalid parameter training_type.  \n- E.SC.API.0074004  \n  Invalid parameter reserved_budget_in_hours.  \n- E.SC.API.0074006  \n  Invalid parameter epochs.  \n- E.SC.API.0074010  \n  Not enough tags for training.  \n- E.SC.API.0074011  \n  Not enough images per tag for training. It is necessary to set 15 or more images for each tag.  \n- E.SC.API.0074012  \n  Not enough images per tag for training.  \n- E.SC.API.0074013  \n  Not enough images for training.  \n- E.SC.API.0074014  \n  One image cannot be set in multiple tags for Sts {0} project.  \n- E.SC.API.0074015  \n  Training not needed  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  \n- E.SC.API.0074009  \n  Unauthorized operation.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0074001  \n  Not found.  \n- E.SC.API.0074005  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0074008  \n  Training has already started for the project.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "W.SC.API.0000010",
                  "message": "Conflict.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0074007  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_name}/images/files": {
      "post": {
        "tags": [
          "Train Model"
        ],
        "summary": "ImportImagesFromFiles",
        "description": "Imports images into your project for retraining purposes.",
        "operationId": "import_images_from_files",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_name",
            "description": "Name of the project.",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportImagesFromFilesJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0065001  \n  Json format is invalid.  \n- E.SC.API.0065003  \n  The project is only used for import_dataset_file API.  \n- E.SC.API.0065004  \n  Image format contains invalid files.  \n- E.SC.API.0065005  \n  Image format contains invalid files.  \n- E.SC.API.0065008  \n  The specified functionality of training_kit_type [{0}] is not yet implemented.  \n- W.SC.API.0065006  \n  The import was successful. But I skipped over the invalid images.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0065002  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000016  \n  Unsupported media type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000016",
                  "message": "Unsupported media type.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_name}/images/scbloburls": {
      "post": {
        "tags": [
          "Train Model"
        ],
        "summary": "ImportImagesFromScblob",
        "description": "Imports images into your project from Azure Blob Storage for retraining purposes.",
        "operationId": "import_images_from_scblob",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_name",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportImagesFromScblobJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0064001  \n  Json format is invalid.  \n- E.SC.API.0064004  \n  Image format contains invalid files.  \n- E.SC.API.0064005  \n  The specified parameter container_url is not set.  \n- E.SC.API.0064006  \n  The specified URL is invalid.  \n- E.SC.API.0064008  \n  The project is only used for import_dataset_file API.  \n- E.SC.API.0064009  \n  The specified functionality of training_kit_type [{0}] is not yet implemented.  \n- W.SC.API.0064007  \n  The import was successful. But I skipped over the invalid images.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0064002  \n  Not found.  \n- E.SC.API.0064003  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000016  \n  Unsupported media type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000016",
                  "message": "Unsupported media type.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_id}/iterations": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetProjectIterations",
        "description": "Returns a list of specified project's iteration information.",
        "operationId": "get_project_iterations",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "ID of the project.",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "0.3"
            },
            "name": "overlap_threshold",
            "description": "The bounding box overlap threshold used to determine true predictions.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "0.5"
            },
            "name": "threshold",
            "description": "The threshold used to determine true predictions.",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "iterations"
                  ],
                  "properties": {
                    "iterations": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0129003  \n  Invalid parameter thresholds.  \n- E.SC.API.0129004  \n  Invalid parameter overlap_threshold.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0129001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0129002  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_id}/images": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetProjectImages",
        "description": "The images registered in a specified project and their information.",
        "operationId": "get_project_images",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "ID of the project.",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "iteration_id",
            "description": "ID of the iteration.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "newest"
            },
            "name": "order_by",
            "description": "Sort order: Sorted by the creation date of the image.\nValue range: newest, oldest  ",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "number",
              "default": 50
            },
            "name": "number_of_images",
            "description": "The number of images to acquire information. \nValue range: 0 to 256",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "number",
              "default": 0
            },
            "name": "skip",
            "description": "The number of images to skip acquiring information.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "resized"
            },
            "name": "image_size_type",
            "description": "Types of image sizes. *Available only for Custom Vision projects.\n- Value definition:  \n  resized  \n  thumbnail  \n  original",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "total_image_count",
                    "images"
                  ],
                  "properties": {
                    "total_image_count": {
                      "type": "integer",
                      "description": "The total number of images."
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Image"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0119001  \n  Invalid parameter order_by.  \n- E.SC.API.0119002  \n  Bad request.  \n- E.SC.API.0119003  \n  Bad request.  \n- E.SC.API.0119007  \n  Invalid parameter image_size_type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0119004  \n  Not found.  \n- E.SC.API.0119005  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0119006  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Train Model"
        ],
        "summary": "DeleteProjectImages",
        "description": "Deletes an image specified by its ID from the project.",
        "operationId": "delete_project_images",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "ID of the project.",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "image_ids",
            "description": "ID of images. *If you have multiple entries, separate them with commas. IDs can be specified from 1 to 256.",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0121001  \n  Parameter image_ids is not set.  \n- E.SC.API.0121002  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0121003  \n  Not found.  \n- W.SC.API.0121005  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0121004  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_id}/images/id": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetProjectImagesById",
        "description": "Returns a list of information for selected image IDs within a specified project.",
        "operationId": "get_project_images_by_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "ID of the project.",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "image_ids",
            "description": "ID of images. *If you have multiple entries, separate them with commas. IDs can be specified from 1 to 256.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "iteration_id",
            "description": "ID of the iteration.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "resized"
            },
            "name": "image_size_type",
            "description": "Types of image sizes. *Available only for Custom Vision projects.\n- Value definition:  \n  resized  \n  thumbnail  \n  original",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "images"
                  ],
                  "properties": {
                    "images": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Image"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0120001  \n  Parameter image_ids is not set.  \n- E.SC.API.0120002  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0120003  \n  Not found.  \n- E.SC.API.0120004  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0120005  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_id}/images/{image_id}/regionproposals": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetImageRegionProposals",
        "description": "Returns region proposals (inference result) for an image detection along with the specified image ID.",
        "operationId": "get_image_region_proposals",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "ID of the project.",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "image_id",
            "description": "ID of the image.",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "project_id",
                    "image_id",
                    "proposals"
                  ],
                  "properties": {
                    "project_id": {
                      "type": "string",
                      "description": "The project ID."
                    },
                    "image_id": {
                      "type": "string",
                      "description": "The image ID."
                    },
                    "proposals": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "confidence",
                          "bounding_box"
                        ],
                        "properties": {
                          "confidence": {
                            "type": "string",
                            "description": "The confidence score."
                          },
                          "bounding_box": {
                            "type": "object",
                            "properties": {
                              "left": {
                                "type": "number",
                                "description": "Left of the region (ratio of image size). *Available only for object detection."
                              },
                              "top": {
                                "type": "number",
                                "description": "Top of the region (ratio of image size). *Available only for object detection."
                              },
                              "width": {
                                "type": "number",
                                "description": "Width of the region (ratio of image size). *Available only for object detection."
                              },
                              "height": {
                                "type": "number",
                                "description": "Height of the region (ratio of image size). *Available only for object detection."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0164001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000017  \n  Too many requests for the Re-learning Service. Please run it again after a while.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000017",
                  "message": "Too many requests for the Re-learning Service. Please run it again after a while.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0164003  \n  Internal server error.  \n- E.SC.API.0164004  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_id}/images/regions": {
      "post": {
        "tags": [
          "Train Model"
        ],
        "summary": "CreateProjectImageRegions",
        "description": "Adds a tag to an image within a specified project.",
        "operationId": "create_project_image_regions",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "ID of the project.",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectImageRegionsJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "created"
                  ],
                  "properties": {
                    "created": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Region"
                      }
                    },
                    "duplicated": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Region"
                      }
                    },
                    "exceeded": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Region"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0126001  \n  Json format is invalid.  \n- E.SC.API.0126002  \n  Parameter image_id is not set.  \n- E.SC.API.0126003  \n  Parameter tag_id or tag_name is not set.  \n- E.SC.API.0126004  \n  Parameter left is not set.  \n- E.SC.API.0126005  \n  Parameter top is not set.  \n- E.SC.API.0126006  \n  Parameter width is not set.  \n- E.SC.API.0126007  \n  Parameter height is not set.  \n- E.SC.API.0126008  \n  Invalid parameter left.  \n- E.SC.API.0126009  \n  Invalid parameter top.  \n- E.SC.API.0126010  \n  Invalid parameter width.  \n- E.SC.API.0126011  \n  Invalid parameter height.  \n- E.SC.API.0126012  \n  Bad request.  \n- E.SC.API.0126013  \n  Bad request.  \n- E.SC.API.0126018  \n  Invalid Parameter tag_id.  \n- E.SC.API.0126019  \n  Invalid Parameter tag_name.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0126014  \n  Not found.  \n- E.SC.API.0126015  \n  Not found.  \n- E.SC.API.0126016  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000016  \n  Unsupported media type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000016",
                  "message": "Unsupported media type.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000017  \n  Too many requests for the Re-learning Service. Please run it again after a while.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000017",
                  "message": "Too many requests for the Re-learning Service. Please run it again after a while.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0126017  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Train Model"
        ],
        "summary": "UpdateProjectImageRegions",
        "description": "Updates tags applied to images within a specified project.",
        "operationId": "update_project_image_regions",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "Description of the subject.",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjectImageRegionsJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "created"
                  ],
                  "properties": {
                    "updated": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Region"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0128001  \n  Json format is invalid.  \n- E.SC.API.0128002  \n  Parameter region_id is not set.  \n- E.SC.API.0128003  \n  Parameter image_id is not set.  \n- E.SC.API.0128004  \n  Parameter tag_id or tag_name is not set.  \n- E.SC.API.0128005  \n  Parameter left is not set.  \n- E.SC.API.0128006  \n  Parameter top is not set.  \n- E.SC.API.0128007  \n  Parameter width is not set.  \n- E.SC.API.0128008  \n  Parameter height is not set.  \n- E.SC.API.0128009  \n  Invalid parameter left.  \n- E.SC.API.0128010  \n  Invalid parameter top.  \n- E.SC.API.0128011  \n  Invalid parameter width.  \n- E.SC.API.0128012  \n  Invalid parameter height.  \n- E.SC.API.0128013  \n  Bad request.  \n- E.SC.API.0128014  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0128015  \n  Not found.  \n- E.SC.API.0128016  \n  Not found.  \n- E.SC.API.0128017  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000016  \n  Unsupported media type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000016",
                  "message": "Unsupported media type.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000017  \n  Too many requests for the Re-learning Service. Please run it again after a while.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000017",
                  "message": "Too many requests for the Re-learning Service. Please run it again after a while.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0128018  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_id}/images/regions/{region_id}": {
      "delete": {
        "tags": [
          "Train Model"
        ],
        "summary": "DeleteProjectImageRegions",
        "description": "Removes tags from images within a specified project.",
        "operationId": "delete_project_image_regions",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "ID of the project.",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "region_id",
            "description": "ID of the region.",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0127001  \n  Not found.  \n- W.SC.API.0127003  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0127002  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_id}/tags": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetProjectTags",
        "description": "Returns a list of tags applied to a specific project.",
        "operationId": "get_project_tags",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "ID of the project.",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "iteration_id",
            "description": "ID of the iteration.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "asc"
            },
            "name": "order_by",
            "description": "Sort order: Sorted by the creation date of the tag.\nValue range: asc, desc  ",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "tags"
                  ],
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Tag"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0169001  \n  Bad request.  \n- E.SC.API.0169003  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0169002  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Train Model"
        ],
        "summary": "CreateProjectTag",
        "description": "Creates a new tag to a specified project.",
        "operationId": "create_project_tag",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "ID of the project.",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "tag_name",
            "description": "The name of the tag.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "description",
            "description": "Description of the subject.",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The project ID."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the tag."
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the subject."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the subject."
                    },
                    "image_count": {
                      "type": "string",
                      "description": "The number of tagged images."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0122001  \n  Parameter tag_name is not set.  \n- E.SC.API.0122002  \n  Invalid parameter type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0122003  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0122004  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_id}/tags/{tag_id}": {
      "delete": {
        "tags": [
          "Train Model"
        ],
        "summary": "DeleteProjectTag",
        "description": "Removes tags from a specified project.",
        "operationId": "delete_project_tag",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "ID of the project.",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "tag_id",
            "description": "ID of the tag.",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0124001  \n  Not found.  \n- W.SC.API.0124002  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0124003  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Train Model"
        ],
        "summary": "UpdateProjectTag",
        "description": "Updates tags applied to a specified project.",
        "operationId": "update_project_tag",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "ID of the project.",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "tag_id",
            "description": "ID of the tag.",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjectTagJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The project ID."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the tag."
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the subject."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the subject."
                    },
                    "image_count": {
                      "type": "string",
                      "description": "The number of tagged images."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0123001  \n  Json format is invalid.  \n- E.SC.API.0123002  \n  Parameter tag name to be updated is not set.  \n- E.SC.API.0123003  \n  Parameter tag description to be updated is not set.  \n- E.SC.API.0123004  \n  Parameter tag type to be updated is not set.  \n- E.SC.API.0123005  \n  Invalid parameter tag type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0123006  \n  Not found.  \n- W.SC.API.0123007  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000016  \n  Unsupported media type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000016",
                  "message": "Unsupported media type.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0123008  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_id}/tags/tagged_images": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetProjectTaggedImages",
        "description": "Returns information of tagged images within a specified project.",
        "operationId": "get_project_tagged_images",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "ID of the project.",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "tag_ids",
            "description": "ID of tags. *If you have multiple entries, separate them with commas.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "iteration_id",
            "description": "ID of the iteration.",
            "in": "query"
          },
          {
            "description": "The number of images to acquire information. \nValue range: 0 to 256",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50
            },
            "name": "number_of_images",
            "in": "query"
          },
          {
            "description": "The number of images to skip acquiring information.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "description": "Sort order: Sorted by the creation date of the image.\nValue range: newest, oldest",
            "required": false,
            "schema": {
              "type": "string",
              "default": "newest"
            },
            "name": "order_by",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "resized"
            },
            "name": "image_size_type",
            "description": "Types of image sizes. *Available only for Custom Vision projects.\n- Value definition:  \n  resized  \n  thumbnail  \n  original",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "total_image_count",
                    "tagged_images"
                  ],
                  "properties": {
                    "total_image_count": {
                      "type": "integer",
                      "description": "The total number of images."
                    },
                    "tagged_images": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Image"
                      }
                    },
                    "blank_tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tag_id": {
                            "type": "string",
                            "description": "ID of the tag."
                          },
                          "tag_name": {
                            "type": "string",
                            "description": "The name of the tag."
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the subject."
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the subject."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0125001  \n  Bad request.  \n- E.SC.API.0125002  \n  Bad request.  \n- E.SC.API.0125003  \n  Bad request.  \n- E.SC.API.0125004  \n  Invalid parameter order_by.  \n- E.SC.API.0125008  \n  Invalid parameter image_size_type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0125005  \n  Not found.  \n- E.SC.API.0125006  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0125007  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_id}/tags/untagged_images": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetProjectUntaggedImages",
        "description": "Returns information of untagged images within the specified project.",
        "operationId": "get_project_untagged_images",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "ID of the project.",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "iteration_id",
            "description": "ID of the iteration.",
            "in": "query"
          },
          {
            "description": "The number of images to acquire information. \nValue range: 0 to 256",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50
            },
            "name": "number_of_images",
            "in": "query"
          },
          {
            "description": "The number of images to skip acquiring information.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "description": "Sort order: Sorted by the creation date of the image.\nValue range: newest, oldest",
            "required": false,
            "schema": {
              "type": "string",
              "default": "newest"
            },
            "name": "order_by",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "resized"
            },
            "name": "image_size_type",
            "description": "Types of image sizes. *Available only for Custom Vision projects.\n- Value definition:  \n  resized  \n  thumbnail  \n  original",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "total_image_count",
                    "tagged_images"
                  ],
                  "properties": {
                    "total_image_count": {
                      "type": "integer",
                      "description": "The total number of images."
                    },
                    "untagged_images": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The image ID."
                          },
                          "created": {
                            "type": "string",
                            "description": "The date of creation."
                          },
                          "width": {
                            "type": "integer",
                            "description": "The width of the image."
                          },
                          "height": {
                            "type": "integer",
                            "description": "The height of the image."
                          },
                          "image": {
                            "type": "string",
                            "description": "Returns a base64-encoded image file."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0136001  \n  Bad request.  \n- E.SC.API.0136002  \n  Bad request.  \n- E.SC.API.0136003  \n  Invalid parameter order_by.  \n- E.SC.API.0136007  \n  Invalid parameter image_size_type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0136004  \n  Not found.  \n- E.SC.API.0136005  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0136006  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/models": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetModels",
        "description": "Returns a list of model information.",
        "operationId": "get_models",
        "parameters": [
          {
            "description": "Number of Models to fetch.\nValue range: 1 to 256",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "A token to use in pagination. starting_after is an object ID that defines your place in the list. For example, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo to fetch the next page of the list.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "starting_after",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "model_id",
            "description": "ID of the AI model. *Fuzzy searching is available.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "comment",
            "description": "Description of the subject. *Fuzzy searching is available.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "project_name",
            "description": "Name of the project. *Fuzzy searching is available.",
            "in": "query"
          },
          {
            "description": "Specifies the AI model platform. \n- Value definition:  \n  0: Custom Vision  \n  1: Non-Custom Vision",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "model_platform",
            "in": "query"
          },
          {
            "description": "Specifies the project type. \n- Value definition:  \n  0: Base model  \n  1: Device model  ",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "project_type",
            "in": "query"
          },
          {
            "description": "Sorts the device ID.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "name": "latest_type",
            "description": "Classification of the latest version. \n- Value definition:  \n  0: Latest version after publication.  \n  1: Latest version after completion of the conversion process or publication.",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "models",
                    "continuation_token"
                  ],
                  "properties": {
                    "models": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Model"
                      }
                    },
                    "continuation_token": {
                      "type": "string",
                      "nullable": true,
                      "description": "Last token of extracted data. Empty if there is no next data."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006\n  Bad request.\n- E.SC.API.0056001\n  Invalid parameter model_platform.\n- E.SC.API.0056002\n  Invalid parameter project_type.\n- E.SC.API.0056003\n  Invalid parameter latest_type.\n- E.SC.API.0056004\n  Invalid parameter limit.\n- E.SC.API.0056005\n  Invalid parameter starting after."
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0056004",
                  "message": "Invalid parameter limit.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Train Model"
        ],
        "summary": "ImportBaseModel",
        "description": "Imports a base model into your project. When registering a new model ID, it will be added accordingly. Specifying an existing ID will result in overwriting.",
        "operationId": "import_base_model",
        "parameters": [
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportBaseModelJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0047001  \n  Json format is invalid.  \n- E.SC.API.0047002  \n  Parameter model_id is not set.  \n- E.SC.API.0047003  \n  Invalid parameter model_id.  \n- E.SC.API.0047005  \n  Neither of  parameter model_list and model_file_id_list is set.  \n- E.SC.API.0047008  \n  Invalid parameter vendor_name.  \n- E.SC.API.0047009  \n  Invalid parameter comment.  \n- E.SC.API.0047010  \n  Bad request.  \n- E.SC.API.0047016  \n  Bad request.  \n- E.SC.API.0047017  \n  Invalid parameter converted.  \n- E.SC.API.0047018  \n  Invalid parameter network_type.  \n- E.SC.API.0047019  \n  Invalid parameter labels.  \n- E.SC.API.0047020  \n  Invalid parameter model_list.  \n- E.SC.API.0047021  \n  Invalid parameter input_format_param or input_format_param_file_id.  \n- E.SC.API.0047022  \n  Invalid parameter network_config or network_config_file_id.  \n- E.SC.API.0047024  \n  Bad request.  \n- E.SC.API.0047026  \n  Invalid parameter model_file_id_list.  \n- E.SC.API.0047027  \n  Invalid parameter model_platform.  \n- E.SC.API.0047029  \n  Only one model file allowed when converted is True.  \n- E.SC.API.0047032  \n  Invalid model file format.  \n- E.SC.API.0047033  \n  Invalid parameter dcpu_firmware_url.  \n- E.SC.API.0047034  \n  Invalid parameter dcpu_manifest_url.  \n- E.SC.API.0047035  \n  Invalid parameter dcpu_postprocess_url.  \n- E.SC.API.0047036  \n  Invalid parameter dcpu files  \n- E.SC.API.0047037  \n  Invalid parameter reserved_mem.  \n- E.SC.API.0047038  \n  The model file exceed size limit.  \n- E.SC.API.0047039  \n  The components of import file is incorrect.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  \n- E.SC.API.0047030  \n  Unauthorized operation.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0047015  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000016  \n  Unsupported media type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000016",
                  "message": "Unsupported media type.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0047011  \n  Internal server error.  \n- E.SC.API.0047012  \n  Internal server error.  \n- E.SC.API.0047013  \n  Internal server error.  \n- E.SC.API.0047014  \n  Internal server error.  \n- E.SC.API.0047023  \n  Internal server error.  \n- E.SC.API.0047025  \n  Get converter version failed.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/models/{model_id}": {
      "post": {
        "tags": [
          "Train Model"
        ],
        "summary": "PublishModel",
        "description": "Converts the AI model.\nThis process is handled asynchronously due to its time-consuming nature. \n*To check the processing status, refer to the result of GetBaseModelStatus API or the response from GetDeviceModelStatus API. When the process is completed, 'Import completed' is returned.",
        "operationId": "publish_model",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "model_id",
            "description": "A unique ID of the AI model.",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "description": "Device ID  \n*Only available for device models. \nThis parameter is only available for deploying base models.",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS or WARNING."
                    },
                    "import_id": {
                      "type": "string",
                      "description": "The conversion request ID (conv_id)."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- W.SC.API.0181006  \n  The version of keras is out of date. Please use 2.12 or higher."
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "examples": {
                  "SUCCESS": {
                    "value": {
                      "result": "SUCCESS",
                      "import_id": "550e8400-e29b-41d4-a716-446655440000"
                    }
                  },
                  "WARNING": {
                    "value": {
                      "result": "WARNING",
                      "code": "W.SC.API.0181006",
                      "message": "The version of keras is out of date. Please use 2.12 or higher.",
                      "time": "2022-01-01T01:01:01.000001"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0181002  \n  Bad request.  \n- E.SC.API.0181007  \n  Specified converter_version does not support the model's keras version.  \n- E.SC.API.0181008  \n  The model file exceed size limit.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  \n- E.SC.API.0181003  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0181001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0181004  \n  Internal server error.  \n- E.SC.API.0181005  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Train Model"
        ],
        "summary": "DeleteModel",
        "description": "Deletes the base model, device model, and projects associated with the specified model ID.",
        "operationId": "delete_model",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "model_id",
            "description": "ID of the AI model.",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- W.SC.API.0078002  \n  The model deletion process is complete. However  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0078003  \n  Since preparations for deletion have not been completed  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  \n- E.SC.API.0078004  \n  Unauthorized operation.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- W.SC.API.0078001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Train Model"
        ],
        "summary": "UpdateModel",
        "description": "Updates attribute information of the specified model.",
        "operationId": "update_model",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "model_id",
            "description": "ID of the AI model. The maximum number of characters that can be specified is 100.",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "comment",
            "description": "Description of the subject. The maximum number of characters that can be specified is 100.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "version_number",
            "description": "Name of the vendor. The maximum number of characters that can be specified is 100.",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0073001  \n  Invalid parameter comment.  \n- E.SC.API.0073002  \n  Invalid parameter vendor_name.  \n- E.SC.API.0073003  \n  Parameter is not set.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0073004  \n  Not found.  \n- E.SC.API.0073006  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0073005  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/models/{model_id}/base": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetBaseModelStatus",
        "description": "Returns an information of the specified base model.",
        "operationId": "get_base_model_status",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "model_id",
            "description": "ID of the AI model.",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "name": "latest_type",
            "description": "Classification of the latest version. \n- Value definition:  \n  0: Latest version after publication.  \n  1: Latest version after completion of the conversion process or publication.",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0057001  \n  Invalid parameter latest_type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0057002  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/models/{model_id}/base/versions": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetBaseModelVersions",
        "description": "Returns a list of base model version.",
        "operationId": "get_base_model_versions",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "model_id",
            "description": "ID of the AI model.",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "version_number",
            "description": "Version number.",
            "in": "query"
          },
          {
            "description": "The scope of response parameters to return.\n- Value definition:  \n full: Returns all parameters  \n minimal: Returns minimal parameters *effective for timesaving",
            "required": false,
            "schema": {
              "enum": [
                "full",
                "minimal"
              ],
              "default": "full"
            },
            "name": "scope",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0058001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/models/{model_id}/base/versions/{version_number}": {
      "patch": {
        "tags": [
          "Train Model"
        ],
        "summary": "UpdateBaseModelVersion",
        "description": "Updates attribute information of the specified base model version.",
        "operationId": "update_base_model_version",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "model_id",
            "description": "ID of the AI model.",
            "in": "path"
          },
          {
            "description": "Version number.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "version_number",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBaseModelVersionJsonBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0076001  \n  Json format is invalid.  \n- E.SC.API.0076002  \n  Parameter is not set.  \n- E.SC.API.0076003  \n  Invalid parameter comment.  \n- E.SC.API.0076004  \n  Parameter input_format_param or network_config is not set.  \n- E.SC.API.0076006  \n  Bad request.  \n- E.SC.API.0076012  \n  Bad request.  \n- E.SC.API.0076013  \n  Invalid parameter input_format_param.  \n- E.SC.API.0076014  \n  Invalid parameter network_config.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0076005  \n  Not found.  \n- E.SC.API.0076010  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000016  \n  Unsupported media type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000016",
                  "message": "Unsupported media type.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0076007  \n  Internal server error.  \n- E.SC.API.0076008  \n  Internal server error.  \n- E.SC.API.0076009  \n  Internal server error.  \n- E.SC.API.0076011  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/models/{model_id}/devices/{device_id}": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetDeviceModelStatus",
        "description": "Returns an information of the specified device model.",
        "operationId": "get_device_model_status_func",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "model_id",
            "description": "ID of the AI model.",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "description": "Device ID.",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "name": "latest_type",
            "description": "Classification of the latest version. \n- Value definition:  \n  0: Latest version after publication.  \n  1: Latest version after completion of the conversion process or publication.",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0060001  \n  Invalid parameter latest_type.  \n- E.SC.API.0060002  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/models/{model_id}/devices/{device_id}/versions": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetDeviceModelVersions",
        "description": "Returns a list of device model version information.",
        "operationId": "get_device_model_versions",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "model_id",
            "description": "ID of the AI model.",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "description": "Device ID.",
            "in": "path"
          },
          {
            "description": "The scope of response parameters to return.\n- Value definition:  \n full: Returns all parameters  \n minimal: Returns minimal parameters *effective for timesaving",
            "required": false,
            "schema": {
              "enum": [
                "full",
                "minimal"
              ],
              "default": "full"
            },
            "name": "scope",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "version_number",
            "description": "Version number.",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0061001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/models/{model_id}/devices/{device_id}/versions/{version_number}": {
      "patch": {
        "tags": [
          "Train Model"
        ],
        "summary": "UpdateDeviceModelVersion",
        "description": "Updates attribute information of the AI model version for the specified Edge Device.",
        "operationId": "update_device_model_version",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "model_id",
            "description": "ID of the AI model.",
            "in": "path"
          },
          {
            "description": "Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "description": "Version number.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "version_number",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDeviceModelVersionJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0077001  \n  Invalid parameter comment.  \n- E.SC.API.0077002  \n  Parameter is not set.  \n- E.SC.API.0077006  \n  Json format is invalid.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0077003  \n  Not found.  \n- E.SC.API.0077005  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000016  \n  Unsupported media type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000016",
                  "message": "Unsupported media type.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0077004  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/models/{model_id}/dnn_params": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetDnnParams",
        "description": "Returns dnn_params of the specified model.",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "model_id",
            "description": "ID of the AI model.",
            "in": "path"
          },
          {
            "description": "Version number.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "latest"
            },
            "name": "version_number",
            "in": "query"
          },
          {
            "description": "Device ID  \n*Only available for device models. \nThis parameter is only available for deploying base models.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "contents"
                  ],
                  "properties": {
                    "contents": {
                      "description": "Returns base64-encoded dnnParams.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0272002  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0272003  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0272001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/model_bundles": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetModelBundles",
        "description": "Get model bundle list.",
        "operationId": "get_model_bundles",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Model Bundle Name",
              "type": "string"
            },
            "name": "model_bundle_name",
            "description": "Model Bundle Name.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "model_bundles"
                  ],
                  "properties": {
                    "model_bundles": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ModelBundles"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Train Model"
        ],
        "summary": "ImportModelBundle",
        "description": "Imports a model bundle into your project.",
        "operationId": "import_model_bundle",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportModelBundleJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0297001  \n  Invalid parameter bundle_name.  \n- E.SC.API.0297002  \n  Invalid parameter vender_name.  \n- E.SC.API.0297003  \n  The file header is invalid.  \n- E.SC.API.0297009  \n  Invalid parameter description.  \n- E.SC.API.0297010  \n  Invalid parameter bundle_file_id.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000006",
                  "message": "Bad request.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000013",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0297004  \n  Internal server error.  \n- E.SC.API.0297005  \n  Internal server error.  \n- E.SC.API.0297006  \n  Internal server error.  \n- E.SC.API.0297007  \n  Internal server error.  \n- E.SC.API.0297008  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/model_bundles/{model_bundle_name}": {
      "delete": {
        "tags": [
          "Train Model"
        ],
        "summary": "DeleteModelBundle",
        "description": "Delete the model bundle associated with the specified model bundle name.",
        "operationId": "delete_model_bundle",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Model bundle name",
              "type": "string"
            },
            "name": "model_bundle_name",
            "description": "Model bundle name.",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "Set \"SUCCESS\" or \"WARNING\"."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- W.SC.API.0298002  \n  The model bundle deletion process is complete. However, some processes have been skipped due to reasons such as having already been deleted. "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000006  \n  Bad request.  \n- W.SC.API.0298003  \n  Since preparations for deletion have not been completed, wait for a while before deleting.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000006",
                  "message": "Bad request.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- W.SC.API.0298001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000014  \n  Too Many Requests.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000014",
                  "message": "Too Many Requests.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/model_bundles/{model_bundle_name}/versions": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetModelBundleVersions",
        "description": "Get model bundle version list.",
        "operationId": "get_model_bundle_versions",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Model Bundle Name",
              "type": "string"
            },
            "name": "model_bundle_name",
            "description": "Model Bundle Name.",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version Number",
              "type": "string"
            },
            "name": "version_number",
            "description": "Version number.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelBundleInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0296001  \n  Bad request.   "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0296001",
                  "message": "Bad request.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/firmwares": {
      "get": {
        "tags": [
          "Firmware"
        ],
        "summary": "GetFirmwares",
        "description": "Lists the information of the chosen Edge System Software.",
        "operationId": "get_firmwares",
        "parameters": [
          {
            "description": "Number of the items to fetch information.  \nValue range: 1 to 256",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "Retrieves additional data beyond the number of targets specified by the query parameter (limit). Specify the value obtained from the response (continuation_token) to fetch the next data.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "starting_after",
            "in": "query"
          },
          {
            "description": "Type of the Edge System Software.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "edge_system_sw_package"
              ]
            },
            "name": "firmware_type",
            "in": "query"
          },
          {
            "description": "Type of the target device.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "target_device_type",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "firmwares",
                    "continuation_token"
                  ],
                  "properties": {
                    "continuation_token": {
                      "type": "string",
                      "nullable": true,
                      "description": "Last token of extracted data. If there is no continuation data, it will be empty."
                    },
                    "firmwares": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Firmwares"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006\n  Bad request.\n- E.SC.API.0023001\n  Invalid parameter firmware_type.\n- E.SC.API.0023003\n  Invalid parameter limit.\n- E.SC.API.0023004\n  Invalid parameter starting after."
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0023003",
                  "message": "Invalid parameter limit.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Firmware"
        ],
        "summary": "CreateFirmware",
        "description": "Registers the Edge System Software to the Console.",
        "operationId": "create_firmware",
        "parameters": [
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFirmwareJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n\n- E.SC.API.0025017  \n  Invalid parameter file_id.  \n- E.SC.API.0025020  \n  Invalid firmware package file.  \n- E.SC.API.0025021  \n  The specified firmware has registered.  \n- E.SC.API.0025022  \n  Invalid parameter firmware_type.  \n- E.SC.API.0025023  \n  Bad request.  \n- E.SC.API.0025024  \n  Invalid parameter description.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0025005  \n  Not found.  \n- E.SC.API.0025019  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000016  \n  Unsupported media type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000016",
                  "message": "Unsupported media type.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.   "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/firmwares/{firmware_id}": {
      "get": {
        "tags": [
          "Firmware"
        ],
        "summary": "GetFirmware",
        "description": "Returns the information of a specific Edge System Software.",
        "operationId": "get_firmware",
        "parameters": [
          {
            "description": "Firmware ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "firmware_id",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Firmware"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0024003  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Firmware"
        ],
        "summary": "DeleteFirmware",
        "description": "Deletes the specified Edge System Software from the Console.",
        "operationId": "delete_firmware",
        "parameters": [
          {
            "description": "Firmware ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "firmware_id",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- W.SC.API.0026004  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0026001  \n  Common firmware cannot be deleted.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- W.SC.API.0026003  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0026002  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/edge_apps": {
      "get": {
        "tags": [
          "Edge App"
        ],
        "summary": "GetEdgeApps",
        "description": "Returns a list of registered Edge Applications.",
        "operationId": "get_edge_apps",
        "parameters": [
          {
            "description": "Number of the items to fetch information.  \nValue range: 1 to 256",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "Retrieves additional data beyond the number of targets specified by the query parameter (limit). Specify the value obtained from the response (continuation_token) to fetch the next data.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "starting_after",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "apps",
                    "continuation_token"
                  ],
                  "properties": {
                    "continuation_token": {
                      "type": "string",
                      "nullable": true,
                      "description": "Last token of extracted data. If there is no continuation data, it will be empty."
                    },
                    "apps": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EdgeApp"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006\n  Bad request.\n- E.SC.API.0171001\n  Invalid parameter limit.\n- E.SC.API.0171002\n  Invalid parameter starting after."
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0171001",
                  "message": "Invalid parameter limit.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Edge App"
        ],
        "summary": "ImportEdgeApp",
        "description": "Imports Edge Application to the Console.",
        "operationId": "import_edge_app",
        "parameters": [
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportEdgeAppJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0170011  \n  The specified app has already been registered.  \n- E.SC.API.0170018  \n  Invalid json format  \n- E.SC.API.0170019  \n  Invalid json format  \n- E.SC.API.0170020  \n  Invalid json format.  \n- E.SC.API.0170021  \n  Invalid json format  \n- E.SC.API.0170022  \n  Invalid parameter root_dtdl_file_id.  \n- E.SC.API.0170023  \n  Invalid parameter dtdl_file_ids.  \n- E.SC.API.0170025  \n  Parameter edge_app_file_id is not set.  \n- E.SC.API.0170026  \n  Invalid parameter edge_app_file_id.  \n- E.SC.API.0170027  \n  Parameter root_dtdl_file_id is not set.  \n- E.SC.API.0170028  \n  Invalid edge app package file.  \n- E.SC.API.0170030  \n  Bad request.  \n- E.SC.API.0170032  \n  Parameter edge_app_package_id is not set.  \n- E.SC.API.0170033  \n  The length of parameter app_name and version exceeds limit.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  \n- E.SC.API.0170017  \n  Unauthorized operation.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0170029  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0170024  \n  Another DTDL with the same DTMI as the DTDL you are trying to register has already been registered.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "W.SC.API.0000010",
                  "message": "Conflict.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000016  \n  Unsupported media type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000016",
                  "message": "Unsupported media type.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0170013  \n  Make sign failed.  \n- E.SC.API.0170014  \n  File upload failed.  \n- E.SC.API.0170015  \n  Failed to create app.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/edge_apps/{app_name}/{app_version}": {
      "get": {
        "tags": [
          "Edge App"
        ],
        "summary": "GetEdgeApp",
        "description": "Returns the information of a specific Edge Application.",
        "operationId": "get_edge_app",
        "parameters": [
          {
            "description": "The application name.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The application name."
            },
            "name": "app_name",
            "in": "path"
          },
          {
            "description": "The application version.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The application version."
            },
            "name": "app_version",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "app_name": {
                      "type": "string",
                      "description": "The application name."
                    },
                    "app_version": {
                      "type": "string",
                      "description": "Returns the application version."
                    },
                    "root_dtmi": {
                      "type": "string",
                      "description": "Returns the root DTMI."
                    },
                    "compiled_flg": {
                      "type": "boolean",
                      "description": "Set the compiled flag.\n- Value definition  \n  false : Specified App is not compiled  \n  true : Specified App is compiled\n"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "before_compile",
                        "compiling",
                        "compiled",
                        "failed"
                      ],
                      "description": "The compile status."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the subject."
                    },
                    "deploy_count": {
                      "type": "integer",
                      "description": "In this application version, the parameter is fixed to zero."
                    },
                    "ins_id": {
                      "type": "string",
                      "description": "The subject that configured the feature."
                    },
                    "ins_date": {
                      "type": "string",
                      "description": "The date the settings were created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    },
                    "upd_id": {
                      "type": "string",
                      "description": "The subject that updated the settings."
                    },
                    "upd_date": {
                      "type": "string",
                      "description": "The date the settings were updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0172001  \n  The specified parameter app_name or version_number is not registered.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Edge App"
        ],
        "summary": "DeleteEdgeApp",
        "description": "Deletes the specified Edge Application from the Console.",
        "operationId": "delete_edge_app",
        "parameters": [
          {
            "description": "The application name.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The application name."
            },
            "name": "app_name",
            "in": "path"
          },
          {
            "description": "The application version.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The application version."
            },
            "name": "app_version",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  \n- E.SC.API.0173003  \n  Unauthorized operation.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- W.SC.API.0173001  \n  The specified parameter app_name or version_number is not registered.  \n- W.SC.API.0173002  \n  App file does not exist.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/edge_apps/{app_name}/{app_version}/export": {
      "get": {
        "tags": [
          "Edge App"
        ],
        "summary": "ExportEdgeApp",
        "description": "Exports the specified Edge Application information.",
        "operationId": "export_edge_app",
        "parameters": [
          {
            "description": "The application name.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The application name."
            },
            "name": "app_name",
            "in": "path"
          },
          {
            "description": "The application version.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The application version."
            },
            "name": "app_version",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "contents",
                    "file_name"
                  ],
                  "properties": {
                    "contents": {
                      "type": "string",
                      "description": "Contents of the file in base64-encoded format."
                    },
                    "file_name": {
                      "type": "string",
                      "description": "Name of the subject file."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0177001  \n  The specified parameter app_name or version_number is not registered.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/edge_apps/{app_name}/{app_version}/deploys": {
      "get": {
        "tags": [
          "Edge App"
        ],
        "summary": "GetEdgeAppDeploys",
        "description": "Returns the specified Edge Application deployment status.",
        "operationId": "get_edge_app_deploys",
        "parameters": [
          {
            "description": "The application name.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The application name."
            },
            "name": "app_name",
            "in": "path"
          },
          {
            "description": "The application version.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The application version."
            },
            "name": "app_version",
            "in": "path"
          },
          {
            "description": "Number of the items to fetch information.  \nValue range: 1 to 256",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "Retrieves additional data beyond the number of targets specified by the query parameter (limit). Specify the value obtained from the response (continuation_token) to fetch the next data.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "starting_after",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "continuation_token",
                    "deploys"
                  ],
                  "properties": {
                    "continuation_token": {
                      "type": "string",
                      "nullable": true,
                      "description": "Last token of extracted data. If there is no continuation data, it will be empty."
                    },
                    "deploys": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EdgeAppDeployHistory"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0178001  \n  The specified parameter app_name or version_number is not registered.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/images/devices/directories": {
      "get": {
        "tags": [
          "Insight"
        ],
        "summary": "GetImageDirectories",
        "description": "Returns the directory information (device group and device information) where images are stored.",
        "operationId": "get_image_directories",
        "parameters": [
          {
            "description": "Device ID. \nIf this is specified, return an image directory list linked to the specified device ID. ",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "query"
          },
          {
            "description": "Specify whether to delete images from devices that have been removed from the Console.",
            "name": "include_deleted_device",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "group_id",
                      "devices"
                    ],
                    "properties": {
                      "group_id": {
                        "type": "string",
                        "description": "The device group ID."
                      },
                      "devices": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "device_id",
                            "device_name",
                            "Image"
                          ],
                          "properties": {
                            "device_id": {
                              "type": "string",
                              "description": "The device ID."
                            },
                            "device_name": {
                              "type": "string",
                              "description": "The device name."
                            },
                            "Image": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "The directory name."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0106001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/images/devices/{device_id}/directories/{sub_directory_name}": {
      "get": {
        "tags": [
          "Insight"
        ],
        "summary": "GetImages",
        "description": "Returns a SAS URL to download images from a specific device. Copy the URL to access the data. \nThe URL will expire after one hour. \n*Application: Use to display an image in a UI",
        "operationId": "get_images",
        "parameters": [
          {
            "description": "Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "description": "Directory name. ",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "sub_directory_name",
            "in": "path"
          },
          {
            "description": "Number of the items to fetch information.  \nValue range: 1 to 256",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "Retrieves additional data beyond the number of targets specified by the query parameter (limit). Specify the value obtained from the response (continuation_token) to fetch the next data.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "starting_after",
            "in": "query"
          },
          {
            "description": "Return only objects that forward match the input string",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "name_starts_with",
            "in": "query"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "continuation_token",
                    "data"
                  ],
                  "properties": {
                    "continuation_token": {
                      "type": "string",
                      "nullable": true,
                      "description": "Last token of extracted data. If there is no continuation data, it will be empty."
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "sas_url"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The image filename."
                          },
                          "sas_url": {
                            "type": "string",
                            "description": "SAS url of image."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0107010  \n  Invalid starting after or error fetching blobs.  \n- E.SC.API.0107011  \n  Invalid parameter limit.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0107001  \n  Not found.  \n- E.SC.API.0107006  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Insight"
        ],
        "summary": "DeleteImages",
        "description": "Deletes the saved images from a specific Edge Device.",
        "operationId": "delete_images",
        "parameters": [
          {
            "description": "Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "description": "Directory name. ",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "sub_directory_name",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteImagesJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0198002  \n  Invalid parameter sub_directory_name.  \n- E.SC.API.0198003  \n  Invalid parameter filenames.  \n- E.SC.API.0198006  \n  Invalid parameter directory_deletion.  \n- E.SC.API.0198007  \n  Unable to send message to queue.  \n- E.SC.API.0198008  \n  Invalid parameter limit.  \n- W.SC.API.0198005  \n  {0} does not exist.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0198001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000016  \n  Unsupported media type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000016",
                  "message": "Unsupported media type.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0198004  \n  Delete {0} failed.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/inferenceresults/devices/{device_id}": {
      "delete": {
        "tags": [
          "Insight"
        ],
        "summary": "DeleteInferenceResults",
        "description": "Deletes the inference data retrieved through the GetInferenceResults.",
        "operationId": "delete_inference_results",
        "parameters": [
          {
            "name": "device_id",
            "description": "Device ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "item_ids",
            "description": "The ID of the inference result to be deleted, obtained from GetInferenceResults.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1,2,3,5"
            }
          },
          {
            "description": "Specify whether to also delete inference results from devices that have been removed from the Console.",
            "name": "include_deleted_device",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0290002  \n  Invalid parameter items_ids.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000006",
                  "message": "Bad request.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0290001\n  Not found."
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000013",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000008",
                  "message": "Invalid parameter.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0290003  \n  Delete {0} failed.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/inferenceresults": {
      "get": {
        "tags": [
          "Insight"
        ],
        "summary": "Retrieve a list of inferences",
        "description": "Returns a list of inferences with optional filters for devices and time range.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "The number of inferences to retrieve. The default is 50, with a minimum of 1 and a maximum of 500.",
            "schema": {
              "type": "integer",
              "default": 50,
              "minimum": 1,
              "maximum": 500
            }
          },
          {
            "name": "devices",
            "in": "query",
            "required": true,
            "description": "A device ID or a list of device IDs to obtain inferences from,\nwith a minimum number of 1 and a maximum of 10.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 10,
              "example": [
                "device_123",
                "device_456"
              ]
            }
          },
          {
            "description": "Retrieves additional data beyond the number of targets specified by the query parameter (limit). \nSpecify the value obtained from the response (continuation_token) to fetch the next data.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "starting_after",
            "in": "query"
          },
          {
            "name": "from_datetime",
            "in": "query",
            "required": false,
            "description": "The start datetime for filtering inferences (in ISO-8601 format).\n- Format: yyyyMMddThhmmss.SSSSSS or yyyy-MM-ddThh:mm:ss.SSSSSS (ISO-8601)",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2024-01-01T00:00:00.000000"
            }
          },
          {
            "name": "to_datetime",
            "in": "query",
            "required": false,
            "description": "The end datetime for filtering inferences (in ISO-8601 format).\n- Format: yyyyMMddThhmmss.SSSSSS or yyyy-MM-ddThh:mm:ss.SSSSSS (ISO-8601)",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2024-01-01T00:00:00.000000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of inferences",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "continuation_token": {
                      "type": "string",
                      "nullable": true,
                      "description": "Last token of extracted data. If there is no continuation data, it will be empty."
                    },
                    "inferences": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Inferences"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000006  \n  Bad request.\n- E.SC.API.0108007\n  Invalid parameter from_datetime\n- E.SC.API.0108008\n  Invalid parameter to_datetime\n- E.SC.API.0108010  \n  Invalid parameter limit.\n- E.SC.API.0108011\n  Invalid number of devices"
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ssXXX."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000006",
                  "message": "Bad request.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ssXXX."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ssXXX."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000014  \n  Too Many Requests.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ssXXX."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000014",
                  "message": "Too Many Requests.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ssXXX."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ssXXX."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/connector/ir_hub": {
      "get": {
        "tags": [
          "Connector"
        ],
        "summary": "GetIRHubConnector",
        "operationId": "get_ir_hub_connector",
        "description": "Get the inference result hub connector.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetIRHubConnectorJsonBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ssXXX."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000006",
                  "message": "Bad request.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ssXXX."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ssXXX."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ssXXX."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000014  \n  Too Many Requests.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ssXXX."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000014",
                  "message": "Too Many Requests.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ssXXX."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ssXXX."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Connector"
        ],
        "summary": "UpdateIRHubConnector",
        "description": "Updates the external transfer settings to forward inference results obtained from Edge Devices to Azure Event Hubs.",
        "operationId": "update_ir_hub_connector",
        "parameters": [
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIRHubConnectorJsonBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0196001  \n  Bad request.  \n- E.SC.API.0196002  \n  Invalid parameter name.  \n- E.SC.API.0196003  \n  Invalid parameter url.  \n- E.SC.API.0196005  \n  Invalid parameter Invalid parameter type.   \n- E.SC.API.0196006  \n  The specified IR Hub Connector has already been registered.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000016  \n  Unsupported media type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000016",
                  "message": "Unsupported media type.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0196004  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/connector/storage": {
      "get": {
        "tags": [
          "Connector"
        ],
        "summary": "GetStorageConnector",
        "description": "Get the storage hub connectors.",
        "operationId": "get_storage_connector",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "input_image",
                    "inference_result"
                  ],
                  "type": "object",
                  "properties": {
                    "input_image": {
                      "$ref": "#/components/schemas/GetStorageConnectorInputJsonBody"
                    },
                    "inference_result": {
                      "$ref": "#/components/schemas/GetStorageConnectorInferenceJsonBody"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ssXXX."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ssXXX."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ssXXX."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000014  \n  Too Many Requests.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ssXXX."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000014",
                  "message": "Too Many Requests.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ssXXX."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-dd'T'HH:mm:ssXXX."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Connector"
        ],
        "summary": "UpdateStorageConnector",
        "description": "Updates the storage hub connector. Specify the items (inference results, images, or both) to transfer to a storage service.\nTo change the transmission destination of inference results, please modify the value of UploadMethodIR in the Command parameter.\nYou can store inference results in your cloud storage by setting the value of UploadMethodIR to \"BlobStorage\".\nLikewise, to revert the transmission to AITRIOS internal storage, set the value of UploadMethodIR to \"Mqtt\".",
        "operationId": "update_storage_connector",
        "parameters": [
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStorageConnectorJsonBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0195002  \n  Invalid parameter endpoint.  \n- E.SC.API.0195003  \n  Invalid parameter connection_string.  \n- E.SC.API.0195004  \n  Invalid parameter mode.  \n- E.SC.API.0195005  \n  Invalid parameter container_name.  \n- E.SC.API.0195007  \n  Invalid parameter type.  \n- E.SC.API.0195008  \n  Invalid parameter endpoint.  \n- E.SC.API.0195009  \n  Invalid parameter region.  \n- E.SC.API.0195010  \n  Invalid parameter bucket_name.  \n- E.SC.API.0195011  \n  Invalid parameter access_key_id.  \n- E.SC.API.0195012  \n  Invalid parameter secret_access_key.  \n- E.SC.API.0195013  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0195001  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message details or the reason.\n[MessageList] *The message for each code is shown below.  \n- E.SC.API.0000016  \n  Unsupported media type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000016",
                  "message": "Unsupported media type.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0195006  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    },
    "/files": {
      "post": {
        "tags": [
          "Utility"
        ],
        "summary": "UploadFile",
        "description": "Returns the parameter (file ID) used by the API below. Specify the returned 'file_info.id' as the parameter.\n  - ImportBaseModel\n  - CreateFirmware\n  - ImportEdgeApp",
        "parameters": [
          {
            "$ref": "#/components/parameters/grant_type"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "type_code": {
                    "description": "File type code.",
                    "type": "string",
                    "enum": [
                      "non_converted_model",
                      "converted_model",
                      "input_format_param",
                      "network_config",
                      "firmware",
                      "edge_app",
                      "edge_app_dtdl",
                      "edge_app_pkg",
                      "dcpu_firmware",
                      "dcpu_manifest",
                      "dcpu_postprocess",
                      "model_bundle"
                    ],
                    "example": "network_config"
                  },
                  "file": {
                    "description": "File contents.",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "file_info"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS"
                    },
                    "file_info": {
                      "description": "The file info.",
                      "type": "object",
                      "properties": {
                        "file_id": {
                          "description": "The file ID.",
                          "type": "string",
                          "format": "uuid",
                          "example": "10dd852a-a9b5-460a-a2a8-e89657f83c01"
                        },
                        "name": {
                          "description": "The file name.",
                          "type": "string",
                          "example": "object_detection.tflite"
                        },
                        "type_code": {
                          "description": "The file type code.",
                          "type": "string",
                          "enum": [
                            "non_converted_model",
                            "converted_model",
                            "input_format_param",
                            "network_config",
                            "firmware",
                            "edge_app",
                            "edge_app_dtdl",
                            "edge_app_pkg",
                            "dcpu_firmware",
                            "dcpu_manifest",
                            "dcpu_postprocess",
                            "model_bundle"
                          ],
                          "example": "non_converted_model"
                        },
                        "size": {
                          "description": "The file size.",
                          "type": "integer",
                          "example": 489813
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0199001  \n  Parameter type_code is not set.  \n- E.SC.API.0199002  \n  Invalid parameter type_code.  \n- E.SC.API.0199003  \n  Parameter file is not set.  \n- E.SC.API.0199004  \n  File size over limit.  \n- E.SC.API.0199006  \n  File name too long.  \n- E.SC.API.0199007  \n  Invalid file name.  \n- E.SC.API.0199008  \n  Invalid json format.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0199005  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001+00:00"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "grant_type": {
        "in": "query",
        "name": "grant_type",
        "required": false,
        "schema": {
          "type": "string",
          "default": "client_credentials"
        },
        "description": "The authentication grant type."
      }
    },
    "securitySchemes": {
      "accessToken": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "SuccessResponse": {
        "type": "object",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "string",
            "description": "SUCCESS"
          }
        }
      },
      "DeploySuccessResponse": {
        "type": "object",
        "required": [
          "result",
          "deploy_id"
        ],
        "properties": {
          "result": {
            "type": "string",
            "description": "SUCCESS"
          },
          "deploy_id": {
            "type": "string",
            "description": "ID from sc_t_deploy."
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "required": [
          "result",
          "code",
          "message",
          "time"
        ],
        "properties": {
          "result": {
            "type": "string",
            "description": "ERROR or WARNING."
          },
          "code": {
            "type": "string",
            "description": "Error code."
          },
          "message": {
            "type": "string",
            "description": "The error message details or the reason."
          },
          "time": {
            "type": "string",
            "description": "The timestamp of the error occurrence. *yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          }
        }
      },
      "Device": {
        "type": "object",
        "required": [
          "device_id",
          "ins_id",
          "ins_date",
          "upd_id",
          "upd_date",
          "connection_state",
          "last_activity_time",
          "inactivity_timeout"
        ],
        "properties": {
          "device_id": {
            "type": "string",
            "description": "The device ID."
          },
          "description": {
            "type": "string",
            "description": "The description of the device."
          },
          "device_name": {
            "type": "string",
            "description": "The device name."
          },
          "internal_device_id": {
            "type": "string",
            "description": "The internal device ID."
          },
          "device_type": {
            "type": "string",
            "description": "The device type."
          },
          "ins_id": {
            "type": "string",
            "description": "The subject that registered the device."
          },
          "ins_date": {
            "type": "string",
            "description": "The date the device was created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          },
          "upd_id": {
            "type": "string",
            "description": "The subject that updated the device."
          },
          "upd_date": {
            "type": "string",
            "description": "The date the device was updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          },
          "connection_state": {
            "type": "string",
            "description": "The device connection state."
          },
          "last_activity_time": {
            "type": "string",
            "description": "The date the device last connected."
          },
          "inactivity_timeout": {
            "type": "number",
            "description": "Time the device is considered inactive.",
            "default": 600
          },
          "models": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "model_id": {
                  "type": "string",
                  "description": "The model ID."
                },
                "model_version_id": {
                  "type": "string",
                  "description": "The model version ID. Format: modelid:v1.01  \n*For model that does not exist in the system, display network_id  \n  Example: 000237  "
                }
              }
            }
          },
          "device_groups": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "device_group_id",
                "ins_id",
                "ins_date",
                "upd_id",
                "upd_date"
              ],
              "properties": {
                "device_group_id": {
                  "type": "string",
                  "description": "The device group ID."
                },
                "description": {
                  "type": "string",
                  "nullable": true,
                  "description": "The device group description."
                },
                "ins_id": {
                  "type": "string",
                  "description": "The subject that created the device group."
                },
                "ins_date": {
                  "type": "string",
                  "description": "The date the device group was created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                },
                "upd_id": {
                  "type": "string",
                  "description": "The subject that updated the device group."
                },
                "upd_date": {
                  "type": "string",
                  "description": "The date the device group was updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                }
              }
            }
          },
          "modules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "module_id": {
                  "type": "string",
                  "description": "If the target is Edge System Software, a value of $system will be returned."
                },
                "module_name": {
                  "type": "string"
                },
                "property": {
                  "type": "object",
                  "properties": {
                    "configuration": {
                      "type": "object"
                    },
                    "state": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "property": {
            "type": "object",
            "description": "Firmware information of the device",
            "properties": {
              "state": {
                "type": "object",
                "description": "Current firmware state."
              },
              "configuration": {
                "type": "object",
                "description": "Desired firmware configuration"
              }
            }
          }
        }
      },
      "Devices": {
        "type": "object",
        "required": [
          "device_id"
        ],
        "properties": {
          "device_id": {
            "type": "string",
            "description": "The device ID."
          },
          "description": {
            "type": "string",
            "description": "The description of the device."
          },
          "device_name": {
            "type": "string",
            "description": "The device name."
          },
          "internal_device_id": {
            "type": "string",
            "description": "The internal device ID."
          },
          "device_type": {
            "type": "string",
            "description": "The device type."
          },
          "ins_id": {
            "type": "string",
            "description": "The subject that registered the device."
          },
          "ins_date": {
            "type": "string",
            "description": "The date the device was created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          },
          "upd_id": {
            "type": "string",
            "description": "The subject that updated the device."
          },
          "upd_date": {
            "type": "string",
            "description": "The date the device was updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          },
          "connection_state": {
            "type": "string",
            "description": "The device connection state."
          },
          "last_activity_time": {
            "type": "string",
            "description": "The date the device last connected."
          },
          "inactivity_timeout": {
            "type": "number",
            "description": "Time the device is considered inactive.",
            "default": 600
          },
          "models": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "model_id": {
                  "type": "string",
                  "description": "The model ID."
                },
                "model_version_id": {
                  "type": "string",
                  "description": "The model version ID."
                }
              }
            }
          },
          "property": {
            "type": "object",
            "description": "The properties of Edge System Software",
            "properties": {
              "configuration": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "example": {
                  "property_name": {
                    "key": "value"
                  }
                }
              },
              "state": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "example": {
                  "property_name": {
                    "key": "value"
                  }
                }
              }
            }
          },
          "modules": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "The properties of Edge Application",
              "properties": {
                "module_id": {
                  "type": "string",
                  "description": "The module id of Edge Application"
                },
                "module_name": {
                  "type": "string"
                },
                "property": {
                  "type": "object",
                  "properties": {
                    "configuration": {
                      "type": "object"
                    },
                    "state": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "device_groups": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "device_group_id",
                "description",
                "ins_id",
                "ins_date",
                "upd_id",
                "upd_date"
              ],
              "properties": {
                "device_group_id": {
                  "type": "string",
                  "description": "The device group ID."
                },
                "description": {
                  "type": "string",
                  "nullable": true,
                  "description": "The device group description."
                },
                "ins_id": {
                  "type": "string",
                  "description": "The subject that created the device group."
                },
                "ins_date": {
                  "type": "string",
                  "description": "The date the device group was created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                },
                "upd_id": {
                  "type": "string",
                  "description": "The subject that updated the device group."
                },
                "upd_date": {
                  "type": "string",
                  "description": "The date the device group was updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                }
              }
            }
          }
        }
      },
      "Property": {
        "type": "object",
        "properties": {
          "configuration": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "example": {
              "property_name": {
                "key": "value"
              }
            }
          },
          "state": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "example": {
              "property_name": {
                "key": "value"
              }
            }
          }
        },
        "description": "Get the Property."
      },
      "ConfigurationResponse": {
        "type": "object",
        "description": "This parameter is included only if true is specified as \"include_updated_conf\".",
        "additionalProperties": {
          "type": "object"
        },
        "example": {
          "property_name": {
            "key": "value"
          }
        }
      },
      "ProvisioningStatus": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "device_id": {
              "type": "string"
            },
            "device_type": {
              "type": "string",
              "example": "SZP123S-001"
            },
            "last_updated_time": {
              "type": "string",
              "example": "2022-01-01T01:01:01.000001+00:00+00:00"
            },
            "enroll_type": {
              "type": "string",
              "enum": [
                "enrollment_qr_code"
              ]
            },
            "status": {
              "type": "string",
              "enum": [
                "initializing",
                "getting_cert",
                "registering_cert",
                "completed",
                "error"
              ]
            },
            "error_message": {
              "type": "string"
            }
          }
        },
        "description": "Get the provisioning status."
      },
      "UUID": {
        "type": "string",
        "description": "UUID",
        "example": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX"
      },
      "CommonName": {
        "type": "string",
        "description": "CommonName",
        "example": "Aid-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
      },
      "Limit": {
        "type": "integer",
        "format": "int64",
        "minimum": 0,
        "description": "Number of devices to get at once",
        "example": 100
      },
      "Page": {
        "type": "integer",
        "format": "int64",
        "minimum": 0,
        "description": "Page number",
        "example": 0
      },
      "DeviceApi": {
        "type": "object",
        "description": "Device object that needs to be added to the allowlist",
        "properties": {
          "uuid": {
            "$ref": "#/components/schemas/UUID"
          }
        }
      },
      "UpdateConfigurationJsonBody": {
        "type": "object",
        "properties": {
          "configuration": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "example": {
              "property_name1": {
                "key1": "value"
              }
            }
          }
        },
        "description": "Update the Device Configuration."
      },
      "ReplaceConfigurationJsonBody": {
        "type": "object",
        "properties": {
          "property": {
            "type": "object",
            "properties": {
              "configuration": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "example": {
                  "property_name1": {
                    "key1": "value"
                  }
                }
              }
            }
          }
        },
        "description": "Replace the Device Configuration."
      },
      "ExecuteCommandJsonBody": {
        "type": "object",
        "required": [
          "command_name"
        ],
        "properties": {
          "command_name": {
            "type": "string",
            "example": "command_name_sample"
          },
          "parameters": {
            "type": "object",
            "example": {}
          }
        },
        "description": "Execute Command to the device."
      },
      "CommandResponse": {
        "type": "object",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "string",
            "description": "SUCCESS"
          },
          "command_response": {
            "type": "object"
          }
        }
      },
      "CreateDeployConfigurationJsonBody": {
        "type": "object",
        "required": [
          "config_id"
        ],
        "properties": {
          "config_id": {
            "type": "string",
            "description": "The maximum number of characters that can be specified is 100 single-byte ones."
          },
          "description": {
            "type": "string",
            "description": "The maximum number of characters that can be specified is 100.",
            "default": ""
          },
          "models": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "model_id": {
                  "type": "string",
                  "description": "ID of the AI model.",
                  "default": ""
                },
                "model_version_number": {
                  "type": "string",
                  "description": "Model version number.",
                  "default": "latest"
                }
              }
            }
          },
          "edge_system_sw_package": {
            "type": "object",
            "properties": {
              "firmware_id": {
                "type": "string",
                "description": "Edge System SW Package firmware ID."
              }
            }
          },
          "edge_apps": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "app_name": {
                  "type": "string"
                },
                "app_version": {
                  "type": "string"
                }
              }
            }
          },
          "model_bundles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "model_bundle_name": {
                  "type": "string",
                  "default": ""
                },
                "model_bundle_version": {
                  "type": "string",
                  "default": "latest"
                }
              }
            }
          }
        }
      },
      "DeployByConfigurationJsonBody": {
        "type": "object",
        "required": [
          "device_ids"
        ],
        "properties": {
          "device_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Specify multiple device IDs."
          },
          "description": {
            "type": "string",
            "description": "Maximum is 100 characters."
          }
        }
      },
      "EventLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The event ID."
          },
          "device_id": {
            "type": "string",
            "description": "The device ID.  "
          },
          "level": {
            "type": "string",
            "description": "The log level.  \n  Example: Warn, Error  "
          },
          "component": {
            "type": "string",
            "description": "The event component code.  "
          },
          "error_code": {
            "type": "string",
            "description": "Error code.  "
          },
          "description": {
            "type": "string",
            "description": "Description of the subject.  "
          },
          "time": {
            "type": "string",
            "description": "The event time.  "
          },
          "ingestion_time": {
            "type": "string",
            "description": "The event log time ingested in system."
          }
        }
      },
      "AppLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The log ID."
          },
          "log": {
            "type": "string",
            "description": "The log message."
          },
          "app": {
            "type": "string",
            "description": "The app instance name."
          },
          "stream": {
            "type": "string",
            "description": "The stream type."
          },
          "time": {
            "type": "string",
            "description": "The log time."
          },
          "ingestion_time": {
            "type": "string",
            "description": "The log time ingested in system."
          }
        }
      },
      "DeviceCertificate": {
        "type": "object",
        "properties": {
          "device_id": {
            "type": "string",
            "description": "The device ID."
          },
          "internal_device_id": {
            "type": "string",
            "description": "The internal device ID."
          },
          "device_name": {
            "type": "string",
            "description": "The device name."
          },
          "credentials_id_object": {
            "type": "string",
            "description": "The credentials id object. *This response is not intended for customer utilization."
          },
          "credentials_type": {
            "type": "string",
            "description": "The credentials type."
          },
          "expiration_date": {
            "type": "string",
            "description": "The expiration date."
          },
          "created_time": {
            "type": "string",
            "description": "The created time."
          }
        }
      },
      "Inference": {
        "type": "object",
        "properties": {
          "T": {
            "type": "string",
            "description": "Time when retrieving data from the sensor."
          },
          "O": {
            "type": "string",
            "description": "Output tensor (Encoding format)."
          }
        }
      },
      "InferenceResult": {
        "type": "object",
        "properties": {
          "DeviceID": {
            "type": "string",
            "description": "Device ID."
          },
          "ModelID": {
            "type": "string",
            "description": "DnnModelVersion."
          },
          "Image": {
            "type": "boolean",
            "description": "Synchronized to the InputTensor output."
          },
          "Inferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Inference"
            }
          },
          "project_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "_rid": {
            "type": "string"
          },
          "_self": {
            "type": "string"
          },
          "_etag": {
            "type": "string"
          },
          "_attachments": {
            "type": "string"
          },
          "_ts": {
            "type": "integer"
          }
        }
      },
      "Inferences": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The inference ID.",
            "example": "f05b6bbc-e387-41b8-b11a-c3972289ca38"
          },
          "model_id": {
            "type": "string",
            "description": "The model ID.",
            "example": "model_123"
          },
          "model_version_id": {
            "type": "string",
            "description": "The model version ID.",
            "example": "0000000000000000"
          },
          "device_id": {
            "type": "string",
            "description": "The ID of the device that generated the inference result.",
            "example": "device_123"
          },
          "project_id": {
            "type": "string",
            "description": "The ID of the project associated with the inference result.",
            "example": "project_abc"
          },
          "inferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Inference"
            }
          },
          "image": {
            "type": "boolean",
            "description": "Whether the returned inference results are associated with any image data.",
            "example": true
          }
        }
      },
      "DeviceGroup": {
        "type": "object",
        "properties": {
          "device_group_id": {
            "type": "string",
            "description": "The device group ID."
          },
          "device_type": {
            "type": "string",
            "description": "The device type."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "The device group description."
          },
          "ins_id": {
            "type": "string",
            "description": "The subject that created the device group."
          },
          "ins_date": {
            "type": "string",
            "description": "The date the device group was created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          },
          "upd_id": {
            "type": "string",
            "description": "The subject that updated the device group."
          },
          "upd_date": {
            "type": "string",
            "description": "The date the device group was updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          },
          "devices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "device_id": {
                  "type": "string",
                  "description": "The device ID."
                },
                "property": {
                  "type": "object",
                  "required": [
                    "device_name",
                    "internal_device_id"
                  ],
                  "properties": {
                    "device_name": {
                      "type": "string",
                      "description": "The device name."
                    },
                    "internal_device_id": {
                      "type": "string",
                      "description": "The internal device ID."
                    }
                  }
                },
                "device_type": {
                  "type": "string",
                  "description": "The device type."
                },
                "display_device_type": {
                  "type": "string",
                  "description": "The display device type."
                },
                "place": {
                  "type": "string",
                  "description": "The location."
                },
                "description": {
                  "type": "string",
                  "description": "The device description."
                },
                "ins_id": {
                  "type": "string",
                  "description": "The subject that registered the device."
                },
                "ins_date": {
                  "type": "string",
                  "description": "The date the device was created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                },
                "upd_id": {
                  "type": "string",
                  "description": "The subject that updated the device."
                },
                "upd_date": {
                  "type": "string",
                  "description": "The date the device was updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                }
              }
            }
          }
        }
      },
      "EdgeApp": {
        "type": "object",
        "properties": {
          "app_name": {
            "type": "string",
            "description": "The application name."
          },
          "versions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "app_version": {
                  "type": "string",
                  "description": "Returns the application version number."
                },
                "root_dtmi": {
                  "type": "string",
                  "description": "Returns the root DTMI."
                },
                "compiled_flg": {
                  "type": "boolean",
                  "description": "The compiled flg.\n- Value definition:  \n  false: Specified App is not compiled  \n  true: Specified App is compiled\n"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "before_compile",
                    "compiling",
                    "compiled",
                    "failed"
                  ],
                  "description": "The compile status."
                },
                "description": {
                  "type": "string",
                  "description": "Description of the subject."
                },
                "deploy_count": {
                  "type": "integer",
                  "description": "In this application version, the parameter is fixed to zero."
                },
                "ins_id": {
                  "type": "string",
                  "description": "The subject that configured the feature."
                },
                "ins_date": {
                  "type": "string",
                  "description": "The date the settings were created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                },
                "upd_id": {
                  "type": "string",
                  "description": "The subject that updated the settings."
                },
                "upd_date": {
                  "type": "string",
                  "description": "The date the settings were updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                }
              }
            }
          }
        }
      },
      "EdgeAppDeployHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The deploy ID."
          },
          "total_status": {
            "type": "string",
            "description": "The total status.\n- Value definition:\n  0: Running\n  1: Successfully completed\n  2: Failed\n  3: Canceled\n  9: Undeploy\n"
          },
          "deploy_parameter": {
            "type": "string",
            "description": "The deploy parameter."
          },
          "devices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "device_id": {
                  "type": "string",
                  "description": "The device ID."
                },
                "status": {
                  "type": "string",
                  "description": "The total status.\n- Value definition:\n  0: Running\n  1: Successfully completed\n  2: Failed\n  3: Canceled\n"
                },
                "latest_deployment_flg": {
                  "type": "string",
                  "description": "The deployment flg.\n- Value definition:\n  0: Old deployment history\n  1: Recent deployment history\n"
                },
                "ins_id": {
                  "type": "string",
                  "description": "The subject that configured the feature."
                },
                "ins_date": {
                  "type": "string",
                  "description": "The date the settings were created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                },
                "upd_id": {
                  "type": "string",
                  "description": "The subject that updated the settings."
                },
                "upd_date": {
                  "type": "string",
                  "description": "The date the settings were updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                }
              }
            }
          }
        }
      },
      "Firmwares": {
        "type": "object",
        "properties": {
          "firmware_id": {
            "type": "string",
            "description": "The firmware ID returned in the response from the GetFirmwares API."
          },
          "firmware_type": {
            "type": "string",
            "enum": [
              "edge_system_sw_package"
            ],
            "description": "Type of the Edge System Software."
          },
          "firmware_version": {
            "type": "string",
            "description": "Version of the Edge System Software."
          },
          "description": {
            "type": "string",
            "description": "Description of the Edge System Software."
          },
          "ins_id": {
            "type": "string",
            "description": "The subject that registered the Edge System Software."
          },
          "ins_date": {
            "type": "string",
            "description": "The date the Edge System Software was created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          },
          "upd_id": {
            "type": "string",
            "description": "The subject that updated the Edge System Software."
          },
          "upd_date": {
            "type": "string",
            "description": "The date the Edge System Software was updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          },
          "target_device_types": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Type of the target device."
          }
        }
      },
      "Firmware": {
        "type": "object",
        "properties": {
          "firmware_id": {
            "type": "string",
            "description": "The firmware ID returned in the response from the GetFirmwares API."
          },
          "firmware_type": {
            "type": "string",
            "enum": [
              "edge_system_sw_package"
            ],
            "description": "Returns the Edge System Software type."
          },
          "firmware_version": {
            "type": "string",
            "description": "Returns the Edge System Software version."
          },
          "description": {
            "type": "string",
            "description": "The Edge System Software description."
          },
          "ins_id": {
            "type": "string",
            "description": "The subject that registered the Edge System Software."
          },
          "ins_date": {
            "type": "string",
            "description": "The date the Edge System Software was created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          },
          "upd_id": {
            "type": "string",
            "description": "The subject that updated the Edge System Software."
          },
          "upd_date": {
            "type": "string",
            "description": "The date the Edge System Software was updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          },
          "target_device_types": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Type of the target device."
          },
          "manifest": {
            "type": "object",
            "description": "The package manifest."
          }
        }
      },
      "BindCommandParameterFileToDeviceJsonBody": {
        "required": [
          "device_ids"
        ],
        "type": "object",
        "properties": {
          "device_ids": {
            "type": "string",
            "description": "To specify multiple device IDs, separate them with commas."
          }
        },
        "description": "BindCommandParameterFileToDevice Json Body"
      },
      "UnbindCommandParameterFileJsonBody": {
        "required": [
          "device_ids"
        ],
        "type": "object",
        "properties": {
          "device_ids": {
            "type": "string",
            "description": "To specify multiple device IDs, separate them with commas."
          }
        },
        "description": "UnbindCommandParameterFileJsonBody Json Body"
      },
      "ChangePasswordJsonBody": {
        "required": [
          "password"
        ],
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "Plaintext and max. The maximum number of characters that can be specified is 32."
          }
        },
        "description": "ChangePassword API json_body"
      },
      "CreateFirmwareJsonBody": {
        "required": [
          "firmware_type",
          "file_id"
        ],
        "type": "object",
        "properties": {
          "firmware_type": {
            "type": "string",
            "enum": [
              "edge_system_sw_package"
            ],
            "description": "Type of the Edge System Software."
          },
          "description": {
            "type": "string",
            "description": "description. The maximum number of characters that can be specified is 100.",
            "default": ""
          },
          "file_id": {
            "type": "string",
            "description": "The file ID returned in the response from the UploadFile API."
          }
        },
        "description": "CreateFirmware API model"
      },
      "EnrollDeviceJsonBody": {
        "required": [
          "device_name",
          "primary_certificate"
        ],
        "type": "object",
        "properties": {
          "device_name": {
            "type": "string",
            "description": "Device name.\nThe maximum number of characters that can be specified is 255."
          },
          "primary_certificate": {
            "type": "string",
            "description": "Specify the string data of the X.509 primary certificate (.pem file or .cer file) for the subject device.\n*The data should not include the leading signatures, trailing signatures, or line breaks.  \n-----BEGIN CERTIFICATE-----  \n\n-----END CERTIFICATE-----  "
          },
          "device_version": {
            "type": "string",
            "description": "Device version.  \nIf device type is SZP123S-001, CSV26, or AIH-IVRW2, need to determine the version of the device based on the LED lighting patterns.  \nFor information on the LED lighting patterns, please refer to the Installation Guide in the Developer Site.  ",
            "enum": [
              "v1",
              "v2"
            ],
            "default": "v1"
          }
        },
        "description": "EnrollDevice Json Body"
      },
      "UpdateDeviceJsonBody": {
        "type": "object",
        "properties": {
          "device_name": {
            "type": "string",
            "description": "Device name.\nThe maximum number of characters that can be specified is 255."
          },
          "description": {
            "type": "string",
            "description": "Device description. The maximum number of characters that can be specified is 100."
          },
          "inactivity_timeout": {
            "type": "number",
            "description": "Time the device is considered inactive. 60 ~ 600 [sec]",
            "default": 600
          }
        },
        "description": "UpdateDevice Json Body"
      },
      "ImportEdgeAppJsonBody": {
        "required": [
          "edge_app_package_id"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the subject. The maximum number of characters that can be specified is 100."
          },
          "app_name": {
            "type": "string",
            "description": "Specify if you want to use a different The application name. from the one in the package."
          },
          "edge_app_package_id": {
            "type": "string",
            "description": "The Edge App Package file ID returned in the response from the UploadFile API."
          }
        }
      },
      "RegistCommandParameterFileBody": {
        "required": [
          "file_name",
          "parameter"
        ],
        "type": "object",
        "properties": {
          "file_name": {
            "type": "string",
            "description": "Filename. The maximum number of characters that can be specified is 100. "
          },
          "parameter": {
            "type": "string",
            "description": "Command parameter content in base64 encoding. *See manual for detailed format."
          },
          "comment": {
            "type": "string",
            "description": "Comment details."
          }
        },
        "description": "RegistCommandParameterFile Json Body"
      },
      "UpdateCommandParameterFileBody": {
        "required": [
          "parameter"
        ],
        "type": "object",
        "properties": {
          "parameter": {
            "type": "string",
            "description": "Command parameter content in base64 encoding. *See manual for detailed format."
          },
          "comment": {
            "type": "string",
            "description": "Comment."
          }
        },
        "description": "UpdateCommandParameterFile Json Body"
      },
      "UpdateDeviceCertificateJsonBody": {
        "type": "object",
        "properties": {
          "primary_certificate": {
            "type": "string",
            "description": "Specify the string data of the X.509 primary certificate (.pem file or .cer file) for the subject device.  \n*The data should not include the leading signatures, trailing signatures, or line breaks.  \n-----BEGIN CERTIFICATE-----  \n\n-----END CERTIFICATE-----  "
          },
          "device_name": {
            "type": "string",
            "description": "Device Name. The maximum number of characters that can be specified is 255.   "
          }
        },
        "description": "UpdateDeviceCertificate Json Body"
      },
      "ImportBaseModelJsonBody": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/InputFileOfImportBaseModelJsonBody",
            "description": "ImportBaseModel Json Body"
          },
          {
            "type": "object",
            "required": [
              "model_id"
            ],
            "properties": {
              "model_id": {
                "type": "string",
                "description": "Model ID for new registration or version upgrade. The maximum number of characters that can be specified is 100."
              },
              "converted": {
                "type": "boolean",
                "default": false,
                "description": "Specify whether to convert the specified model file."
              },
              "vendor_name": {
                "type": "string",
                "description": "Name of the vendor. The maximum number of characters that can be specified is 100. \n*Available only when registering a new base model."
              },
              "comment": {
                "type": "string",
                "description": "Description of the subject. The maximum number of characters that can be specified is 100. \n*If the description is saved for the first time, it will be applied for both model and its version. \n*When updating the content, it will be registered as a description for the version. "
              },
              "network_type": {
                "type": "string",
                "default": "1",
                "description": "Specify whether or not application is required for the AI model. \n- Value definition:  \n  0: Model required application  \n  1: Model do not required application  "
              },
              "reserved_mem": {
                "type": "integer",
                "default": 1024,
                "description": "Amount of the reserved memory on the chip when convert the specified model file. (bytes)  "
              },
              "metadata_format_id": {
                "type": "string",
                "description": "The metadata format ID returned in the response from the UploadFile API. The maximum number of characters that can be specified is 100."
              }
            }
          }
        ]
      },
      "ImportModelBundleJsonBody": {
        "title": "ImportModelBundleJsonBody",
        "type": "object",
        "description": "ImportModelBundle Json Body",
        "required": [
          "bundle_name"
        ],
        "properties": {
          "bundle_name": {
            "title": "Bundle Name",
            "type": "string",
            "description": "Model bundle name for new registration or version upgrade. The maximum number of characters that can be specified is 100."
          },
          "vendor_name": {
            "title": "Vendor Name",
            "type": "string",
            "description": "Name of the vendor. The maximum number of characters that can be specified is 100.  "
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "Description of the subject. The maximum number of characters that can be specified is 100.  \n*When saving a new model bundle, a same value is set to model bundle and model_bundle_version parameters.\n*When updating a model bundle, any string can be set for model_bundle_version."
          },
          "bundle_file_id": {
            "title": "Bundle",
            "type": "string",
            "description": "File ID of the model bundle file."
          }
        }
      },
      "AddAllowlistJsonBody": {
        "required": [
          "uuid"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "description": "uuid read from product package"
          },
          "ntp": {
            "type": "string",
            "description": "NTP server. The maximum number of characters that can be specified is 64."
          },
          "wifi_ssid": {
            "type": "string",
            "description": "WIFI SSID."
          },
          "wifi_pass": {
            "type": "string",
            "description": "WIFI Password."
          },
          "proxy_url": {
            "type": "string",
            "description": "Proxy URL."
          },
          "proxy_port": {
            "type": "string",
            "description": "Proxy port."
          },
          "proxy_user_name": {
            "type": "string",
            "description": "Proxy user name."
          },
          "proxy_pass": {
            "type": "string",
            "description": "Proxy password."
          },
          "ip_address": {
            "type": "string",
            "description": "IP Address. The maximum number of characters that can be specified is 39."
          },
          "subnet_mask": {
            "type": "string",
            "description": "Subnet Mask. The maximum number of characters that can be specified is 39."
          },
          "gateway": {
            "type": "string",
            "description": "Gateway. The maximum number of characters that can be specified is 39."
          },
          "dns": {
            "type": "string",
            "description": "DNS. The maximum number of characters that can be specified is 39."
          }
        },
        "description": "Add Allowlist Json Body"
      },
      "input_model_url": {
        "type": "object",
        "required": [
          "model"
        ],
        "properties": {
          "model": {
            "type": "string",
            "description": "SAS URL or Presigned URL of the AI model file."
          },
          "input_format_param": {
            "type": "string",
            "description": "SAS URL or Presigned URL of the input format param file.\n*Usage: Packager conversion information (image format information).  \n*The json format is an array of objects. Each object contains the following values.  \n&nbsp;・ordinal: Order of DNN input to converter (value range: 0 to 2)  \n&nbsp;・format: Format (\"RGB\" or \"BGR\")  \n*Example:  \n&nbsp;[{  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"ordinal\": 0,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"format\": \"RGB\"  \n&nbsp;},  \n&nbsp;{  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"ordinal\": 1,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"format\": \"RGB\"  \n&nbsp;}]  "
          },
          "network_config": {
            "type": "string",
            "description": "SAS URL or Presigned URL of the network config file.  \n*Usage: Conversion parameter information of the model converter. Therefore, it is not necessary to specify when specifying the AI model before conversion.  \n*Example:  \n&nbsp;{  \n&nbsp;&nbsp;&nbsp;\"Postprocessor\": {  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"params\": {  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"background\": false,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"scale_factors\": [  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.0,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.0,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.0,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.0  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;],  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"score_thresh\": 0.01,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"max_size_per_class\": 64,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"max_total_size\": 64,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"clip_window\": [  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;],  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"iou_threshold\": 0.45  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}  \n&nbsp;&nbsp;&nbsp;}  \n&nbsp;}  "
          }
        }
      },
      "input_model_file_id": {
        "type": "object",
        "required": [
          "model_file_id"
        ],
        "properties": {
          "model_file_id": {
            "type": "string",
            "description": "ID of the AI model file."
          },
          "input_format_param_file_id": {
            "type": "string",
            "description": "ID of the input format param file."
          },
          "network_config_file_id": {
            "type": "string",
            "description": "ID of the network config file."
          }
        }
      },
      "dcpu_url": {
        "type": "object",
        "properties": {
          "dcpu_firmware_url": {
            "type": "string",
            "description": "SAS URL or Presigned URL of the DCPU FW file."
          },
          "dcpu_manifest_url": {
            "type": "string",
            "description": "SAS URL or Presigned URL of the DCPU Manifest file."
          },
          "dcpu_postprocess_url": {
            "type": "string",
            "description": "SAS URL or Presigned URL of the DCPU Post Process file."
          }
        }
      },
      "dcpu_file_id": {
        "type": "object",
        "properties": {
          "dcpu_firmware_file_id": {
            "type": "string",
            "description": "ID of the DCPU FW file."
          },
          "dcpu_manifest_file_id": {
            "type": "string",
            "description": "ID of the DCPU Manifest file."
          },
          "dcpu_postprocess_file_id": {
            "type": "string",
            "description": "ID of the DCPU Post Process file."
          }
        }
      },
      "InputFileUrlOfImportBaseModelJsonBody": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/input_model_url"
          },
          {
            "$ref": "#/components/schemas/dcpu_url"
          }
        ]
      },
      "InputFileIdOfImportBaseModelJsonBody": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/input_model_file_id"
          },
          {
            "$ref": "#/components/schemas/dcpu_file_id"
          }
        ]
      },
      "InputFileOfImportBaseModelJsonBody": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/InputFileUrlOfImportBaseModelJsonBody"
          },
          {
            "$ref": "#/components/schemas/InputFileIdOfImportBaseModelJsonBody"
          }
        ]
      },
      "CreateProjectImageRegionsJsonBody": {
        "type": "object",
        "properties": {
          "regions": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "image_id"
              ],
              "properties": {
                "image_id": {
                  "type": "string",
                  "description": "Image ID."
                },
                "tag_id": {
                  "type": "string",
                  "description": "Tag Id. *Specify when assigning an existing tag."
                },
                "tag_name": {
                  "type": "string",
                  "description": "Tag Name. *Specify when assigning a new tag."
                },
                "left": {
                  "type": "string",
                  "description": "Left of the region (ratio of image size). *Available only for object detection."
                },
                "top": {
                  "type": "string",
                  "description": "Top of the region (ratio of image size). *Available only for object detection."
                },
                "width": {
                  "type": "string",
                  "description": "Width of the region (ratio of image size). *Available only for object detection."
                },
                "height": {
                  "type": "string",
                  "description": "Height of the region (ratio of image size). *Available only for object detection."
                }
              }
            }
          }
        },
        "description": "CreateProjectImageRegions JsonBody."
      },
      "UpdateProjectImageRegionsJsonBody": {
        "type": "object",
        "properties": {
          "regions": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "image_id"
              ],
              "properties": {
                "image_id": {
                  "type": "string",
                  "description": "Image ID."
                },
                "tag_id": {
                  "type": "string",
                  "description": "Tag Id. *Specify when assigning an existing tag."
                },
                "tag_name": {
                  "type": "string",
                  "description": "Tag Name. *Specify when assigning a new tag."
                },
                "left": {
                  "type": "string",
                  "description": "Left of the region (ratio of image size). *Available only for object detection."
                },
                "top": {
                  "type": "string",
                  "description": "Top of the region (ratio of image size). *Available only for object detection."
                },
                "width": {
                  "type": "string",
                  "description": "Width of the region (ratio of image size). *Available only for object detection."
                },
                "height": {
                  "type": "string",
                  "description": "Height of the region (ratio of image size). *Available only for object detection."
                }
              }
            }
          }
        },
        "description": "UpdateProjectImageRegions JsonBody."
      },
      "UpdateProjectTagJsonBody": {
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name."
          },
          "description": {
            "type": "string",
            "description": "Description of the subject."
          },
          "type": {
            "type": "string",
            "description": "type. *Specify Regular as fixed."
          }
        },
        "description": "UpdateProjectTag JsonBody."
      },
      "ImportImagesFromFilesJsonBody": {
        "required": [
          "images"
        ],
        "type": "object",
        "properties": {
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "file_name": {
                  "type": "string",
                  "description": "The filename."
                },
                "contents": {
                  "type": "string",
                  "description": "The image file (base64 encoding)."
                }
              }
            }
          },
          "tags_name": {
            "type": "array",
            "items": {},
            "description": "The annotation label. *Available only for classification. Supports only 1 tag.",
            "default": []
          }
        },
        "description": "ImportImagesFromFiles JsonBody."
      },
      "ImportImagesFromScblobJsonBody": {
        "required": [
          "container_url"
        ],
        "type": "object",
        "properties": {
          "container_url": {
            "type": "string",
            "description": "The SAS URL of Blob Storage Container. *Read and List permissions required."
          },
          "tags_name": {
            "type": "array",
            "items": {},
            "description": "The annotation label. *Available only for classification. Supports only 1 tag.",
            "default": []
          }
        },
        "description": "ImportImagesFromScblob JsonBody."
      },
      "UpdateBaseModelVersionJsonBody": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Description of version. The maximum number of characters that can be specified is 100. "
          },
          "input_format_param": {
            "type": "string",
            "description": "SAS URL or Presigned URL of the input format param file.  \n*Usage: Packager conversion information (image format information).  \n*The json format is an array of objects. Each object contains the following values.  \n&nbsp;・ordinal: Order of DNN input to converter (value range: 0 to 2)  \n&nbsp;・format: Format (\"RGB\" or \"BGR\")  \n*Example:  \n&nbsp;[{  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"ordinal\": 0,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"format\": \"RGB\"  \n&nbsp;},  \n&nbsp;{  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"ordinal\": 1,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"format\": \"RGB\"  \n&nbsp;}]  "
          },
          "network_config": {
            "type": "string",
            "description": "SAS URL or Presigned URL of the network config file.  \n*Usage: Conversion parameter information of the model converter. Therefore, it is not necessary to specify when specifying the AI model before conversion.  \n*Example:  \n&nbsp;{  \n&nbsp;&nbsp;&nbsp;\"Postprocessor\": {  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"params\": {  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"background\": false,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"scale_factors\": [  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.0,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.0,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.0,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.0  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;],  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"score_thresh\": 0.01,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"max_size_per_class\": 64,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"max_total_size\": 64,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"clip_window\": [  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;],  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"iou_threshold\": 0.45  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}  \n&nbsp;&nbsp;&nbsp;}  \n&nbsp;}  "
          }
        },
        "description": "UpdateBaseModelVersion JsonBody."
      },
      "UpdateDeviceModelVersionJsonBody": {
        "required": [
          "comment"
        ],
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Description of version."
          }
        },
        "description": "UpdateDeviceModelVersion JsonBody."
      },
      "Model": {
        "type": "object",
        "properties": {
          "model_id": {
            "type": "string",
            "description": "The model ID."
          },
          "model_type": {
            "type": "string",
            "description": "The model type."
          },
          "functionality": {
            "type": "string",
            "description": "The function descriptions."
          },
          "vendor_name": {
            "type": "string",
            "description": "The vendor's name."
          },
          "model_comment": {
            "type": "string",
            "description": "The description of the subject."
          },
          "network_type": {
            "type": "string",
            "description": "The network type."
          },
          "create_by": {
            "type": "string",
            "description": "Returns the create_by.\n- Value definition:  \n  Self: Self-training models\n  Marketplace: Marketplace purchasing model\n"
          },
          "package_id": {
            "type": "string",
            "description": "The marketplace package ID."
          },
          "product_id": {
            "type": "string",
            "description": "The marketplace product ID."
          },
          "metadata_format_id": {
            "type": "string",
            "description": "The metadata_format_id."
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModelProjectOfModel"
            }
          }
        }
      },
      "ModelInfo": {
        "type": "object",
        "properties": {
          "model_id": {
            "type": "string",
            "description": "The model ID."
          },
          "model_type": {
            "type": "string",
            "description": "The model type."
          },
          "functionality": {
            "type": "string",
            "description": "The function descriptions."
          },
          "vendor_name": {
            "type": "string",
            "description": "The vendor's name."
          },
          "model_comment": {
            "type": "string",
            "description": "The description of the subject."
          },
          "network_type": {
            "type": "string",
            "description": "The network type."
          },
          "create_by": {
            "type": "string",
            "description": "Returns the create_by.\n- Value definition:  \n  Self: Self-training models\n  Marketplace: Marketplace purchasing model\n"
          },
          "package_id": {
            "type": "string",
            "description": "The marketplace package ID."
          },
          "product_id": {
            "type": "string",
            "description": "The marketplace product ID."
          },
          "metadata_format_id": {
            "type": "string",
            "description": "The metadata_format_id."
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModelProjectOfModelInfo"
            }
          }
        }
      },
      "ModelProjectOfModel": {
        "type": "object",
        "properties": {
          "model_project_name": {
            "type": "string",
            "description": "The model project name."
          },
          "model_project_id": {
            "type": "string",
            "description": "The model project ID."
          },
          "model_platform": {
            "type": "string",
            "description": "The model platform."
          },
          "model_type": {
            "type": "string",
            "description": "The model type."
          },
          "project_type": {
            "type": "string",
            "description": "The project type."
          },
          "device_id": {
            "type": "string",
            "description": "The device ID."
          },
          "versions": {
            "type": "array",
            "description": "There must be one subordinate element for this API.",
            "items": {
              "$ref": "#/components/schemas/ModelVersion"
            }
          }
        }
      },
      "ModelProjectOfModelInfo": {
        "type": "object",
        "properties": {
          "model_project_name": {
            "type": "string",
            "description": "The model project name."
          },
          "model_project_id": {
            "type": "string",
            "description": "The model project ID."
          },
          "model_platform": {
            "type": "string",
            "description": "The model platform."
          },
          "model_type": {
            "type": "string",
            "description": "The model type."
          },
          "project_type": {
            "type": "string",
            "description": "The project type."
          },
          "device_id": {
            "type": "string",
            "description": "The device ID."
          },
          "versions": {
            "type": "array",
            "description": "There must be one subordinate element for this API.",
            "items": {
              "$ref": "#/components/schemas/ModelVersionInfo"
            }
          }
        }
      },
      "ModelVersion": {
        "type": "object",
        "properties": {
          "version_number": {
            "type": "string",
            "description": "The version number."
          },
          "iteration_id": {
            "type": "string",
            "description": "The iteration ID."
          },
          "iteration_name": {
            "type": "string",
            "description": "The iteration name."
          },
          "accuracy": {
            "type": "string",
            "description": "The accuracy."
          },
          "model_performances": {
            "type": "object",
            "description": "The performance information of the AI model."
          },
          "latest_flg": {
            "type": "string",
            "description": "The latest flag."
          },
          "publish_latest_flg": {
            "type": "string",
            "description": "The latest published flag."
          },
          "version_status": {
            "type": "string",
            "description": "The status."
          },
          "org_file_name": {
            "type": "string",
            "description": "The pre-conversion model filename."
          },
          "org_file_size": {
            "type": "integer",
            "description": "The publish model file size."
          },
          "publish_file_name": {
            "type": "string",
            "description": "The publish model filename."
          },
          "publish_file_size": {
            "type": "integer",
            "description": "The publish model file size."
          },
          "model_file_size": {
            "type": "integer",
            "description": "The model file size."
          },
          "model_framework": {
            "type": "string",
            "description": "The model framework."
          },
          "conv_id": {
            "type": "string",
            "description": "The conversion request ID."
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The label array."
          },
          "stage": {
            "type": "string",
            "description": "The conversion stage."
          },
          "result": {
            "type": "string",
            "description": "The conversion result."
          },
          "kpi": {
            "type": "object"
          }
        }
      },
      "ModelVersionInfo": {
        "type": "object",
        "properties": {
          "version_number": {
            "type": "string",
            "description": "The version number."
          },
          "iteration_id": {
            "type": "string",
            "description": "The iteration ID."
          },
          "iteration_name": {
            "type": "string",
            "description": "The iteration name."
          },
          "accuracy": {
            "type": "string",
            "description": "The accuracy."
          },
          "model_performances": {
            "type": "object",
            "description": "The performance information of the AI model."
          },
          "latest_flg": {
            "type": "string",
            "description": "The latest flag."
          },
          "publish_latest_flg": {
            "type": "string",
            "description": "The latest published flag."
          },
          "version_status": {
            "type": "string",
            "description": "The status."
          },
          "org_file_name": {
            "type": "string",
            "description": "The pre-conversion model filename."
          },
          "org_file_size": {
            "type": "integer",
            "description": "The publish model file size."
          },
          "publish_file_name": {
            "type": "string",
            "description": "The publish model filename."
          },
          "publish_file_size": {
            "type": "integer",
            "description": "The publish model file size."
          },
          "model_file_size": {
            "type": "integer",
            "description": "The model file size."
          },
          "model_framework": {
            "type": "string",
            "description": "The model framework."
          },
          "conv_id": {
            "type": "string",
            "description": "The conversion request ID."
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The label array."
          },
          "stage": {
            "type": "string",
            "description": "The conversion stage."
          },
          "result": {
            "type": "string",
            "description": "The conversion result."
          },
          "kpi": {
            "type": "object"
          },
          "converter_log": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "converter log."
          },
          "convert_start_date": {
            "type": "string",
            "description": "The conversion start date."
          },
          "convert_end_date": {
            "type": "string",
            "description": "The conversion end date."
          },
          "publish_start_date": {
            "type": "string",
            "description": "The publish start date."
          },
          "publish_end_date": {
            "type": "string",
            "description": "The publish end date."
          },
          "version_comment": {
            "type": "string",
            "description": "The description of the subject."
          },
          "version_ins_date": {
            "type": "string",
            "description": "The created time of the version."
          },
          "version_upd_date": {
            "type": "string",
            "description": "The created time of the version."
          }
        }
      },
      "ModelVersionJsonBody": {
        "type": "object",
        "properties": {
          "version_number": {
            "type": "string",
            "description": "The version number."
          },
          "iteration_id": {
            "type": "string",
            "description": "The iteration ID."
          },
          "iteration_name": {
            "type": "string",
            "description": "The iteration name."
          },
          "accuracy": {
            "type": "string",
            "description": "The accuracy."
          },
          "model_performances": {
            "type": "object",
            "description": "The performance information of the AI model."
          },
          "latest_flg": {
            "type": "string",
            "description": "The latest flag."
          },
          "publish_latest_flg": {
            "type": "string",
            "description": "The latest published flag."
          },
          "version_status": {
            "type": "string",
            "description": "The status."
          },
          "org_file_name": {
            "type": "string",
            "description": "The pre-conversion model filename."
          },
          "org_file_size": {
            "type": "integer",
            "description": "The publish model file size."
          },
          "publish_file_name": {
            "type": "string",
            "description": "The publish model filename."
          },
          "publish_file_size": {
            "type": "integer",
            "description": "The publish model file size."
          },
          "model_file_size": {
            "type": "integer",
            "description": "The model file size."
          },
          "model_framework": {
            "type": "string",
            "description": "The model framework."
          },
          "conv_id": {
            "type": "string",
            "description": "The conversion request ID."
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The label array."
          },
          "stage": {
            "type": "string",
            "description": "The conversion stage."
          },
          "result": {
            "type": "string",
            "description": "The conversion result."
          },
          "kpi": {
            "type": "object"
          },
          "converter_log": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "converter log."
          },
          "convert_start_date": {
            "type": "string",
            "description": "The conversion start date."
          },
          "convert_end_date": {
            "type": "string",
            "description": "The conversion end date."
          },
          "publish_start_date": {
            "type": "string",
            "description": "The publish start date."
          },
          "publish_end_date": {
            "type": "string",
            "description": "The publish end date."
          },
          "version_comment": {
            "type": "string",
            "description": "The description of the subject."
          },
          "version_ins_date": {
            "type": "string",
            "description": "The created time of the version."
          },
          "version_upd_date": {
            "type": "string",
            "description": "The created time of the version."
          }
        }
      },
      "ModelProject": {
        "type": "object",
        "required": [
          "model_project_name",
          "model_project_id"
        ],
        "properties": {
          "model_project_name": {
            "type": "string",
            "description": "The model project name."
          },
          "model_project_id": {
            "type": "string",
            "description": "The model project ID."
          },
          "model_platform": {
            "type": "string",
            "description": "The model platform."
          },
          "model_type": {
            "type": "string",
            "description": "The model type."
          },
          "project_type": {
            "type": "string",
            "description": "The project type."
          },
          "device_id": {
            "type": "string",
            "description": "The model device ID."
          },
          "project_model_file_name": {
            "type": "string",
            "description": "The project model filename."
          },
          "project_model_accuracy": {
            "type": "string",
            "description": "The project model accuracy."
          },
          "project_comment": {
            "type": "string",
            "description": "The project comment."
          },
          "project": {
            "type": "object",
            "properties": {
              "training_kit_id": {
                "type": "string",
                "description": "The training kit ID."
              },
              "training_kit_name": {
                "type": "string",
                "description": "The training kit name."
              },
              "description": {
                "type": "string",
                "description": "The description of the subject."
              },
              "iteration_id": {
                "type": "string",
                "description": "The iteration ID."
              },
              "iteration_name": {
                "type": "string",
                "description": "The iteration name."
              },
              "last_modified": {
                "type": "string",
                "description": "The last modified."
              }
            }
          },
          "model": {
            "type": "object",
            "properties": {
              "model_id": {
                "type": "string",
                "description": "The model ID."
              },
              "model_type": {
                "type": "string",
                "description": "The device type."
              },
              "functionality": {
                "type": "string",
                "description": "The function descriptions."
              },
              "vendor_name": {
                "type": "string",
                "description": "The vendor's name."
              },
              "model_comment": {
                "type": "string",
                "description": "The description of the subject."
              },
              "create_by": {
                "type": "string",
                "description": "Returns the create_by.\n- Value definition:  \n  Self: Self-training models\n  Marketplace: Marketplace purchasing model\n"
              },
              "package_id": {
                "type": "string",
                "description": "The marketplace package ID."
              },
              "product_id": {
                "type": "string",
                "description": "The marketplace product ID."
              },
              "metadata_format_id": {
                "type": "string",
                "description": "The metadata_format_id."
              },
              "latest_version": {
                "$ref": "#/components/schemas/ModelVersion"
              }
            }
          }
        }
      },
      "ModelProjectInfo": {
        "type": "object",
        "required": [
          "model_project_name",
          "model_project_id"
        ],
        "properties": {
          "model_project_name": {
            "type": "string",
            "description": "The model project name."
          },
          "model_project_id": {
            "type": "string",
            "description": "The model project ID."
          },
          "model_platform": {
            "type": "string",
            "description": "The model platform."
          },
          "model_type": {
            "type": "string",
            "description": "The model type."
          },
          "project_type": {
            "type": "string",
            "description": "The project type."
          },
          "device_id": {
            "type": "string",
            "description": "The model device ID."
          },
          "project_model_file_name": {
            "type": "string",
            "description": "The project model filename."
          },
          "project_model_accuracy": {
            "type": "string",
            "description": "The project model accuracy."
          },
          "project_comment": {
            "type": "string",
            "description": "The project comment."
          },
          "project": {
            "type": "object",
            "properties": {
              "training_kit_id": {
                "type": "string",
                "description": "The training kit ID."
              },
              "training_kit_name": {
                "type": "string",
                "description": "The training kit name."
              },
              "description": {
                "type": "string",
                "description": "The description of the subject."
              },
              "iteration_id": {
                "type": "string",
                "description": "The iteration ID."
              },
              "iteration_name": {
                "type": "string",
                "description": "The iteration name."
              },
              "last_modified": {
                "type": "string",
                "description": "The last modified."
              }
            }
          },
          "model": {
            "type": "object",
            "properties": {
              "model_id": {
                "type": "string",
                "description": "The model ID."
              },
              "model_type": {
                "type": "string",
                "description": "The device type."
              },
              "functionality": {
                "type": "string",
                "description": "The function descriptions."
              },
              "vendor_name": {
                "type": "string",
                "description": "The vendor's name."
              },
              "model_comment": {
                "type": "string",
                "description": "The description of the subject."
              },
              "create_by": {
                "type": "string",
                "description": "Returns the create_by.\n- Value definition:  \n  Self: Self-training models\n  Marketplace: Marketplace purchasing model\n"
              },
              "package_id": {
                "type": "string",
                "description": "The marketplace package ID."
              },
              "product_id": {
                "type": "string",
                "description": "The marketplace product ID."
              },
              "metadata_format_id": {
                "type": "string",
                "description": "The metadata_format_id."
              },
              "latest_version": {
                "$ref": "#/components/schemas/ModelVersionJsonBody"
              }
            }
          }
        }
      },
      "ModelBundles": {
        "type": "object",
        "properties": {
          "model_bundle_name": {
            "type": "string",
            "description": "Set the model bundle name."
          },
          "description": {
            "type": "string",
            "description": "Set the model bundle description."
          },
          "create_date": {
            "type": "string",
            "description": "Set the create time of model bundle."
          },
          "latest_version": {
            "type": "object",
            "properties": {
              "ai_model_bundle_id": {
                "type": "string",
                "description": "Set the AI model bundle ID."
              },
              "model_bundle_version": {
                "type": "string",
                "description": "Set the model bundle version number."
              },
              "encrypt_status": {
                "type": "string",
                "description": "Set the encrypt status.\n- Value definition:  \n  01: Before Encrypt  \n  02: Encrypting  \n  03: Encrypt Compeleted  \n  04: Encrypt Failed  \n  05: Encrypt Error  \n"
              },
              "create_date": {
                "type": "string",
                "description": "Set the create time of the version."
              },
              "update_date": {
                "type": "string",
                "description": "Set the update time of the version."
              }
            }
          }
        }
      },
      "ModelBundleInfo": {
        "type": "object",
        "properties": {
          "model_bundle_name": {
            "type": "string",
            "description": "Set the model bundle name."
          },
          "description": {
            "type": "string",
            "description": "Set the model bundle description."
          },
          "create_date": {
            "type": "string",
            "description": "Set the create time of model bundle."
          },
          "versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModelBundleVersions"
            }
          }
        }
      },
      "ModelBundleVersions": {
        "type": "object",
        "properties": {
          "ai_model_bundle_id": {
            "type": "string",
            "description": "Set the AI model bundle ID."
          },
          "model_bundle_version": {
            "type": "string",
            "description": "Set the model bundle version ID."
          },
          "latest_flg": {
            "type": "string",
            "description": "Set the latest flag."
          },
          "encrypt_status": {
            "type": "string",
            "description": "Set the encrypt status.\n- Value definition:  \n  01: Before Encrypt  \n  02: Encrypting  \n  03: Encrypt Compeleted  \n  04: Encrypt Failed  \n  05: Encrypt Error  \n"
          },
          "create_date": {
            "type": "string",
            "description": "Set the create time of the version."
          },
          "update_date": {
            "type": "string",
            "description": "Set the update time of the version."
          }
        }
      },
      "Image": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The image ID."
          },
          "created": {
            "type": "string",
            "description": "The date of creation."
          },
          "width": {
            "type": "integer",
            "description": "The width of the image."
          },
          "height": {
            "type": "integer",
            "description": "The height of the image."
          },
          "image": {
            "type": "string",
            "description": "Returns a base64-encoded image file."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "tag_id": {
                  "type": "string",
                  "description": "The tag ID."
                },
                "tag_name": {
                  "type": "string",
                  "description": "The name of the tag."
                },
                "created": {
                  "type": "string",
                  "description": "The date of creation."
                }
              }
            }
          },
          "regions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Region"
            }
          }
        }
      },
      "Region": {
        "type": "object",
        "properties": {
          "region_id": {
            "type": "string",
            "description": "The region ID."
          },
          "tag_id": {
            "type": "string",
            "description": "The tag ID."
          },
          "tag_name": {
            "type": "string",
            "description": "The name of the tag."
          },
          "created": {
            "type": "string",
            "description": "The date of creation."
          },
          "left": {
            "type": "number",
            "description": "Left of the region (ratio of image size). *Available only for object detection."
          },
          "top": {
            "type": "number",
            "description": "Top of the region (ratio of image size). *Available only for object detection."
          },
          "width": {
            "type": "number",
            "description": "Width of the region (ratio of image size). *Available only for object detection."
          },
          "height": {
            "type": "number",
            "description": "Height of the region (ratio of image size). *Available only for object detection."
          }
        }
      },
      "TrainingKit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The training kit ID."
          },
          "name": {
            "type": "string",
            "description": "The training kit name."
          },
          "description": {
            "type": "string",
            "description": "The tag description."
          },
          "created_on": {
            "type": "string",
            "description": "The date the training kit was created."
          },
          "status": {
            "type": "string",
            "description": "The status."
          },
          "training_kit_type": {
            "type": "string",
            "description": "The training kit type."
          },
          "default_dataset_split_percentage": {
            "type": "number",
            "description": "The default dataset split percentage."
          },
          "framework": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The framework name."
              },
              "version": {
                "type": "string",
                "description": "The framework version."
              }
            }
          },
          "owner": {
            "type": "string",
            "description": "The owner."
          },
          "is_public": {
            "type": "boolean",
            "description": "Set whether or not to publish."
          }
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "tag_id": {
            "type": "string",
            "description": "The tag ID."
          },
          "tag_name": {
            "type": "string",
            "description": "The name of the tag."
          },
          "tag_description": {
            "type": "string",
            "description": "The tag description."
          },
          "tag_type": {
            "type": "number",
            "description": "The tag type."
          },
          "image_count": {
            "type": "number",
            "description": "The number of tagged images."
          }
        }
      },
      "DeployConfiguration": {
        "type": "object",
        "required": [
          "config_id",
          "description",
          "running_cnt",
          "success_cnt",
          "fail_cnt",
          "edge_system_sw_package",
          "models",
          "edge_apps",
          "model_bundles",
          "custom_setting",
          "ins_id",
          "ins_date",
          "upd_id",
          "upd_date"
        ],
        "properties": {
          "config_id": {
            "type": "string",
            "description": "The config ID."
          },
          "description": {
            "type": "string",
            "description": "The config description."
          },
          "running_cnt": {
            "type": "integer",
            "description": "Returns the running cnt."
          },
          "success_cnt": {
            "type": "integer",
            "description": "Returns the success cnt."
          },
          "fail_cnt": {
            "type": "integer",
            "description": "Returns the fail cnt."
          },
          "edge_system_sw_package": {
            "type": "object",
            "properties": {
              "firmware_id": {
                "type": "string",
                "description": "The Edge System Software Package firmware ID."
              },
              "firmware_version": {
                "type": "string",
                "description": "The Edge System Software Package version."
              }
            }
          },
          "models": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "model_id": {
                  "type": "string",
                  "description": "The model ID."
                },
                "model_version_number": {
                  "type": "string",
                  "description": "The model version number."
                },
                "model_comment": {
                  "type": "string",
                  "description": "The model comment."
                },
                "model_version_comment": {
                  "type": "string",
                  "description": "The model version comment."
                }
              }
            }
          },
          "edge_apps": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "app_name": {
                  "type": "string",
                  "description": "The name of the Edge Application."
                },
                "app_version": {
                  "type": "string",
                  "description": "The application version."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the application."
                }
              }
            }
          },
          "model_bundles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "model_bundle_name": {
                  "type": "string",
                  "description": "The model bundle name."
                },
                "model_bundle_version": {
                  "type": "string",
                  "description": "The model bundle version."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the model bundle."
                }
              }
            }
          },
          "ins_id": {
            "type": "string",
            "description": "The subject that registered the deployment."
          },
          "ins_date": {
            "type": "string",
            "description": "The date the deployment was created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          },
          "upd_id": {
            "type": "string",
            "description": "The subject that updated the deployment."
          },
          "upd_date": {
            "type": "string",
            "description": "The date the deployment was updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          }
        }
      },
      "DeployHistory": {
        "type": "object",
        "required": [
          "deploy_id",
          "from_datetime",
          "deploy_type",
          "deploying_cnt",
          "success_cnt",
          "fail_cnt"
        ],
        "properties": {
          "deploy_id": {
            "type": "string",
            "description": "Deploy ID."
          },
          "from_datetime": {
            "type": "string",
            "description": "Deployment from datetime."
          },
          "deploy_type": {
            "type": "string",
            "enum": [
              "deploy_config",
              "device_model"
            ],
            "description": "Deployment Type"
          },
          "deploying_cnt": {
            "type": "integer",
            "description": "Returns the deploying cnt."
          },
          "success_cnt": {
            "type": "integer",
            "description": "Returns the success cnt."
          },
          "fail_cnt": {
            "type": "integer",
            "description": "Returns the fail cnt."
          },
          "config_id": {
            "type": "string",
            "description": "Deploy Configuration ID."
          },
          "replace_model_id": {
            "type": "string",
            "description": "(Only if \"deploy_type\"=\"device_model\") The replace model ID."
          },
          "replace_network_id": {
            "type": "string",
            "description": "(Only if \"deploy_type\"=\"device_model\") The replace network ID."
          },
          "edge_system_sw_package": {
            "type": "object",
            "properties": {
              "firmware_id": {
                "type": "string",
                "description": "The Edge System Software Package firmware ID."
              },
              "firmware_version": {
                "type": "string",
                "description": "The Edge System Software Package version."
              }
            }
          },
          "models": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "model_id": {
                  "type": "string",
                  "description": "The model ID."
                },
                "model_version_number": {
                  "type": "string",
                  "description": "The model version number."
                },
                "model_comment": {
                  "type": "string",
                  "description": "The model comment."
                },
                "model_version_comment": {
                  "type": "string",
                  "description": "The model version comment."
                }
              }
            }
          },
          "edge_apps": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "app_name": {
                  "type": "string",
                  "description": "The application name."
                },
                "app_version": {
                  "type": "string",
                  "description": "The application version."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the application."
                }
              }
            }
          },
          "model_bundles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "model_bundle_name": {
                  "type": "string",
                  "description": "The model bundle name."
                },
                "model_bundle_version": {
                  "type": "string",
                  "description": "The model bundle version."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the model bundle."
                }
              }
            }
          }
        }
      },
      "DeployStatus": {
        "type": "object",
        "required": [
          "deploy_id",
          "from_datetime",
          "deploy_type",
          "running_cnt",
          "success_cnt",
          "fail_cnt",
          "devices"
        ],
        "properties": {
          "deploy_id": {
            "type": "string",
            "description": "ID in table sc_t_deploy or sc_t_app_deploy"
          },
          "from_datetime": {
            "type": "string",
            "description": "Deployment from datetime."
          },
          "deploy_type": {
            "type": "string",
            "description": "Deployment Type."
          },
          "deploying_cnt": {
            "type": "integer",
            "description": "Returns the running cnt."
          },
          "success_cnt": {
            "type": "integer",
            "description": "Returns the success cnt."
          },
          "fail_cnt": {
            "type": "integer",
            "description": "Returns the fail cnt."
          },
          "config_id": {
            "type": "string",
            "description": "The deploy config ID."
          },
          "replace_model_id": {
            "type": "string",
            "description": "(Only if \"deploy_type\"=\"device_model\") The replace model ID."
          },
          "replace_network_id": {
            "type": "string",
            "description": "(Only if \"deploy_type\"=\"device_model\") The replace network ID."
          },
          "edge_system_sw_package": {
            "type": "object",
            "properties": {
              "firmware_id": {
                "type": "string",
                "description": "The Edge System Software Package firmware ID."
              },
              "firmware_version": {
                "type": "string",
                "description": "The Edge System Software Package version."
              }
            }
          },
          "models": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "model_id": {
                  "type": "string",
                  "description": "The model ID."
                },
                "model_version_number": {
                  "type": "string",
                  "description": "The model version number."
                },
                "model_comment": {
                  "type": "string",
                  "description": "The model comment."
                },
                "model_version_comment": {
                  "type": "string",
                  "description": "The model version comment."
                }
              }
            }
          },
          "edge_apps": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "app_name": {
                  "type": "string",
                  "description": "The application name."
                },
                "app_version": {
                  "type": "string",
                  "description": "The application version."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the application."
                }
              }
            }
          },
          "model_bundles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "model_bundle_name": {
                  "type": "string",
                  "description": "The model bundle name."
                },
                "model_bundle_version": {
                  "type": "string",
                  "description": "The model bundle version."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the model bundle."
                }
              }
            }
          },
          "devices": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "device_id",
                "device_name",
                "deploy_status"
              ],
              "properties": {
                "device_id": {
                  "type": "string",
                  "description": "The device ID."
                },
                "device_name": {
                  "type": "string",
                  "description": "The device name."
                },
                "deploy_status": {
                  "type": "string",
                  "enum": [
                    "deploying",
                    "success",
                    "fail",
                    "cancel"
                  ],
                  "description": "Get the deploy status. *Target device deployment status."
                },
                "update_progress_percentage": {
                  "type": "integer",
                  "description": "The update progress in percentage."
                }
              }
            }
          }
        },
        "x-apifox-orders": [
          "device_id",
          "device_name",
          "deploy_status",
          "running_cnt",
          "success_cnt",
          "fail_cnt",
          "config_id",
          "dnn_model",
          "device_firmware",
          "device_sensor",
          "device_sensor_loader",
          "device"
        ],
        "x-apifox-ignore-properties": []
      },
      "DeviceDeployHistory": {
        "type": "object",
        "required": [
          "deploy_id",
          "deploy_type",
          "deploy_status",
          "firmware",
          "model",
          "custom_setting",
          "ins_id",
          "ins_date",
          "upd_id",
          "upd_date"
        ],
        "properties": {
          "deploy_id": {
            "type": "string",
            "description": "Deploy ID."
          },
          "deploy_type": {
            "type": "string",
            "enum": [
              "deploy_config",
              "device_model"
            ],
            "description": "The deploy type."
          },
          "deploy_status": {
            "type": "string",
            "enum": [
              "deploying",
              "success",
              "fail",
              "cancel"
            ],
            "description": "The deploy status. *Target device deployment status."
          },
          "update_progress_percentage": {
            "type": "integer",
            "description": "The update progress in percentage."
          },
          "description": {
            "type": "string",
            "description": "The deploy description."
          },
          "config_id": {
            "type": "string",
            "description": "The deploy config ID."
          },
          "replace_model_id": {
            "type": "string",
            "description": "(Only if \"deploy_type\"=\"device_model\") The replace model ID."
          },
          "replace_network_id": {
            "type": "string",
            "description": "(Only if \"deploy_type\"=\"device_model\") The replace network ID."
          },
          "edge_system_sw_package": {
            "type": "object",
            "properties": {
              "firmware_id": {
                "type": "string",
                "description": "The Edge System Software Package firmware ID."
              },
              "firmware_version": {
                "type": "string",
                "description": "The Edge System Software Package version."
              }
            }
          },
          "models": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "model_id": {
                  "type": "string",
                  "description": "The model ID."
                },
                "model_version_number": {
                  "type": "string",
                  "description": "The model version number."
                },
                "model_comment": {
                  "type": "string",
                  "description": "The model comment."
                },
                "model_version_comment": {
                  "type": "string",
                  "description": "The model version comment."
                }
              }
            }
          },
          "edge_apps": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "app_name": {
                  "type": "string",
                  "description": "The application name."
                },
                "app_version": {
                  "type": "string",
                  "description": "The application version."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the application."
                }
              }
            }
          },
          "model_bundles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "model_bundle_name": {
                  "type": "string",
                  "description": "The model bundle name."
                },
                "model_bundle_version": {
                  "type": "string",
                  "description": "The model bundle version."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the model bundle."
                }
              }
            }
          }
        }
      },
      "IrHubConnectorDefault": {
        "required": [
          "type",
          "url",
          "name"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "Default(Internal)",
            "description": "The platform where the system should send the inference results."
          },
          "url": {
            "type": "string",
            "default": "",
            "description": "Set empty string."
          },
          "name": {
            "type": "string",
            "default": "",
            "description": "Set empty string."
          }
        }
      },
      "IrHubConnectorAzureBlobStorage": {
        "required": [
          "type",
          "url",
          "name"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "AzureBlobStorage",
            "description": "The platform where the system should send the inference results."
          },
          "url": {
            "type": "string",
            "description": "Connection string for Azure Blob Storage."
          },
          "name": {
            "type": "string",
            "description": "The name of the blob container within Azure storage account."
          }
        }
      },
      "IrHubConnectorAzureEventHub": {
        "required": [
          "type",
          "url",
          "name"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "AzureEventHub",
            "description": "The platform where the system should send the inference results."
          },
          "url": {
            "type": "string",
            "description": "Connection string for Azure Event Hubs."
          },
          "name": {
            "type": "string",
            "description": "The name of the Azure EventHub entity."
          }
        }
      },
      "IrHubConnectorKafka": {
        "required": [
          "type",
          "name",
          "bootstrap_servers"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "Kafka",
            "description": "The platform where the system should send the inference results."
          },
          "name": {
            "type": "string",
            "description": "The name of the configured Kafka topic"
          },
          "username": {
            "type": "string",
            "description": "The Username to authenticate. This value is masked (replaced with asterisks) to ensure sensitive data remains secure and unreadable."
          },
          "password": {
            "type": "string",
            "description": "Password to authenticate. This value is masked (replaced with asterisks) to ensure sensitive data remains secure and unreadable."
          },
          "client_id": {
            "type": "string",
            "description": "Value used to categorize or identify the source of messages. This value is masked (replaced with asterisks) to ensure sensitive data remains secure and unreadable."
          },
          "bootstrap_servers": {
            "type": "string",
            "description": "The list of Kafka endpoints the service could reach. At least two are recommended. This value is masked in responses and logs (e.g., replaced with asterisks) when authentication via username and password is not required."
          }
        }
      },
      "IrHubConnectorAwsS3": {
        "required": [
          "type",
          "name",
          "secret_access_key",
          "access_key"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "AWSS3",
            "description": "The platform where the system should send the inference results."
          },
          "name": {
            "type": "string",
            "description": "The name of the AWS S3 bucket where the data will be stored."
          },
          "secret_access_key": {
            "type": "string",
            "description": "Partly masked value of AWS secret access key for writing into the destination bucket."
          },
          "access_key": {
            "type": "string",
            "description": "Partly masked value of AWS access key for writing into the destination bucket."
          }
        }
      },
      "IrHubConnectorAwsKinesis": {
        "required": [
          "type",
          "url",
          "name"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "AWSKinesis",
            "description": "The platform where the system should send the inference results."
          },
          "name": {
            "type": "string",
            "description": "The name of the AWS Kinesis where the data will be stored."
          },
          "secret_access_key": {
            "type": "string",
            "description": "Partly masked value of AWS secret access key for writing into the destination kinesis."
          },
          "access_key": {
            "type": "string",
            "description": "Partly masked value of AWS access key for writing into the destination kinesis."
          }
        }
      },
      "GetStorageConnectorInputJsonBody": {
        "type": "object",
        "allOf": [
          {
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/GetDestinationOfStorageConnectorInputJsonBody"
          }
        ]
      },
      "GetStorageConnectorInferenceJsonBody": {
        "type": "object",
        "allOf": [
          {
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/GetDestinationOfStorageConnectorInferenceJsonBody"
          }
        ]
      },
      "GetIRHubConnectorJsonBody": {
        "title": "GetIRHubConnectorJsonBody",
        "type": "object",
        "allOf": [
          {
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/GetIRHubJsonBody",
            "description": "GetIRHubConnector JsonBody."
          }
        ]
      },
      "UpdateIRHubConnectorJsonBody": {
        "title": "UpdateIRHubConnectorJsonBody",
        "type": "object",
        "allOf": [
          {
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/DestinationOfIRHubConnectorJsonBody",
            "description": "UpdateIRHubConnector JsonBody."
          }
        ]
      },
      "AzureEventHub": {
        "type": "object",
        "required": [
          "type",
          "url",
          "name"
        ],
        "properties": {
          "type": {
            "title": "Type",
            "type": "string",
            "default": "",
            "description": "The platform type where the system should store the inference results. Set \"AzureEventHub\". *Connector would be initial setting if type is \"\"."
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "Connection string for Azure Event Hubs."
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "The name of Azure Event Hubs Instance Name."
          }
        }
      },
      "Kafka": {
        "type": "object",
        "required": [
          "type",
          "name",
          "bootstrap_servers"
        ],
        "properties": {
          "type": {
            "title": "Type",
            "type": "string",
            "default": "",
            "description": "The platform type where the system should store the inference results. Set \"Kafka\". *Connector would be initial setting if type is \"\"."
          },
          "name": {
            "title": "Topic name",
            "type": "string",
            "description": "The name of the Kafka topic to publish telemetries"
          },
          "bootstrap_servers": {
            "title": "Bootstrap servers",
            "type": "string",
            "description": "The list of Kafka endpoints the service could reach. At least two are recommended."
          },
          "username": {
            "title": "Username",
            "type": "string",
            "description": "Username to authenticate"
          },
          "password": {
            "title": "Password",
            "type": "string",
            "description": "The password for the given username."
          },
          "client_id": {
            "title": "Client ID",
            "type": "string",
            "description": "Optional value used to categorize or identify the source of messages, providing additional traceability on the client side."
          }
        }
      },
      "AWSKinesis": {
        "type": "object",
        "required": [
          "type",
          "name",
          "secret_access_key",
          "access_key",
          "partition_key"
        ],
        "properties": {
          "type": {
            "title": "Type",
            "type": "string",
            "default": "",
            "description": "The platform type where the system should store the inference results. Set \"AWSKINESIS\". *Connector would be initial setting if type is \"\"."
          },
          "name": {
            "title": "Stream name",
            "type": "string",
            "description": "The name of AWS kinesis stream"
          },
          "secret_access_key": {
            "title": "Secret Access Key",
            "type": "string",
            "description": "The value of AWS secret access key for writing into the destination Kinesis."
          },
          "access_key": {
            "title": "Access Key",
            "type": "string",
            "description": "The value of AWS access key for writing into the destination Kinesis."
          },
          "partition_key": {
            "title": "Kinesis Partition Key",
            "type": "string",
            "default": "DeviceID",
            "description": "The value of AWS access key for writing into the destination Kinesis."
          },
          "region": {
            "title": "AWS region",
            "type": "string",
            "description": "The value of AWS region key where destination Kinesis is at."
          }
        }
      },
      "AzureBlobStorage": {
        "type": "object",
        "required": [
          "type",
          "url",
          "name"
        ],
        "properties": {
          "type": {
            "title": "Type",
            "type": "string",
            "default": "",
            "description": "The platform type where the system should store the inference results. Set \"AzureBlobStorage\". *Connector would be initial setting if type is \"\"."
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "Connection string for Azure Blob Storage."
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "The name of Azure BlobStorage Container."
          }
        }
      },
      "AWSS3": {
        "type": "object",
        "required": [
          "type",
          "name",
          "secret_access_key",
          "access_key"
        ],
        "properties": {
          "type": {
            "title": "Type",
            "type": "string",
            "default": "",
            "description": "The platform type where the system should store the inference results. Set \"AWSS3\". *Connector would be initial setting if type is \"\"."
          },
          "secret_access_key": {
            "title": "Secret Access Key",
            "type": "string",
            "description": "The value of AWS secret access key for writing into the destination bucket."
          },
          "access_key": {
            "title": "Access Key",
            "type": "string",
            "description": "The value of AWS access key for writing into the destination bucket.    "
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "The namespace of Azure Event Hubs. *To reset the external transfer settings to their default values, specify an empty string (\"\") for the parameters."
          }
        }
      },
      "GetDestinationOfStorageConnectorInputJsonBody": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/StorageInputDefault"
          },
          {
            "$ref": "#/components/schemas/StorageAzure"
          },
          {
            "$ref": "#/components/schemas/StorageAWS"
          }
        ]
      },
      "GetDestinationOfStorageConnectorInferenceJsonBody": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/StorageInferenceDefault"
          },
          {
            "$ref": "#/components/schemas/StorageAzure"
          },
          {
            "$ref": "#/components/schemas/StorageAWS"
          }
        ]
      },
      "GetIRHubJsonBody": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/IrHubConnectorDefault"
          },
          {
            "$ref": "#/components/schemas/IrHubConnectorAzureBlobStorage"
          },
          {
            "$ref": "#/components/schemas/IrHubConnectorAzureEventHub"
          },
          {
            "$ref": "#/components/schemas/IrHubConnectorAwsKinesis"
          },
          {
            "$ref": "#/components/schemas/IrHubConnectorAwsS3"
          },
          {
            "$ref": "#/components/schemas/IrHubConnectorKafka"
          }
        ]
      },
      "DestinationOfIRHubConnectorJsonBody": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/AzureEventHub"
          },
          {
            "$ref": "#/components/schemas/AzureBlobStorage"
          },
          {
            "$ref": "#/components/schemas/AWSS3"
          },
          {
            "$ref": "#/components/schemas/AWSKinesis"
          },
          {
            "$ref": "#/components/schemas/Kafka"
          }
        ]
      },
      "SetImageConfigurationJsonBody": {
        "type": "object",
        "properties": {
          "frame_rate": {
            "type": "integer",
            "description": "The frame rate. *Set an integer value multiplied by 100 for the frame rate that comes up from the sensor. The maximum value of the frame rate depends on the value of DriveMode (see the Drive mode spec of drive_mode parameters for details).\n- Value definition:  \n  99  \n  499  \n  999  \n  1248  \n  1498  \n  1998  \n  2497  \n  2997  ",
            "default": 2997
          },
          "drive_mode": {
            "type": "integer",
            "description": "The drive mode.\n- Value definition:  \n  1  \n  2  \n  3  \n  4  \n- Drive mode spec  \n  <table>\n    <thead>\n      <tr>\n        <th>Mode</th>\n        <th>Binning</th>\n        <th>Scale</th>\n        <th>Crop</th>\n        <th>Raw Size</th>\n        <th>Max Frame Rate</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>1</td>\n        <td>On</td>\n        <td>-</td>\n        <td>-</td>\n        <td>2028x1520</td>\n        <td>30(29.97)fps</td>\n      </tr>\n      <tr>\n        <td>2</td>\n        <td>Off</td>\n        <td>On</td>\n        <td>-</td>\n        <td>2028x1520</td>\n        <td>20(19.98)fps</td>\n      </tr>\n      <tr>\n        <td>3</td>\n        <td>Off</td>\n        <td>Off</td>\n        <td>On</td>\n        <td>2028x1520</td>\n        <td>20(19.98)fps</td>\n      </tr>\n      <tr>\n        <td>4</td>\n        <td>Off</td>\n        <td>Off</td>\n        <td>Off</td>\n        <td>4056x3040</td>\n        <td>10(9.99)fps</td>\n      </tr>\n    </tbody>\n  </table>",
            "default": 1
          }
        },
        "description": "SetImageConfiguration JsonBody."
      },
      "SetModuleAppLogJsonBody": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "Set logging enable/disable.\n- Value definition:  \n  true: enable  \n  false: disable  ",
            "default": true
          }
        },
        "description": "SetModuleAppLog JsonBody."
      },
      "DeleteImagesJsonBody": {
        "type": "object",
        "properties": {
          "directory_deletion": {
            "type": "string",
            "default": "0",
            "description": "The directory deletion flag.\n- Value definition:  \n  0: Delete by specifying a file\n  1: Delete files by specifying a directory\n"
          },
          "filenames": {
            "description": "Specify the file name to delete when the value of directory_deletion is set to 0.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "limit": {
            "type": "integer",
            "default": 10000,
            "description": "Number of the items to be deleted. The oldest stored items are deleted first.\nValue range: 1 to 10000\n"
          }
        },
        "description": "DeleteImages JsonBody."
      },
      "StorageInputDefault": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "Default(Internal)",
            "description": "The storage service type."
          },
          "container_name": {
            "type": "string",
            "default": "",
            "description": "Set empty string."
          },
          "connection_string": {
            "type": "string",
            "default": "",
            "description": "Set empty string."
          }
        }
      },
      "StorageInferenceDefault": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "Default(Undefined)",
            "description": "The storage service type."
          },
          "container_name": {
            "type": "string",
            "default": "",
            "description": "Set empty string."
          },
          "connection_string": {
            "type": "string",
            "default": "",
            "description": "Set empty string."
          }
        }
      },
      "StorageAzure": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "AZURE",
            "description": "The storage service type."
          },
          "container_name": {
            "type": "string",
            "description": "Container name of Azure Blob Storage."
          },
          "connection_string": {
            "type": "string",
            "description": "Connection string for Azure Blob Storage."
          }
        }
      },
      "StorageAWS": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "AWS",
            "description": "The storage service type."
          },
          "bucket_name": {
            "type": "string",
            "description": "AWS S3 Bucket name."
          },
          "region": {
            "type": "string",
            "description": "AWS Region."
          },
          "secret_access_key": {
            "type": "string",
            "description": "Partly masked AWS Secret Access key."
          },
          "access_key_id": {
            "type": "string",
            "description": "Partly masked AWS Access key ID."
          }
        }
      },
      "UpdateStorageConnectorJsonBody": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudTypeConnectorJsonBody",
            "description": "UpdateStorageConnector Json Body"
          },
          {
            "type": "object"
          }
        ]
      },
      "Azure": {
        "type": "object",
        "properties": {
          "type": {
            "default": "AZURE",
            "type": "string",
            "description": "The storage service type. Specify “AZURE” as the value. \n- Value definition:  \n  AZURE"
          },
          "mode": {
            "default": 0,
            "type": "integer",
            "description": "Specifies the input image, inferences result or both to be streamed. \n- Value definition:  \n  0: input image only  \n  1: input image and inference result  \n  2: inference result only"
          },
          "endpoint": {
            "type": "string",
            "description": "Destination Azure Blob Storage endpoint.  \n*Please do not set “endpoint”, “connection_string”, or “container_name” when returning to the initial value. In the case of the initial value when input image is specified in “mode”, it will be streamed within this service and then when inference result is specified in “mode”, the settings for inference are deleted."
          },
          "connection_string": {
            "type": "string",
            "description": "Connection string for Azure Blob Storage.  \n*When initializing, see the description of “endpoint”.  "
          },
          "container_name": {
            "type": "string",
            "description": "Container name of Azure Blob Storage.  \n*When initializing, see the description of “endpoint”.  "
          }
        }
      },
      "AWS": {
        "type": "object",
        "required": [
          "type",
          "endpoint",
          "region",
          "bucket_name",
          "secret_access_key",
          "access_key_id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "The storage service type. Specify “AWS” as the value.  \n- Value definition:  \n  AWS"
          },
          "mode": {
            "default": 0,
            "type": "integer",
            "description": "The mode. Specifies the input image , inference result, or both to be streamed. \n- Value definition:  \n  0: input image only  \n  1: input image and inference result  \n  2: inference result only"
          },
          "endpoint": {
            "type": "string",
            "description": "Destination AWS S3 endpoint.  "
          },
          "region": {
            "type": "string",
            "description": "AWS Region. *Need to choose from the official list.  "
          },
          "bucket_name": {
            "type": "string",
            "description": "AWS S3 Bucket name.  "
          },
          "secret_access_key": {
            "type": "string",
            "description": "AWS Secret Access key.  "
          },
          "access_key_id": {
            "type": "string",
            "description": "AWS Access key ID.  "
          }
        }
      },
      "CloudTypeConnectorJsonBody": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/Azure"
          },
          {
            "$ref": "#/components/schemas/AWS"
          }
        ]
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ]
}