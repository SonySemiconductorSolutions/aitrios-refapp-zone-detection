{
  "openapi": "3.0.2",
  "info": {
    "title": "AITRIOS | Console",
    "version": "1.8.2"
  },
  "paths": {
    "/provisioning/qrcode": {
      "get": {
        "tags": [
          "Provisioning"
        ],
        "summary": "GetQrCodeForProvisioning",
        "description": "Returns a QR in base64-encoded format to provision the Edge Device.  ",
        "operationId": "get_qr_code_for_provisioning",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "ntp",
            "in": "query",
            "description": "NTP server. The maximum number of characters that can be specified is 64."
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "name": "auto",
            "in": "query",
            "description": "Connection state.\n- Value definition  \n  true: Generates an Enrollment QR for auto enrollment.\n  false: Generates a Service QR for manual enrollment."
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "wifi_ssid",
            "description": "SSID information to connect the Wi-Fi network.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "wifi_pass",
            "description": "Password to connect the Wi-Fi network.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "proxy_url",
            "description": "URL of the proxy server.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "proxy_port",
            "description": "Port number of the proxy server.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "proxy_user_name",
            "description": "Username to access the proxy server.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "proxy_pass",
            "description": "Password to access the proxy server.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "ip_address",
            "in": "query",
            "description": "IP address assigned to the device. The maximum number of characters that can be specified is 39."
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "subnet_mask",
            "in": "query",
            "description": "Subnet mask applied to the device. The maximum number of characters that can be specified is 39."
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "gateway",
            "in": "query",
            "description": "Gateway to connect the device. The maximum number of characters that can be specified is 39."
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "dns",
            "in": "query",
            "description": "DNS information of the server. The maximum number of characters that can be specified is 39."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "contents"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS"
                    },
                    "contents": {
                      "type": "string",
                      "description": "QR (base64 encoding)."
                    }
                  }
                },
                "example": {
                  "result": "SUCCESS",
                  "contents": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0030001  \n  Invalid parameter wifi_ssid.  \n- E.SC.API.0030002  \n  Invalid parameter wifi_pass.  \n- E.SC.API.0030003  \n  Invalid parameter manifest_file_url.  \n- E.SC.API.0030004  \n  Invalid parameter proxy_url.  \n- E.SC.API.0030005  \n  Invalid parameter proxy_port.  \n- E.SC.API.0030006  \n  Invalid parameter proxy_user_name.  \n- E.SC.API.0030007  \n  Invalid parameter proxy_pass.  \n- E.SC.API.0030008  \n  Invalid parameter ip_address.  \n- E.SC.API.0030009  \n  Invalid parameter subnet_mask.  \n- E.SC.API.0030010  \n  Invalid parameter gateway.  \n- E.SC.API.0030011  \n  Invalid parameter dns.  \n- E.SC.API.0030012  \n  Invalid parameter ntp.  \n- E.SC.API.0030013  \n  Parameter ntp is not set.  \n- E.SC.API.0030014  \n  Invalid parameter auto.  \n- E.SC.API.0030015  \n  Invalid parameter ip_address_ipv6.  \n- E.SC.API.0030016  \n  Invalid parameter subnet_mask_ipv6.  \n- E.SC.API.0030017  \n  Invalid parameter gateway_ipv6.  \n- E.SC.API.0030018  \n  Invalid parameter dns_ipv6.  \n- E.SC.API.0030019  \n  Parameter device_type is not set.  \n- E.SC.API.0030020  \n  Invalid parameter device_type.  \n- E.SC.API.0030021  \n  Parameter dhcp is not set.  \n- E.SC.API.0030022  \n  Invalid parameter dhcp.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/devices": {
      "post": {
        "tags": [
          "Certificate"
        ],
        "summary": "EnrollDevice",
        "description": "Registers your Edge Device with a device certificate.  \nAssumptions and Notes:    \n  ・Certification format: Primary device X.509 certificate (.pem file, .cer file, or .crt file).",
        "operationId": "enroll_device",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnrollDeviceJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS"
                    },
                    "id": {
                      "type": "string",
                      "description": "The registered device ID."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0144001  \n  Json format is invalid.  \n- E.SC.API.0144002  \n  Parameter device_name is not set.  \n- E.SC.API.0144003  \n  Invalid parameter device_name.  \n- E.SC.API.0144004  \n  Parameter device_type is not set.  \n- E.SC.API.0144005  \n  Parameter primary_certificate is not set.  \n- E.SC.API.0144006  \n  The specified parameter device_name is registered.  \n- E.SC.API.0144008  \n  The specified certificate is registered.  \n- E.SC.API.0144009  \n  The specified certificate is registered by some device.  \n- E.SC.API.0144010  \n  An invalid or already enrolled device certificate was specified.  \n- E.SC.API.0144011  \n  The device of the specified certificate is already registered in another project.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0144007  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Manage Devices"
        ],
        "summary": "GetDevices",
        "description": "Lists the information of Edge Devices specified by query parameters.",
        "operationId": "get_devices",
        "parameters": [
          {
            "description": "Connection state.\n- Value definition  \n  Connected  \n  Disconnected",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "connectionState",
            "in": "query"
          },
          {
            "description": "Name of the device. *Fuzzy searching is available.",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "device_name",
            "in": "query"
          },
          {
            "description": "The Device ID. *Fuzzy searching is available.",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "device_id",
            "in": "query"
          },
          {
            "description": "The device group ID.",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "device_group_id",
            "in": "query"
          },
          {
            "description": "To specify multiple device IDs, separate them with commas.",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "device_ids",
            "in": "query"
          },
          {
            "description": "The scope of response parameters to return.\n - Value definition  \n  full : returns full parameters  \n  minimal : Returns minimal parameters *effective for timesaving.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "full"
            },
            "name": "scope",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "devices"
                  ],
                  "properties": {
                    "devices": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Devices"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0000011  \n  Timeout occurred when requesting.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}": {
      "get": {
        "tags": [
          "Manage Devices"
        ],
        "summary": "GetDevice",
        "description": "Returns the information of an Edge Device specified by query parameters.",
        "operationId": "get_device",
        "parameters": [
          {
            "description": "The Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0002001  \n  Not found.  \n- E.SC.API.0002002  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0000011  \n  Timeout occurred when requesting.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Certificate"
        ],
        "summary": "DeleteDevice",
        "description": "Delete the Edge Device specified by path parameter.",
        "operationId": "delete_device",
        "parameters": [
          {
            "description": "The Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- W.SC.API.0111001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- W.SC.API.0111002  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/certificate/devices": {
      "get": {
        "tags": [
          "Certificate"
        ],
        "summary": "GetDeviceCertificates",
        "description": "Lists the Edge Device certificate information.",
        "operationId": "get_device_certificates",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "certificates"
                  ],
                  "properties": {
                    "certificates": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DeviceCertificate"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/certificate/devices/{device_id}": {
      "get": {
        "tags": [
          "Certificate"
        ],
        "summary": "GetDeviceCertificate",
        "description": "The information for a specific Edge Device (device ID) within a group.",
        "operationId": "get_device_certificate",
        "parameters": [
          {
            "description": "The Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceCertificate"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0097001  \n  Not found.  \n- E.SC.API.0097002  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Certificate"
        ],
        "summary": "UpdateDeviceCertificate",
        "description": "Updates the device certificate information for a specific Edge Device.",
        "operationId": "update_device_certificate",
        "parameters": [
          {
            "description": "The Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDeviceCertificateJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0091001  \n  Json format is invalid.  \n- E.SC.API.0091002  \n  Parameter device_id is not set.  \n- E.SC.API.0091003  \n  Invalid parameter device_name.   \n- E.SC.API.0091007  \n  Bad request.  \n- E.SC.API.0091008  \n  The specified parameter device_name is registered.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0091004  \n  Not found.  \n- E.SC.API.0091005  \n  Not found.  \n- E.SC.API.0091009  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0091006  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}/inferenceresults/collectstart": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "StartUploadInferenceResult",
        "description": "Instructs the Edge Device to start retrieving the inference result metadata (Output Tensor) and the input image.",
        "operationId": "start_upload_inference_result",
        "parameters": [
          {
            "description": "The Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS or WARNING."
                    },
                    "outputSubDirectory": {
                      "type": "string",
                      "description": "The destination path for saving images. UploadMethod:BlobStorage only."
                    },
                    "outputSubDirectoryIR": {
                      "type": "string",
                      "description": "The destination path for saving inference result. UploadMethodIR:BlobStorage only."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- W.SC.API.0003018  \n  Device responded with an error when requested. Result = {0}  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "SUCCESS",
                  "outputSubDirectory": "string",
                  "outputSubDirectoryIR": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0000012  \n  Device does not support.  \n- E.SC.API.0003001  \n  The specified parameter device_id is not set.  \n- E.SC.API.0003002  \n  Invalid parameter Mode.  \n- E.SC.API.0003003  \n  Invalid parameter FileFormat.  \n- E.SC.API.0003004  \n  Invalid parameter NumberOfInferencesPerMessage.  \n- E.SC.API.0003005  \n  Invalid parameter MaxDetectionsPerFrame.  \n- E.SC.API.0003006  \n  Invalid parameter NumberOfImages.  \n- E.SC.API.0003007  \n  Invalid parameter UploadInterval.  \n- E.SC.API.0003008  \n  Invalid parameter CropHOffset.  \n- E.SC.API.0003009  \n  Invalid parameter CropVOffset.  \n- E.SC.API.0003010  \n  Invalid parameter CropHSize.  \n- E.SC.API.0003011  \n  Invalid parameter CropVSize.  \n- E.SC.API.0003012  \n  Invalid parameter UploadMethod.  \n- E.SC.API.0003013  \n  Invalid parameter StorageSubDirectoryPath.  \n- E.SC.API.0003014  \n  Invalid parameter UploadMethodIR.  \n- E.SC.API.0003015  \n  Invalid parameter StorageSubDirectoryPathIR.  \n- E.SC.API.0003017  \n  Unable to connect to device.  \n- E.SC.API.0003019  \n  Invalid parameter ppl_parameter.  \n- E.SC.API.0003024  \n  Invalid parameter StorageName.  \n- E.SC.API.0003025  \n  Invalid parameter StorageNameIR.  \n- E.SC.API.0003026  \n  BlobStorage is specified in the UploadMethodIR of the command parameter  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0003016  \n  Not found.  \n- E.SC.API.0003020  \n  The specified ModelId has not been deployed to the device.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000009  \n  Timeout occurred when requesting device.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.*yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000009",
                  "message": "Timeout occurred when requesting device.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0003027  \n  The device app has not been deployed.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "W.SC.API.0000010",
                  "message": "Conflict.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0003021  \n  Internal server error.  \n- E.SC.API.0003023  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}/inferenceresults/collectstop": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "StopUploadInferenceResult",
        "description": "Implement instructions to the specified device to stop getting the inference result metadata (Output Tensor) and image (Input image).",
        "operationId": "stop_upload_inference_result",
        "parameters": [
          {
            "description": "The Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- W.SC.API.0004003  \n  Device responded with an error when requested. Result = {0}  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0000012  \n  Device does not support.  \n- E.SC.API.0004002  \n  Unable to connect to device.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0004001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000009  \n  Timeout occurred when requesting device.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.*yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000009",
                  "message": "Timeout occurred when requesting device.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}/reboot": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "Reboot",
        "description": "Reboots the specified device.",
        "operationId": "reboot",
        "parameters": [
          {
            "description": "The Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- W.SC.API.0014003  \n  Device responded with an error when requested. Result = {0}  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0000012  \n  Device does not support.  \n- E.SC.API.0014002  \n  Unable to connect to device.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0014001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000009  \n  Timeout occurred when requesting device.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.*yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000009",
                  "message": "Timeout occurred when requesting device.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}/reset": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "ResetDevice",
        "description": "Performs the following operations to reset the specified Edge Device to its initial state:  \n * Factory reset  \n * Deletes the device information from the target device, except for the inference result metadata and image data.",
        "operationId": "reset_device",
        "parameters": [
          {
            "description": "The Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- W.SC.API.0015004  \n  Device responded with an error when requested. Result = {0}  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0000012  \n  Device does not support.  \n- E.SC.API.0015001  \n  Invalid parameter device_id.  \n- E.SC.API.0015003  \n  Unable to connect to device.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0015002  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000009  \n  Timeout occurred when requesting device.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.*yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000009",
                  "message": "Timeout occurred when requesting device.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}/configuration/logdestination": {
      "put": {
        "tags": [
          "Device Command"
        ],
        "summary": "SetDeviceLog",
        "description": "DO NOT USE THIS API. Change the log settings of a specified device.",
        "operationId": "set_device_log",
        "parameters": [
          {
            "description": "Device ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "description": "Log level.  \n- Value definition *Not case sensitive  \n    Error  \n    Warn  \n    Info  \n    Debug  \n    Verbose",
            "required": false,
            "schema": {
              "type": "string",
              "default": "Error"
            },
            "name": "level",
            "in": "query"
          },
          {
            "description": "By output destination type  \n- Value definition *Not case sensitive  \n    UART  \n    Cloud  \n    Both  ",
            "required": false,
            "schema": {
              "type": "string",
              "default": "UART"
            },
            "name": "destination",
            "in": "query"
          },
          {
            "description": "Sensor register.  \n- Value definition  \n  true  \n  false  ",
            "required": false,
            "schema": {
              "type": "string",
              "default": false
            },
            "name": "SensorRegister",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- W.SC.API.0013006  \n  Device responded with an error when requested. Result = {0}  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0000012  \n  Device does not support.  \n- E.SC.API.0013001  \n  Invalid parameter level.  \n- E.SC.API.0013002  \n  Invalid parameter destination.  \n- E.SC.API.0013003  \n  Invalid parameter SensorRegister.  \n- E.SC.API.0013005  \n  Unable to connect to device.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0013004  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000009  \n  Timeout occurred when requesting device.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.*yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000009",
                  "message": "Timeout occurred when requesting device.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}/configuration/applog": {
      "put": {
        "tags": [
          "Device Command"
        ],
        "summary": "SetDeviceAppLog",
        "description": "Configures logging to be enabled or disabled for the specific Edge Device.",
        "operationId": "set_device_app_log",
        "parameters": [
          {
            "description": "The Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetDeviceAppLogJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- W.SC.API.0212003  \n  Device responded with an error when requested. Result = {0}  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0000012  \n  Device does not support.  \n- E.SC.API.0212002  \n  Unable to connect to device.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0212001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000009  \n  Timeout occurred when requesting device.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.*yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000009",
                  "message": "Timeout occurred when requesting device.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0212004  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}/configuration/image": {
      "put": {
        "tags": [
          "Device Command"
        ],
        "summary": "SetImageConfiguration",
        "description": "The frame rate or drive mode of the image. Either the frame rate or drive mode must be set.",
        "operationId": "set_frame_rate",
        "parameters": [
          {
            "description": "The Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetImageConfigurationJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0000012  \n  Device does not support.  \n- E.SC.API.0197002  \n  Invalid parameter framerate.  \n- E.SC.API.0197003  \n  Invalid parameter drive_mode.  \n- E.SC.API.0197005  \n  Unable to connect to device.  \n- E.SC.API.0197006  \n  Invalid parameter frame_rate or drive_mode.  \n- E.SC.API.0197007  \n  Device status is not Standby.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0197004  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}/images/latest": {
      "get": {
        "tags": [
          "Device Command"
        ],
        "summary": "GetDirectImage",
        "description": "Returns the image stored on the specified Edge Device in real-time.  \nThis API supports pseudo-streaming.",
        "operationId": "get_direct_image",
        "parameters": [
          {
            "description": "The Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS or WARNING."
                    },
                    "contents": {
                      "type": "string",
                      "description": "File contents (JPEG, base64 encoding)."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- W.SC.API.0011007  \n  Device responded with an error when requested. Result = {0}  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "SUCCESS",
                  "contents": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0000012  \n  Device does not support.  \n- E.SC.API.0011001  \n  Invalid parameter CropHOffset.  \n- E.SC.API.0011002  \n  Invalid parameter CropVOffset.  \n- E.SC.API.0011003  \n  Invalid parameter CropHSize.  \n- E.SC.API.0011004  \n  Invalid parameter CropVSize.  \n- E.SC.API.0011006  \n  Unable to connect to device.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0011005  \n  Not found.  \n- E.SC.API.0011008  \n  Bad request.  \n- E.SC.API.0011009  \n  The specified ModelId has not been deployed to the device.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000009  \n  Timeout occurred when requesting device.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.*yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000009",
                  "message": "Timeout occurred when requesting device.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0000011  \n  Timeout occurred when requesting.  \n- E.SC.API.0011010  \n  Internal server error.  \n- E.SC.API.0011012  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}/password": {
      "patch": {
        "tags": [
          "Device Command"
        ],
        "summary": "ChangePassword",
        "description": "Update the following password for the specified device:  \n * Proxy",
        "operationId": "change_password",
        "parameters": [
          {
            "description": "The Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- W.SC.API.0145006  \n  Device responded with an error when requested. Result = {0}  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0000012  \n  Device does not support.  \n- E.SC.API.0145001  \n  Json format is invalid.  \n- E.SC.API.0145002  \n  Parameter password is not set.  \n- E.SC.API.0145003  \n  Invalid parameter password.  \n- E.SC.API.0145005  \n  Unable to connect to device.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0145004  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR"
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details. \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000009  \n  Timeout occurred when requesting device.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.*yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000009",
                  "message": "Timeout occurred when requesting device.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/command_parameter_files": {
      "get": {
        "tags": [
          "Command Parameter File"
        ],
        "summary": "GetCommandParameterFile",
        "description": "Lists the command parameter file information.",
        "operationId": "get_command_parameter_file",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "parameter_list"
                  ],
                  "properties": {
                    "parameter_list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "parameter",
                          "file_name",
                          "isdefault",
                          "ins_id",
                          "ins_date",
                          "upd_id",
                          "upd_date"
                        ],
                        "properties": {
                          "parameter": {
                            "type": "object",
                            "required": [
                              "commands"
                            ],
                            "description": "Setting value. json",
                            "properties": {
                              "commands": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "command_name",
                                    "parameters"
                                  ],
                                  "properties": {
                                    "command_name": {
                                      "type": "string",
                                      "description": "Command name."
                                    },
                                    "parameters": {
                                      "type": "object",
                                      "properties": {
                                        "Mode": {
                                          "type": "integer",
                                          "description": "Specifies whether the image, inference results, or both should be included.\n- Value definition  \n  0 : Input Image only  \n  1 : Input Image & Inference Result  \n  2 : Inference Result only"
                                        },
                                        "UploadMethod": {
                                          "type": "string",
                                          "description": "The method to upload the image.\n- Value definition  \n  BlobStorage"
                                        },
                                        "FileFormat": {
                                          "type": "string",
                                          "description": "Image file format.\n- Value definition  \n  JPG  \n  BMP"
                                        },
                                        "UploadMethodIR": {
                                          "type": "string",
                                          "description": "The method to upload the inference result.\n- Value definition  \n  Mqtt"
                                        },
                                        "CropHOffset": {
                                          "type": "integer",
                                          "description": "Hoffset for image cropping.\n- Value range : 0 to 4055"
                                        },
                                        "CropVOffset": {
                                          "type": "integer",
                                          "description": "Hoffset for image cropping.\n- Value range : 0 to 3039"
                                        },
                                        "CropHSize": {
                                          "type": "integer",
                                          "description": "Hoffset for image cropping.\n- Value range : 0 to 4056"
                                        },
                                        "CropVSize": {
                                          "type": "integer",
                                          "description": "Hoffset for image cropping.\n- Value range : 0 to 3040"
                                        },
                                        "NumberOfImages": {
                                          "type": "integer",
                                          "description": "Number of images to fetch (Input Image).\nIf set to 0, images will continue to be fetched until a stop instruction is explicitly given.\n- Value range : 0 to 10000"
                                        },
                                        "UploadInterval": {
                                          "type": "integer",
                                          "description": "Upload interval.\n・Value range : 1 to 2592000\n*If 60 is specified, 0.5FPS (=30/60)"
                                        },
                                        "NumberOfInferencesPerMessage": {
                                          "type": "integer",
                                          "description": "Number of inference results to include in one message (Inference Result).\n- Value range : 1  to 100"
                                        },
                                        "MaxDetectionsPerFrame": {
                                          "type": "integer",
                                          "description": "Number of objects included in a single frame according to the inference results metadata.\n- Value range : 1 to 5"
                                        },
                                        "ModelId": {
                                          "type": "string",
                                          "description": "AI model ID."
                                        },
                                        "PPLParameter": {
                                          "type": "object",
                                          "description": "PPL parameter"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "file_name": {
                            "type": "string",
                            "description": "File name."
                          },
                          "comment": {
                            "type": "string",
                            "description": "Description of the subject."
                          },
                          "isdefault": {
                            "type": "string",
                            "description": "True: Default parameter\nFalse: Not a default parameter"
                          },
                          "device_ids": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Target device list."
                          },
                          "ins_id": {
                            "type": "string",
                            "description": "The subject that configured the feature."
                          },
                          "ins_date": {
                            "type": "string",
                            "description": "The date the settings were created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                          },
                          "upd_id": {
                            "type": "string",
                            "description": "The subject that updated the settings."
                          },
                          "upd_date": {
                            "type": "string",
                            "description": "The date the settings were updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Command Parameter File"
        ],
        "summary": "RegistCommandParameterFile",
        "description": "Registers different types of command parameter files.\n\nThis API allows you to register the following parameters in advance:  \n- StartUploadInferenceData API  \n\nThe following APIs are used for file management and application of the device:  \n\n< Parameter file management >  \n- RegistCommandParameterFile API  \n- GetCommandParameterFile API  \n- UpdateCommandParameterFile API  \n- DeleteCommandParameterFile API  \n\n< Binding/Unbinding with the device >  \n- BindCommandParameterFileToDevice API  \n- UnbindCommandParameterFile API  \n\nIf the parameter file is not applied to the device, the default value will be used.\nAPIs with such required parameters will result in an error when the API is executed.\nThe default file can be specified using the following API:  \n- SetDefaultCommandParameterFile API",
        "operationId": "regist_command_parameter_file",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistCommandParameterFileBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0150001  \n  Invalid parameter Mode for StartUploadInferenceData.  \n- E.SC.API.0150002  \n  Invalid parameter FileFormat for StartUploadInferenceData.  \n- E.SC.API.0150003  \n  Invalid parameter NumberOfInferencesPerMessage for StartUploadInferenceData.  \n- E.SC.API.0150004  \n  Invalid parameter MaxDetectionsPerFrame for StartUploadInferenceData.  \n- E.SC.API.0150005  \n  Invalid parameter NumberOfImages for StartUploadInferenceData.  \n- E.SC.API.0150006  \n  Invalid parameter UploadInterval for StartUploadInferenceData.  \n- E.SC.API.0150007  \n  Invalid parameter CropHOffset for StartUploadInferenceData.  \n- E.SC.API.0150008  \n  Invalid parameter CropVOffset for StartUploadInferenceData.  \n- E.SC.API.0150009  \n  Invalid parameter CropHSize for StartUploadInferenceData.  \n- E.SC.API.0150010  \n  Invalid parameter CropVSize for StartUploadInferenceData.  \n- E.SC.API.0150011  \n  Parameter file_name is not set.  \n- E.SC.API.0150012  \n  Invalid Parameter file_name.  \n- E.SC.API.0150013  \n  Parameter contents is not set.  \n- E.SC.API.0150014  \n  The json format of the parameter file is invalid.  \n- E.SC.API.0150015  \n  Json format is invalid.  \n- E.SC.API.0150016  \n  Invalid Parameter UploadMethod for StartUploadInferenceData.  \n- E.SC.API.0150017  \n  Invalid Parameter UploadMethodIR for StartUploadInferenceData.  \n- E.SC.API.0150018  \n  The specified parameter file_name is registered.  \n- E.SC.API.0150019  \n  Invalid Parameter comment.  \n- E.SC.API.0150020  \n  Invalid Parameter StorageSubDirectoryPath for StartUploadRawImageFull.  \n- E.SC.API.0150021  \n  The json format of the parameter file is invalid.  \n- E.SC.API.0150022  \n  Invalid Parameter CropOptValue for SetCameraCropOptValue.  \n- E.SC.API.0150023  \n  Invalid Parameter Minutes for Sleep.  \n- E.SC.API.0150024  \n  Invalid parameter CropHOffset for DirectGetImage.  \n- E.SC.API.0150025  \n  Invalid parameter CropVOffset for DirectGetImage.  \n- E.SC.API.0150026  \n  Invalid parameter CropHSize for DirectGetImage.  \n- E.SC.API.0150027  \n  Invalid parameter CropVSize for DirectGetImage.  \n- E.SC.API.0150032  \n  Invalid parameter CropHOffset for UploadRawImagePart.  \n- E.SC.API.0150033  \n  Invalid parameter CropVOffset for UploadRawImagePart.  \n- E.SC.API.0150036  \n  Invalid parameter StorageSubDirectoryPath for UploadRawImagePart.  \n- E.SC.API.0150041  \n  Parameter contents is invalid.  \n- E.SC.API.0150042  \n  Bad request.  \n- E.SC.API.0150043  \n  Invalid Parameter StorageSubDirectoryPath for StartUploadInferenceData.  \n- E.SC.API.0150044  \n  Invalid Parameter StorageSubDirectoryPathIR for StartUploadInferenceData.  \n- E.SC.API.0150045  \n  Invalid Parameter PPLParameter for StartUploadInferenceData.  \n- E.SC.API.0150046  \n  Invalid Parameter ModelId for StartUploadInferenceData.  \n- E.SC.API.0150047  \n  Invalid Parameter ModelId for DirectGetImage.  \n- E.SC.API.0150048  \n  Invalid Parameter StorageName for StartUploadInferenceData.  \n- E.SC.API.0150049  \n  Invalid Parameter StorageNameIR for StartUploadInferenceData.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/command_parameter_files/{file_name}": {
      "patch": {
        "tags": [
          "Command Parameter File"
        ],
        "summary": "UpdateCommandParameterFile",
        "description": "Updates the command parameter file.",
        "operationId": "update_command_parameter_file",
        "parameters": [
          {
            "description": "File name.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "file_name",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommandParameterFileBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- W.SC.API.0154028  \n  Registration succeeded  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0154001  \n  Parameter file_name is not set.  \n- E.SC.API.0154002  \n  Invalid parameter Mode for StartUploadInferenceData.  \n- E.SC.API.0154003  \n  Invalid parameter FileFormat for StartUploadInferenceData.  \n- E.SC.API.0154004  \n  Invalid parameter NumberOfInferencesPerMessage for StartUploadInferenceData.  \n- E.SC.API.0154005  \n  Invalid parameter MaxDetectionsPerFrame for StartUploadInferenceData.  \n- E.SC.API.0154006  \n  Invalid parameter NumberOfImages for StartUploadInferenceData.  \n- E.SC.API.0154007  \n  Invalid parameter UploadInterval for StartUploadInferenceData.  \n- E.SC.API.0154008  \n  Invalid parameter CropHOffset for StartUploadInferenceData.  \n- E.SC.API.0154009  \n  Invalid parameter CropVOffset for StartUploadInferenceData.  \n- E.SC.API.0154010  \n  Invalid parameter CropHSize for StartUploadInferenceData.  \n- E.SC.API.0154011  \n  Invalid parameter CropVSize for StartUploadInferenceData.  \n- E.SC.API.0154013  \n  Json format is invalid.  \n- E.SC.API.0154015  \n  Invalid Parameter file_name.  \n- E.SC.API.0154016  \n  The json format of the parameter file is invalid.  \n- E.SC.API.0154017  \n  Invalid Parameter UploadMethod for StartUploadInferenceData.  \n- E.SC.API.0154018  \n  Invalid Parameter UploadMethodIR for StartUploadInferenceData.  \n- E.SC.API.0154019  \n  Invalid Parameter comment.  \n- E.SC.API.0154020  \n  Invalid Parameter StorageSubDirectoryPath for StartUploadRawImageFull.  \n- E.SC.API.0154021  \n  The json format of the parameter file is invalid.  \n- E.SC.API.0154022  \n  Invalid Parameter CropOptValue for SetCameraCropOptValue.  \n- E.SC.API.0154023  \n  Invalid Parameter Minutes for Sleep.  \n- E.SC.API.0154024  \n  Invalid parameter CropHOffset for DirectGetImage.  \n- E.SC.API.0154025  \n  Invalid parameter CropVOffset for DirectGetImage.  \n- E.SC.API.0154026  \n  Invalid parameter CropHSize for DirectGetImage.  \n- E.SC.API.0154027  \n  Invalid parameter CropVSize for DirectGetImage.  \n- E.SC.API.0154032  \n  Invalid parameter CropHOffset for UploadRawImagePart.  \n- E.SC.API.0154033  \n  Invalid parameter CropVOffset for UploadRawImagePart.  \n- E.SC.API.0154036  \n  Invalid parameter StorageSubDirectoryPath for UploadRawImagePart.  \n- E.SC.API.0154041  \n  Invalid parameter contents.  \n- E.SC.API.0154042  \n  Invalid Parameter StorageSubDirectoryPath for StartUploadInferenceData.  \n- E.SC.API.0154043  \n  Invalid Parameter StorageSubDirectoryPathIR for StartUploadInferenceData.  \n- E.SC.API.0154044  \n  Invalid Parameter PPLParameter for StartUploadInferenceData.  \n- E.SC.API.0154045  \n  Invalid Parameter ModelId for StartUploadInferenceData.  \n- E.SC.API.0154046  \n  Invalid Parameter ModelId for DirectGetImage.  \n- E.SC.API.0154047  \n  Invalid Parameter StorageName for StartUploadInferenceData.  \n- E.SC.API.0154048  \n  Invalid Parameter StorageNameIR for StartUploadInferenceData.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0154012  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Command Parameter File"
        ],
        "summary": "DeleteCommandParameterFile",
        "description": "Deletes the command parameter file.",
        "operationId": "delete_command_parameter_file",
        "parameters": [
          {
            "description": "File name.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "file_name",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0155003  \n  Bad request.  \n- E.SC.API.0155004  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0155002  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/command_parameter_files/{file_name}/export": {
      "get": {
        "tags": [
          "Command Parameter File"
        ],
        "summary": "ExportCommandParameterFile",
        "description": "Exports the information for the specified command parameter file.",
        "operationId": "export_command_parameter_file",
        "parameters": [
          {
            "description": "File name.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "file_name",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "contents",
                    "file_name"
                  ],
                  "properties": {
                    "contents": {
                      "type": "string",
                      "description": "Command parameter content in Base64 encoding. Refer to the Console User Manual for detailed format instructions."
                    },
                    "file_name": {
                      "type": "string",
                      "description": "The file name to export."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0167001  \n  Invalid parameter file_name.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/command_parameter_files/{file_name}/default": {
      "patch": {
        "tags": [
          "Command Parameter File"
        ],
        "summary": "SetDefaultCommandParameterFile",
        "description": "Registers the default command parameter file.",
        "operationId": "set_default_command_parameter_file",
        "parameters": [
          {
            "description": "File name.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "file_name",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0161001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/devices/configuration/command_parameter_files/{file_name}": {
      "put": {
        "tags": [
          "Command Parameter File"
        ],
        "summary": "BindCommandParameterFileToDevice",
        "description": "Binds the command parameter file to the specified Edge Devices.",
        "operationId": "bind_command_parameter_file_to_device",
        "parameters": [
          {
            "description": "File name.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "file_name",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BindCommandParameterFileToDeviceJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0151001  \n  Parameter device_ids is not set.  \n- E.SC.API.0151005  \n  Bad request.  \n- E.SC.API.0151006  \n  Json format is invalid.  \n- E.SC.API.0151007  \n  Invalid parameter device_id.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0151003  \n  Not found.  \n- E.SC.API.0151004  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Command Parameter File"
        ],
        "summary": "UnbindCommandParameterFile",
        "description": "Unbinds the command parameter file from the specified Edge Devices.",
        "operationId": "unbind_command_parameter_file",
        "parameters": [
          {
            "description": "File name.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "file_name",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnbindCommandParameterFileJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0152001  \n  Parameter device_ids is not set.  \n- E.SC.API.0152004  \n  Json format is invalid.  \n- E.SC.API.0152005  \n  Invalid parameter device_id.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0152002  \n  Not found.  \n- E.SC.API.0152003  \n  Not found.  \n- E.SC.API.0152006  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}/configuration/permission": {
      "put": {
        "tags": [
          "Manage Devices"
        ],
        "summary": "SetPermission",
        "description": "Specifies whether to allow or deny the execution of a factory reset on the specified Edge Device.",
        "operationId": "set_permission",
        "parameters": [
          {
            "description": "The Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "description": "Allow or deny the execution of a factory reset on the specified Edge Device.  \n- Value definition  \n  true: Allow\n  false: Deny",
            "required": true,
            "schema": {
              "type": "string",
              "description": "factory reset"
            },
            "name": "factory_reset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0000012  \n  Device does not support.  \n- E.SC.API.0148001  \n  Parameter factory_reset is not set.  \n- E.SC.API.0148002  \n  Invalid parameter factory_reset.  \n- E.SC.API.0148004  \n  Unable to connect to device.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0148003  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/device_custom_setup_files": {
      "get": {
        "tags": [
          "Custom Setup File"
        ],
        "summary": "GetDeviceCustomSetupFiles",
        "description": "Lists the information of the device custom setup file.",
        "operationId": "get_device_custom_setup_files",
        "parameters": [
          {
            "description": "The type of device custom setup file.\n- Value definition  \n  'Gamma'  \n",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "device_setup_files"
                  ],
                  "properties": {
                    "device_setup_files": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomSetupFiles"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0080001  \n  Invalid parameter type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Custom Setup File"
        ],
        "summary": "CreateDeviceCustomSetupFile",
        "description": "Create device custom setup file.",
        "operationId": "create_device_custom_setup_file",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeviceCustomSetupFileJsonBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0082002  \n  Parameter type is not set.  \n- E.SC.API.0082003  \n  Invalid parameter type.  \n- E.SC.API.0082004  \n  Invalid parameter file_name.  \n- E.SC.API.0082005  \n  Invalid parameter comment.  \n- E.SC.API.0082006  \n  The specified parameter file_name is registered.  \n- E.SC.API.0082007  \n  Invalid parameter file_id.  \n- E.SC.API.0082008  \n  Invalid parameter file_name.  \n- E.SC.API.0082009  \n  Parameter file_name is not set.  \n- E.SC.API.0082010  \n  Parameter file_id is not set.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/device_custom_setup_files/{file_name}": {
      "get": {
        "tags": [
          "Custom Setup File"
        ],
        "summary": "GetDeviceCustomSetupFile",
        "description": "Lists the information of the device custom setup file.",
        "operationId": "get_device_custom_setup_file",
        "parameters": [
          {
            "description": "File name.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "file_name",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomSetupFile"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0081001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Custom Setup File"
        ],
        "summary": "DeleteDeviceCustomSetupFile",
        "description": "Deletes the device custom setup file.",
        "operationId": "delete_device_custom_setup_file",
        "parameters": [
          {
            "description": "File name.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "file_name",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- W.SC.API.0083001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/deployconfigurations": {
      "get": {
        "tags": [
          "Deploy"
        ],
        "summary": "GetDeployConfigurations",
        "description": "Extracts and lists the settings of the Deploy Configuration.",
        "operationId": "get_deploy_configurations",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "deploy_configurations"
                  ],
                  "properties": {
                    "deploy_configurations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DeployConfiguration"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Deploy"
        ],
        "summary": "CreateDeployConfiguration",
        "description": "Creates the Deploy Configuration. The registration will include the following features:\n- Edge System Software  \n- AI model\n- Edge App",
        "operationId": "create_deploy_configuration",
        "parameters": [
          {
            "description": "The maximum number of characters that can be specified is 20 single-byte ones.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "config_id",
            "in": "query"
          },
          {
            "description": "The maximum number of characters that can be specified is 100.",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "comment",
            "in": "query"
          },
          {
            "description": "Sensor loader version number.",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "sensor_loader_version_number",
            "in": "query"
          },
          {
            "description": "Sensor version number.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Sensor version number",
              "default": ""
            },
            "name": "sensor_version_number",
            "in": "query"
          },
          {
            "description": "AI model ID.",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "model_id",
            "in": "query"
          },
          {
            "description": "Model version number.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "Latest"
            },
            "name": "model_version_number",
            "in": "query"
          },
          {
            "description": "MCU (AppFw) version number.",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "ap_fw_version_number",
            "in": "query"
          },
          {
            "description": "Gamma File name.",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "gamma_file_name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0022001  \n  Parameter config_id is not set.  \n- E.SC.API.0022002  \n  Invalid parameter config_id.  \n- E.SC.API.0022003  \n  Parameter sensor_loader_version_number is not set.  \n- E.SC.API.0022004  \n  Parameter sensor_version_number is not set.  \n- E.SC.API.0022005  \n  Parameter model_id is not set.  \n- E.SC.API.0022006  \n  Parameter ap_fw_version_number is not set.  \n- E.SC.API.0022007  \n  Parameter {0} is not set.  \n- E.SC.API.0022008  \n  Invalid parameter {0}.  \n- E.SC.API.0022009  \n  Parameter {0} is not set.  \n- E.SC.API.0022010  \n  The specified parameter config_id is registered.  \n- E.SC.API.0022014  \n  Invalid parameter comment.  \n- E.SC.API.0022015  \n  Invalid parameter device_type.  \n- E.SC.API.0022016  \n  Config target is not set.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0022011  \n  Not found.  \n- E.SC.API.0022012  \n  Not found.  \n- E.SC.API.0022013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/deployconfigurations/{config_id}": {
      "get": {
        "tags": [
          "Deploy"
        ],
        "summary": "GetDeployConfiguration",
        "description": "Lists the information of the specified deployment configuration.",
        "operationId": "get_deploy_configuration",
        "parameters": [
          {
            "description": "Deployment configuration ID.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Deployment configuration ID."
            },
            "name": "config_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeployConfiguration"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0021001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Deploy"
        ],
        "summary": "DeployByConfiguration",
        "description": "   Deploys the following features specified by the Deploy Configuration to Edge Devices:  \n   - Edge System Software   \n   - AI model  \n   - Custom setup file  ",
        "operationId": "deploy_by_configuration",
        "parameters": [
          {
            "description": "Setting ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "config_id",
            "in": "path"
          },
          {
            "description": "To specify multiple device IDs, separate them with commas.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_ids",
            "in": "query"
          },
          {
            "description": "Specify the model ID or network_id.   \n*If the specified model ID does not exist in the database, treat the entered value as the network_id and process it accordingly.",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "replace_model_id",
            "in": "query"
          },
          {
            "description": "The maximum number of characters that can be specified is 100.",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "comment",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploySuccessResponse"
                },
                "examples": {
                  "1": {
                    "summary": "Success Example",
                    "value": {
                      "result": "SUCCESS",
                      "deploy_id": 12345
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0027001  \n  Parameter device_ids is not set.  \n- E.SC.API.0027002  \n  Invalid parameter comment.  \n- E.SC.API.0027005  \n  Bad request.  \n- E.SC.API.0027006  \n  Unable to connect to device. device_ids = {0}  \n- E.SC.API.0027010  \n  Invalid parameter device_id.  \n- E.SC.API.0027011  \n  Bad request.  \n- E.SC.API.0027013  \n  Bad request.  \n- E.SC.API.0027017  \n  Model includes DCPU, but device does not support DCPU. device_ids = {0}"
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  \n- E.SC.API.0027015  \n  Unauthorized operation.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0027003  \n  Not found.  \n- E.SC.API.0027004  \n  Not found.  \n- E.SC.API.0027007  \n  Not found.  \n- E.SC.API.0027012  \n  Not found.  \n- E.SC.API.0027014  \n  Model does not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0027009  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Deploy"
        ],
        "summary": "DeleteDeployConfiguration",
        "description": "Deletes the specified Deploy Configuration.",
        "operationId": "delete_deploy_configuration",
        "parameters": [
          {
            "description": "Configuration ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "config_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0055002  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}/deploys/{deploy_id}": {
      "put": {
        "tags": [
          "Deploy"
        ],
        "summary": "CancelDeployment",
        "description": "Cancels the deployment of core features such as Edge System softwares, AI models, and Edge Applications that run on the Edge Device. This operation cancels the deployment for Edge Devices that have not yet received it. If the device already received the deployment, this operation does not change anything.",
        "operationId": "cancel_deployment",
        "parameters": [
          {
            "description": "The Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "description": "Deploy ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "name": "deploy_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0166003  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0166001  \n  Not found.  \n- E.SC.API.0166002  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0166004  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}/deploys": {
      "get": {
        "tags": [
          "Deploy"
        ],
        "summary": "GetDeployHistory",
        "description": "Returns the deployment history of core features such as Edge System softwares, AI models, and Edge Applications that run on the Edge Device.",
        "operationId": "get_deploy_history",
        "parameters": [
          {
            "description": "The Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "deploys"
                  ],
                  "properties": {
                    "deploys": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DeployHistory"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/deploy_history": {
      "get": {
        "tags": [
          "Deploy"
        ],
        "summary": "GetDeployStatusHistory",
        "description": "Lists the deployment history statuses in the deployment layer.",
        "operationId": "get_deploy_status_history",
        "parameters": [
          {
            "description": "Deployment ID.",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Deployment ID."
            },
            "name": "deploy_id",
            "in": "query"
          },
          {
            "description": "Deployment ID of the application.",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Deployment ID of the application."
            },
            "name": "app_deploy_id",
            "in": "query"
          },
          {
            "description": "Deployment start date and time, format 'yyyyMMddhhmm', must not be later than the current time.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Deployment start date and time"
            },
            "name": "from_datetime",
            "in": "query"
          },
          {
            "description": "Deployment end date and time, format 'yyyyMMddhhmm', must not be later than the current time or earlier than from_datetime.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Deployment end date and time"
            },
            "name": "to_datetime",
            "in": "query"
          },
          {
            "description": "Number of records to retrieve. If 100 is specified, 100 records will be returned.",
            "required": true,
            "schema": {
              "type": "number",
              "default": 20
            },
            "name": "top",
            "in": "query"
          },
          {
            "description": "Number of records to skip. If 100 is specified, the response will start from the 101st record.",
            "required": true,
            "schema": {
              "type": "number",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "deploy_status_history"
                  ],
                  "properties": {
                    "deploy_status_history": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StatusHistory"
                      }
                    }
                  },
                  "x-apifox-orders": [
                    "deploy_status_history"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success Example",
                    "value": [
                      {
                        "deploy_id": 10,
                        "from_datetime": "2023-09-06T13:50:07.930666+00:00",
                        "deploy_type": "1",
                        "running_cnt": 3,
                        "success_cnt": 5,
                        "fail_cnt": 3,
                        "config_id": "config_230812",
                        "dnn_model": "zonedection_20230824_v1.0",
                        "dnn_model_version": "1.00",
                        "device_firmware": "D70004",
                        "device_sensor": "910701",
                        "device_sensor_loader": "920301",
                        "gamma_mode": "custom",
                        "gamma_file_name": "gamma_file_v1.00"
                      },
                      {
                        "deploy_id": 11,
                        "from_datetime": "2023-09-06T13:50:07.930666+00:00",
                        "deploy_type": "App",
                        "running_cnt": 3,
                        "success_cnt": 5,
                        "fail_cnt": 3,
                        "app_name": "OD_FF19.12",
                        "app_version": "1",
                        "app_description": "FF19.12"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0273001  \n  Invalid parameter top.  \n- E.SC.API.0273002  \n  Invalid parameter skip.  \n- E.SC.API.0273003  \n  Invalid parameter from_datetime.  \n- E.SC.API.0273004  \n  Invalid parameter to_datetime.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/deploy_history/{deploy_type}/{deploy_id}": {
      "get": {
        "tags": [
          "Deploy"
        ],
        "summary": "GetDeployStatus",
        "description": "Returns the status of specified deployment ID.",
        "operationId": "get_deploy_status",
        "parameters": [
          {
            "description": "Deployment ID.",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "name": "deploy_id",
            "in": "path"
          },
          {
            "description": "Deploy type\n- Value definition  \n    config  \n    app  ",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "deploy_type",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeployDeviceInfo"
                },
                "examples": {
                  "1": {
                    "summary": "Success Example",
                    "value": {
                      "deploy_id": 10,
                      "from_datetime": "2023-09-06T13:50:07.930666+00:00",
                      "deploy_type": "1",
                      "running_cnt": 3,
                      "success_cnt": 5,
                      "fail_cnt": 3,
                      "config_id": "config_230812",
                      "dnn_model": "zonedection_20230824_v1.0",
                      "dnn_model_version": "1.00",
                      "device_firmware": "D70004",
                      "device_sensor": "910701",
                      "device_sensor_loader": "920301",
                      "gamma_mode": "custom",
                      "gamma_file_name": "gamma_file_v1.00",
                      "devices": [
                        {
                          "device_id": "sid_2023082401",
                          "device_name": "sid_2023082401",
                          "deploy_status": "1",
                          "update_progress": "100%"
                        },
                        {
                          "device_id": "sid_2023082402",
                          "device_name": "sid_2023082402",
                          "deploy_status": "2",
                          "update_progress": "100%"
                        },
                        {
                          "device_id": "sid_2023082403",
                          "device_name": "sid_2023082403",
                          "deploy_status": "0",
                          "update_progress": "30%"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0274001  \n  Invalid parameter deploy_type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0274002  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/models/{model_id}/devices/{device_id}/deploys": {
      "put": {
        "tags": [
          "Deploy"
        ],
        "summary": "DeployDeviceModel",
        "description": "Deploys the device model to the specified Edge Device.",
        "operationId": "deploy_device_model",
        "parameters": [
          {
            "description": "AI model ID.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "AI model ID."
            },
            "name": "model_id",
            "in": "path"
          },
          {
            "description": "The Device ID.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Device ID."
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "description": "Version number.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Version number.",
              "default": ""
            },
            "name": "version_number",
            "in": "query"
          },
          {
            "description": "Replace model ID.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Replace model ID.",
              "default": ""
            },
            "name": "replace_model_id",
            "in": "query"
          },
          {
            "description": "Description of the subject. *The maximum number of characters that can be specified is 100.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Description",
              "default": ""
            },
            "name": "comment",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0059003  \n  Bad request.  \n- E.SC.API.0059006  \n  Bad request.  \n- E.SC.API.0059008  \n  Bad request.  \n- E.SC.API.0059009  \n  Invalid parameter comment.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  \n- E.SC.API.0059010  \n  Unauthorized operation.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0059001  \n  Not found.  \n- E.SC.API.0059002  \n  Not found.  \n- E.SC.API.0059005  \n  Not found.  \n- E.SC.API.0059007  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0059004  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}/models/{model_id}": {
      "delete": {
        "tags": [
          "Deploy"
        ],
        "summary": "UndeployModel",
        "description": "Undeploy a DNN Model for the specified device.",
        "operationId": "undeploy_model",
        "parameters": [
          {
            "description": "The Device ID.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Device ID."
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "description": "AI model ID.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "AI model ID."
            },
            "name": "model_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0211004  \n  Unable to connect to device.  \n- E.SC.API.0211005  \n  Bad request.  \n- E.SC.API.0211007  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0211001  \n  Not found.  \n- E.SC.API.0211002  \n  Not found.  \n- E.SC.API.0211003  \n  Not found.  \n- E.SC.API.0211006  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0211008  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/devicegroups": {
      "get": {
        "tags": [
          "Manage Devices"
        ],
        "summary": "GetDeviceGroups",
        "description": "Lists the information of registered Edge Devices included in the specified group. By specifying the device ID in the query parameter, you can also verify to which group the device belongs.",
        "operationId": "get_device_groups",
        "parameters": [
          {
            "required": false,
            "description": "Device groups' ID. *Fuzzy searching is available.",
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "device_group_id",
            "in": "query"
          },
          {
            "required": false,
            "description": "Description of the subject. *Fuzzy searching is available.",
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "comment",
            "in": "query"
          },
          {
            "required": false,
            "description": "Device IDs within the corresponding group.\nLists the device groups that includes the specified device ID.",
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "device_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "device_groups"
                  ],
                  "properties": {
                    "device_groups": {
                      "type": "array",
                      "description": "Provides a list of subordinate elements in ascending order of the device group IDs.",
                      "items": {
                        "$ref": "#/components/schemas/DeviceGroup"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Manage Devices"
        ],
        "summary": "CreateDeviceGroup",
        "description": "Creates a new device group.",
        "operationId": "create_device_group",
        "parameters": [
          {
            "description": "Name of the device group.  \nGroup names should be in single-byte characters and the maximum number of characters that can be specified is 100. Half-width commas are not allowed.   ",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_group_id",
            "in": "query"
          },
          {
            "description": "Description of the subject. The maximum number of characters that can be specified is 100.",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "comment",
            "in": "query"
          },
          {
            "description": "Included device ID.   \nIf there are multiple targets:   \n * use comma separation  \n * avoid using same values",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "device_id",
            "in": "query"
          },
          {
            "description": "To remove the device belonging to multiple groups, configure the following:  \n- Value definition\n  0: Do not delete  \n  1: Delete",
            "required": false,
            "schema": {
              "type": "string",
              "default": "0"
            },
            "name": "del_from_dgroup",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0033001  \n  Parameter device_group_id is not set.  \n- E.SC.API.0033002  \n  Invalid parameter device_group_id.  \n- E.SC.API.0033003  \n  Invalid parameter device_type.  \n- E.SC.API.0033004  \n  Invalid parameter device_id.  \n- E.SC.API.0033005  \n  Parameter device_group_id is registered.  \n- E.SC.API.0033007  \n  Invalid parameter comment.  \n- E.SC.API.0033009  \n  Invalid parameter del_from_dgroup.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0033006  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/devicegroups/{device_group_id}": {
      "get": {
        "tags": [
          "Manage Devices"
        ],
        "summary": "GetDeviceGroup",
        "description": "Lists the information for specific device groups (device group ID).",
        "operationId": "get_device_group",
        "parameters": [
          {
            "description": "The device group ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_group_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceGroup"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0032001  \n  Not found.  \n- E.SC.API.0032002  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Manage Devices"
        ],
        "summary": "DeleteDeviceGroup",
        "description": "Deletes the device registration specified by the device_id.",
        "operationId": "delete_device_group",
        "parameters": [
          {
            "description": "ID of device group that you want to delete.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_group_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0035001  \n  Bad request.  \n- E.SC.API.0035002  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- W.SC.API.0035003  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0035004  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Manage Devices"
        ],
        "summary": "UpdateDeviceGroup",
        "description": "Performs device registration, deletion, and update within the specified device group.",
        "operationId": "update_device_group",
        "parameters": [
          {
            "description": "Device group ID to update.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_group_id",
            "in": "path"
          },
          {
            "description": "Description of the subject. The maximum number of characters that can be specified is 100.\nTo delete the description, specify \"@@nullupdate\". \n\n*An error will occur if description and device_id are not set.",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "comment",
            "in": "query"
          },
          {
            "description": "The affiliated device ID you want to replace. \nTo disaffiliate the device ID, specify \"@@nullupdate\".  \nIf there are multiple targets:  \n* use comma separation  \n* avoid using same values  \n\n*An error will occur if description and device_id are not set.",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "device_id",
            "in": "query"
          },
          {
            "description": "Specify whether or not to disaffiliate the device from the default group.\n- Value definition  \n  0: Do not delete  \n  1: Delete",
            "required": false,
            "schema": {
              "type": "string",
              "default": "0"
            },
            "name": "del_from_dgroup",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0034002  \n  Bad request.  \n- E.SC.API.0034003  \n  Parameter is not set.  \n- E.SC.API.0034007  \n  Invalid parameter comment.  \n- E.SC.API.0034008  \n  Bad request.  \n- E.SC.API.0034009  \n  Invalid parameter del_from_dgroup.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0034004  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0034005  \n  Internal server error.  \n- W.SC.API.0034006  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/models/training_kits": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetTrainingKits",
        "description": "Lists the specific training kit information.",
        "operationId": "get_training_kits",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "asc"
            },
            "name": "order_by",
            "description": "Sort order: Sorted by the training kit creation date. \nValue range: desc, asc",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "training_kits"
                  ],
                  "properties": {
                    "training_kits": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TrainingKit"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0159001  \n  Invalid parameter status.  \n- E.SC.API.0159002  \n  Invalid parameter training_kit_type.  \n- E.SC.API.0159003  \n  Invalid parameter order_by.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0159005  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetProjects",
        "description": "Searches and returns projects that match the conditions specified in the parameter. If no parameters are specified, all created projects are returned.",
        "operationId": "get_projects",
        "parameters": [
          {
            "description": "Name of the project. *Fuzzy searching is available.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "project_name",
            "in": "query"
          },
          {
            "description": "Specifies the AI model platform. \n- Value definition  \n  0 : Custom Vision  \n  1 : Non-Custom Vision",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "model_platform",
            "in": "query"
          },
          {
            "description": "Project Type.  \n- Value definition  \n  0 : Base model  \n  1 : Device model  ",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "project_type",
            "in": "query"
          },
          {
            "description": "The Device ID.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "query"
          },
          {
            "description": "To return the project property, set \"true\".   ",
            "required": false,
            "schema": {
              "type": "string",
              "default": "0"
            },
            "name": "include_training_flg",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "model_projects"
                  ],
                  "properties": {
                    "model_projects": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ModelProject"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0071001  \n  Invalid parameter model_platform.  \n- E.SC.API.0071002  \n  Invalid parameter project_type.  \n- E.SC.API.0071003  \n  Invalid parameter include_training_flg.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/base": {
      "post": {
        "tags": [
          "Train Model"
        ],
        "summary": "CreateBaseProject",
        "description": "Create the project for the base model.",
        "operationId": "create_base_project",
        "parameters": [
          {
            "description": "Name of the project. Max. 50 characters.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_name",
            "in": "query"
          },
          {
            "description": "Training Kit ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "training_kit",
            "in": "query"
          },
          {
            "description": "Description of the subject. The maximum number of characters that can be specified is 100.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "comment",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0044001  \n  Parameter project_name is not set.  \n- E.SC.API.0044002  \n  Invalid parameter project_name.  \n- E.SC.API.0044003  \n  Invalid parameter comment.  \n- E.SC.API.0044004  \n  The specified parameter project_name is registered.  \n- E.SC.API.0044005  \n  Invalid parameter training_kit.  \n- E.SC.API.0044006  \n  Parameter training_kit is not set.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/device": {
      "post": {
        "tags": [
          "Train Model"
        ],
        "summary": "CreateDeviceProject",
        "description": "Create a project for the device model based on the base model of the specified model.",
        "operationId": "create_device_project",
        "parameters": [
          {
            "description": "Name of the project. Max. 50 characters.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_name",
            "in": "query"
          },
          {
            "description": "AI model ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "model_id",
            "in": "query"
          },
          {
            "description": "The Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "query"
          },
          {
            "description": "Version number. Default is latest version.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "version_number",
            "in": "query"
          },
          {
            "description": "Description of the subject. The maximum number of characters that can be specified is 100.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "comment",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0046001  \n  Parameter model_id is not set.  \n- E.SC.API.0046002  \n  Parameter device_id is not set.  \n- E.SC.API.0046003  \n  Invalid parameter device_id.  \n- E.SC.API.0046004  \n  Parameter project_name is not set.  \n- E.SC.API.0046005  \n  Invalid parameter project_name.  \n- E.SC.API.0046006  \n  Invalid parameter comment.  \n- E.SC.API.0046007  \n  The specified parameter project_name is registered.  \n- E.SC.API.0046010  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0046008  \n  Not found.  \n- E.SC.API.0046009  \n  Not found.  \n- E.SC.API.0046012  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0046011  \n  Internal server error.  \n- E.SC.API.0046014  \n  Internal server error.  \n- E.SC.API.0046015  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_name}": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetProject",
        "description": "Lists the specific project's information.",
        "operationId": "get_project",
        "parameters": [
          {
            "description": "Name of the project.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_name",
            "in": "path"
          },
          {
            "description": "To return the project property, set \"true\".   ",
            "required": false,
            "schema": {
              "type": "string",
              "default": "0"
            },
            "name": "include_training_flg",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelProjectInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0054001  \n  Not found.  \n- E.SC.API.0054002  \n  Invalid parameter include_training_flg.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Train Model"
        ],
        "summary": "DeleteProject",
        "description": "Delete the specified project.  \n*If the project has already saved the model, delete it with DeleteModel API.",
        "operationId": "delete_project",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_name",
            "description": "Name of the project.",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0079004  \n  Bad request.  \n- W.SC.API.0079005  \n  Since preparations for deletion have not been completed  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0079003  \n  Not found.  \n- W.SC.API.0079001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_name}/save": {
      "post": {
        "tags": [
          "Train Model"
        ],
        "summary": "SaveModel",
        "description": "Export and save the pre-conversion model from the base or device project.",
        "operationId": "save_model",
        "parameters": [
          {
            "description": "Name of the project.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_name",
            "in": "path"
          },
          {
            "description": "AI model ID. The maximum number of characters that can be specified is 20 single-byte ones.  \n*Specify only when registering a new base model.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "model_id",
            "in": "query"
          },
          {
            "description": "Initial Version Number.  \n*Specify only when registering a new base model.\n- Value range : 1  to 99  ",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "1"
            },
            "name": "initial_version_number",
            "in": "query"
          },
          {
            "description": "Functionality. The maximum number of characters that can be specified is 100.  \n*Specify only when registering a new base model.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "functionality",
            "in": "query"
          },
          {
            "description": "Vendor Name. The maximum number of characters that can be specified is 100.  \n*Specify only when registering a new base model.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "vendor_name",
            "in": "query"
          },
          {
            "description": "Description. The maximum number of characters that can be specified is 100.  \n*When saving new, it is set as a description of the model and version.  \n*When saving version-up, it is set as a description of the version.  ",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "comment",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0045001  \n  Parameter model_id is not set.  \n- E.SC.API.0045002  \n  Invalid parameter model_id.  \n- E.SC.API.0045003  \n  Invalid parameter initial_version_number.  \n- E.SC.API.0045004  \n  Invalid parameter functionality.  \n- E.SC.API.0045005  \n  Invalid parameter vendor_name.  \n- E.SC.API.0045006  \n  Invalid parameter comment.  \n- E.SC.API.0045008  \n  The specified parameter model_id is registered.  \n- E.SC.API.0045009  \n  Bad request.  \n- E.SC.API.0045014  \n  Bad request.  \n- E.SC.API.0045015  \n  Bad request.  \n- E.SC.API.0045018  \n  Bad request.  \n- E.SC.API.0045019  \n  Bad request.  \n- E.SC.API.0045020  \n  Bad request.  \n- E.SC.API.0045021  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  \n- E.SC.API.0045022  \n  Unauthorized operation.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0045007  \n  Not found.  \n- E.SC.API.0045011  \n  Not found.  \n- E.SC.API.0045013  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0045016  \n  Internal server error.  \n- E.SC.API.0045017  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_name}/relearn": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetRelearnStatus",
        "description": "The retraining status of a specific AI model.",
        "operationId": "get_relearn_status",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_name",
            "description": "Name of the project.",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS"
                    },
                    "status": {
                      "type": "string",
                      "description": "The retraining status.  \n- Value definition  \nTraining  \nCompleted"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0075001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Train Model"
        ],
        "summary": "Relearn",
        "description": "Relearn the specified project.",
        "operationId": "relearn",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_name",
            "description": "Name of the project.",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "Regular"
            },
            "name": "training_type",
            "description": "Training type. *Specify only for Custom Vision projects.\n- Value definition  \n  Regular : Quick training.  \n  Advanced : Advanced training. *Specify the reserved budget (in hours) in the reserved_budget_in_hours parameter.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "Reserved Budget In Hours. *This parameter is specified when training_type is Advanced for Custom Vision project.",
            "name": "reserved_budget_in_hours",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS"
                    },
                    "iteration_id": {
                      "type": "string",
                      "description": "The iteration ID."
                    },
                    "iteration_name": {
                      "type": "string",
                      "description": "The iteration name."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0074002  \n  Bad request.  \n- E.SC.API.0074003  \n  Invalid parameter training_type.  \n- E.SC.API.0074004  \n  Invalid parameter reserved_budget_in_hours.  \n- E.SC.API.0074006  \n  Invalid parameter epochs.  \n- E.SC.API.0074010  \n  Not enough tags for training.  \n- E.SC.API.0074011  \n  Not enough images per tag for training. It is necessary to set 15 or more images for each tag.  \n- E.SC.API.0074012  \n  Not enough images per tag for training.  \n- E.SC.API.0074013  \n  Not enough images for training.  \n- E.SC.API.0074014  \n  One image cannot be set in multiple tags for Sts {0} project.  \n- E.SC.API.0074015  \n  Training not needed  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  \n- E.SC.API.0074009  \n  Unauthorized operation.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0074001  \n  Not found.  \n- E.SC.API.0074005  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0074008  \n  Training has already started for the project.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "W.SC.API.0000010",
                  "message": "Conflict.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0074007  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_name}/images/files": {
      "post": {
        "tags": [
          "Train Model"
        ],
        "summary": "ImportImagesFromFiles",
        "description": "Import the image file used for re-learning into the project.",
        "operationId": "import_images_from_files",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_name",
            "description": "Name of the project.",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportImagesFromFilesJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0065001  \n  Json format is invalid.  \n- E.SC.API.0065003  \n  The project is only used for import_dataset_file API.  \n- E.SC.API.0065004  \n  Image format contains invalid files.  \n- E.SC.API.0065005  \n  Image format contains invalid files.  \n- E.SC.API.0065008  \n  The specified functionality of training_kit_type [{0}] is not yet implemented.  \n- W.SC.API.0065006  \n  The import was successful. But I skipped over the invalid images.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0065002  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_name}/images/scbloburls": {
      "post": {
        "tags": [
          "Train Model"
        ],
        "summary": "ImportImagesFromScblob",
        "description": "Import the image file used for retraining into the project via Azure Blob Storage.",
        "operationId": "import_images_from_scblob",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_name",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportImagesFromScblobJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0064001  \n  Json format is invalid.  \n- E.SC.API.0064004  \n  Image format contains invalid files.  \n- E.SC.API.0064005  \n  The specified parameter container_url is not set.  \n- E.SC.API.0064006  \n  The specified URL is invalid.  \n- E.SC.API.0064008  \n  The project is only used for import_dataset_file API.  \n- E.SC.API.0064009  \n  The specified functionality of training_kit_type [{0}] is not yet implemented.  \n- W.SC.API.0064007  \n  The import was successful. But I skipped over the invalid images.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0064002  \n  Not found.  \n- E.SC.API.0064003  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_id}/iterations": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetProjectIterations",
        "description": "Lists the specified project's iteration information.",
        "operationId": "get_project_iterations",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "Project ID.",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "0.3"
            },
            "name": "overlap_threshold",
            "description": "Overlap threshold. The bounding box overlap threshold used to determine true predictions.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "0.5"
            },
            "name": "threshold",
            "description": "The threshold used to determine true predictions.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "iterations"
                  ],
                  "properties": {
                    "iterations": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0129003  \n  Invalid parameter thresholds.  \n- E.SC.API.0129004  \n  Invalid parameter overlap_threshold.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0129001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0129002  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_id}/images": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetProjectImages",
        "description": "The images registered in a specified project and their information.",
        "operationId": "get_project_images",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "Project ID.",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "iteration_id",
            "description": "Iteration ID.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "newest"
            },
            "name": "order_by",
            "description": "Sort order: Sorted by the creation date of the image.\nValue range: newest, oldest  ",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": 50
            },
            "name": "number_of_images",
            "description": "The number of images to acquire information. \nValue range: 0 to 256",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": 0
            },
            "name": "skip",
            "description": "The number of images to skip acquiring information.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "resized"
            },
            "name": "image_size_type",
            "description": "Types of image sizes. *Available only for Custom Vision projects.\n- Value definition  \n  resized  \n  thumbnail  \n  original",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "total_image_count",
                    "images"
                  ],
                  "properties": {
                    "total_image_count": {
                      "type": "integer",
                      "description": "The total image count."
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Image"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0119001  \n  Invalid parameter order_by.  \n- E.SC.API.0119002  \n  Bad request.  \n- E.SC.API.0119003  \n  Bad request.  \n- E.SC.API.0119007  \n  Invalid parameter image_size_type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0119004  \n  Not found.  \n- E.SC.API.0119005  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0119006  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Train Model"
        ],
        "summary": "DeleteProjectImages",
        "description": "Delete images from a project by image ID.",
        "operationId": "delete_project_images",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "Project ID.",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "image_ids",
            "description": "ID of the images. *If you have multiple entries, separate them with commas. IDs can be specified from 1 to 256.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0121001  \n  Parameter image_ids is not set.  \n- E.SC.API.0121002  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0121003  \n  Not found.  \n- W.SC.API.0121005  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0121004  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_id}/images/id": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetProjectImagesById",
        "description": "Lists the information for selected image IDs within the project.",
        "operationId": "get_project_images_by_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "Project ID.",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "image_ids",
            "description": "ID of the images. *If you have multiple entries, separate them with commas. IDs can be specified from 1 to 256.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "iteration_id",
            "description": "Iteration ID.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "resized"
            },
            "name": "image_size_type",
            "description": "Types of image sizes. *Available only for Custom Vision projects.\n- Value definition  \n  resized  \n  thumbnail  \n  original",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "images"
                  ],
                  "properties": {
                    "images": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Image"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0120001  \n  Parameter image_ids is not set.  \n- E.SC.API.0120002  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0120003  \n  Not found.  \n- E.SC.API.0120004  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0120005  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_id}/images/{image_id}/regionproposals": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetImageRegionProposals",
        "description": "Returns region proposals (inference result) for an image detection along with the specified image ID.",
        "operationId": "get_image_region_proposals",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "Project ID.",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "image_id",
            "description": "Image ID.",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "project_id",
                    "image_id",
                    "proposals"
                  ],
                  "properties": {
                    "project_id": {
                      "type": "string",
                      "description": "The project ID."
                    },
                    "image_id": {
                      "type": "string",
                      "description": "The image ID."
                    },
                    "proposals": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "confidence",
                          "bounding_box"
                        ],
                        "properties": {
                          "confidence": {
                            "type": "string",
                            "description": "The confidence score."
                          },
                          "bounding_box": {
                            "type": "object",
                            "properties": {
                              "left": {
                                "type": "number",
                                "description": "Left of the region (ratio of image size). *Available only for object detection."
                              },
                              "top": {
                                "type": "number",
                                "description": "Top of the region (ratio of image size). *Available only for object detection."
                              },
                              "width": {
                                "type": "number",
                                "description": "Width of the region (ratio of image size). *Available only for object detection."
                              },
                              "height": {
                                "type": "number",
                                "description": "Height of the region (ratio of image size). *Available only for object detection."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0164001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0164003  \n  Internal server error.  \n- E.SC.API.0164004  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_id}/images/regions": {
      "post": {
        "tags": [
          "Train Model"
        ],
        "summary": "CreateProjectImageRegions",
        "description": "Adds a tag to an image within a specific project.",
        "operationId": "create_project_image_regions",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "Project ID.",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectImageRegionsJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "created"
                  ],
                  "properties": {
                    "created": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Region"
                      }
                    },
                    "duplicated": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Region"
                      }
                    },
                    "exceeded": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Region"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0126001  \n  Json format is invalid.  \n- E.SC.API.0126002  \n  Parameter image_id is not set.  \n- E.SC.API.0126003  \n  Parameter tag_id or tag_name is not set.  \n- E.SC.API.0126004  \n  Parameter left is not set.  \n- E.SC.API.0126005  \n  Parameter top is not set.  \n- E.SC.API.0126006  \n  Parameter width is not set.  \n- E.SC.API.0126007  \n  Parameter height is not set.  \n- E.SC.API.0126008  \n  Invalid parameter left.  \n- E.SC.API.0126009  \n  Invalid parameter top.  \n- E.SC.API.0126010  \n  Invalid parameter width.  \n- E.SC.API.0126011  \n  Invalid parameter height.  \n- E.SC.API.0126012  \n  Bad request.  \n- E.SC.API.0126013  \n  Bad request.  \n- E.SC.API.0126018  \n  Invalid Parameter tag_id.  \n- E.SC.API.0126019  \n  Invalid Parameter tag_name.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0126014  \n  Not found.  \n- E.SC.API.0126015  \n  Not found.  \n- E.SC.API.0126016  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0126017  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Train Model"
        ],
        "summary": "UpdateProjectImageRegions",
        "description": "Updates tags applied to images within a specific project.",
        "operationId": "update_project_image_regions",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "Description of the subject.",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjectImageRegionsJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "created"
                  ],
                  "properties": {
                    "updated": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Region"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0128001  \n  Json format is invalid.  \n- E.SC.API.0128002  \n  Parameter region_id is not set.  \n- E.SC.API.0128003  \n  Parameter image_id is not set.  \n- E.SC.API.0128004  \n  Parameter tag_id or tag_name is not set.  \n- E.SC.API.0128005  \n  Parameter left is not set.  \n- E.SC.API.0128006  \n  Parameter top is not set.  \n- E.SC.API.0128007  \n  Parameter width is not set.  \n- E.SC.API.0128008  \n  Parameter height is not set.  \n- E.SC.API.0128009  \n  Invalid parameter left.  \n- E.SC.API.0128010  \n  Invalid parameter top.  \n- E.SC.API.0128011  \n  Invalid parameter width.  \n- E.SC.API.0128012  \n  Invalid parameter height.  \n- E.SC.API.0128013  \n  Bad request.  \n- E.SC.API.0128014  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0128015  \n  Not found.  \n- E.SC.API.0128016  \n  Not found.  \n- E.SC.API.0128017  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0128018  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_id}/images/regions/{region_id}": {
      "delete": {
        "tags": [
          "Train Model"
        ],
        "summary": "DeleteProjectImageRegions",
        "description": "Removes tags from images within a specific project.",
        "operationId": "delete_project_image_regions",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "Project id.",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "region_id",
            "description": "Region id.",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0127001  \n  Not found.  \n- W.SC.API.0127003  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0127002  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_id}/tags": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetProjectTags",
        "description": "Lists the tags applied to a specific project.",
        "operationId": "get_project_tags",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "project ID.",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "iteration_id",
            "description": "Iteration ID.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "asc"
            },
            "name": "order_by",
            "description": "Sort order: Sorted by the tag creation date. \nValue range: asc, desc  ",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "tags"
                  ],
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Tag"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0169001  \n  Bad request.  \n- E.SC.API.0169003  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0169002  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Train Model"
        ],
        "summary": "CreateProjectTag",
        "description": "Creates a new tag to a specified project.",
        "operationId": "create_project_tag",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "Project ID.",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "tag_name",
            "description": "Tag name.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "description",
            "description": "Description of the subject.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The project ID."
                    },
                    "name": {
                      "type": "string",
                      "description": "The tag name."
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the subject."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the subject."
                    },
                    "image_count": {
                      "type": "string",
                      "description": "The number of tagged images."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0122001  \n  Parameter tag_name is not set.  \n- E.SC.API.0122002  \n  Invalid parameter type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0122003  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0122004  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_id}/tags/{tag_id}": {
      "delete": {
        "tags": [
          "Train Model"
        ],
        "summary": "DeleteProjectTag",
        "description": "Removes tags from a specified project.",
        "operationId": "delete_project_tag",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "Project ID.",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "tag_id",
            "description": "Tag ID.",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0124001  \n  Not found.  \n- W.SC.API.0124002  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0124003  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Train Model"
        ],
        "summary": "UpdateProjectTag",
        "description": "Updates tags applied to a specified project.",
        "operationId": "update_project_tag",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "Project ID.",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "tag_id",
            "description": "Tag ID.",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjectTagJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The project ID."
                    },
                    "name": {
                      "type": "string",
                      "description": "The tag name."
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the subject."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the subject."
                    },
                    "image_count": {
                      "type": "string",
                      "description": "The number of tagged images."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0123001  \n  Json format is invalid.  \n- E.SC.API.0123002  \n  Parameter tag name to be updated is not set.  \n- E.SC.API.0123003  \n  Parameter tag description to be updated is not set.  \n- E.SC.API.0123004  \n  Parameter tag type to be updated is not set.  \n- E.SC.API.0123005  \n  Invalid parameter tag type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0123006  \n  Not found.  \n- W.SC.API.0123007  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0123008  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_id}/tags/tagged_images": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetProjectTaggedImages",
        "description": "Returns information of tagged images within a specific project.",
        "operationId": "get_project_tagged_images",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "Project ID.",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "tag_ids",
            "description": "ID of tags. *If you have multiple entries, separate them with commas.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "iteration_id",
            "description": "Iteration ID.",
            "in": "query"
          },
          {
            "description": "Number of images to fetch.\nValue range: 0 to 256",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50
            },
            "name": "number_of_images",
            "in": "query"
          },
          {
            "description": "The number of images to skip acquiring information.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "description": "Sort order: Sorted by the creation date of the image.\nValue range: newest, oldest",
            "required": false,
            "schema": {
              "type": "string",
              "default": "newest"
            },
            "name": "order_by",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "resized"
            },
            "name": "image_size_type",
            "description": "Types of image sizes. *Available only for Custom Vision projects.\n- Value definition  \n  resized  \n  thumbnail  \n  original",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "total_image_count",
                    "tagged_images"
                  ],
                  "properties": {
                    "total_image_count": {
                      "type": "integer",
                      "description": "The total image count."
                    },
                    "tagged_images": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Image"
                      }
                    },
                    "blank_tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tag_id": {
                            "type": "string",
                            "description": "The tag id."
                          },
                          "tag_name": {
                            "type": "string",
                            "description": "The tag name."
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the subject."
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the subject."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0125001  \n  Bad request.  \n- E.SC.API.0125002  \n  Bad request.  \n- E.SC.API.0125003  \n  Bad request.  \n- E.SC.API.0125004  \n  Invalid parameter order_by.  \n- E.SC.API.0125008  \n  Invalid parameter image_size_type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0125005  \n  Not found.  \n- E.SC.API.0125006  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0125007  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/model_projects/{project_id}/tags/untagged_images": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetProjectUntaggedImages",
        "description": "Returns information of untagged images within the specific project.",
        "operationId": "get_project_untagged_images",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "project_id",
            "description": "Project ID.",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "iteration_id",
            "description": "Iteration ID.",
            "in": "query"
          },
          {
            "description": "Number of images to fetch.\nValue range: 0 to 256",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50
            },
            "name": "number_of_images",
            "in": "query"
          },
          {
            "description": "The number of images to skip acquiring information.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "description": "Sort order: Sorted by the creation date of the image.\nValue range: newest, oldest",
            "required": false,
            "schema": {
              "type": "string",
              "default": "newest"
            },
            "name": "order_by",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "resized"
            },
            "name": "image_size_type",
            "description": "Types of image sizes. *Available only for Custom Vision projects.\n- Value definition  \n  resized  \n  thumbnail  \n  original",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "total_image_count",
                    "tagged_images"
                  ],
                  "properties": {
                    "total_image_count": {
                      "type": "integer",
                      "description": "The total image count."
                    },
                    "untagged_images": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The image ID."
                          },
                          "created": {
                            "type": "string",
                            "description": "The creation date."
                          },
                          "width": {
                            "type": "integer",
                            "description": "The image width."
                          },
                          "height": {
                            "type": "integer",
                            "description": "The image height."
                          },
                          "image": {
                            "type": "string",
                            "description": "The image file (base64 encoding)."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0136001  \n  Bad request.  \n- E.SC.API.0136002  \n  Bad request.  \n- E.SC.API.0136003  \n  Invalid parameter order_by.  \n- E.SC.API.0136007  \n  Invalid parameter image_size_type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0136004  \n  Not found.  \n- E.SC.API.0136005  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0136006  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/models": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetModels",
        "description": "Lists the model information.",
        "operationId": "get_models",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "model_id",
            "description": "AI model ID. *Fuzzy searching is available.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "comment",
            "description": "Model description. *Fuzzy searching is available.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "project_name",
            "description": "Name of the project. *Fuzzy searching is available.",
            "in": "query"
          },
          {
            "description": "Specifies the AI model platform. \n- Value definition  \n  0 : Custom Vision  \n  1 : Non-Custom Vision",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "model_platform",
            "in": "query"
          },
          {
            "description": "Specifies the project type.   \n- Value definition  \n  0 : Base model  \n  1 : Device model  ",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "project_type",
            "in": "query"
          },
          {
            "description": "Sorts the device ID.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "name": "latest_type",
            "description": "Classification of the latest version. \n- Value definition  \n  0: Latest published version  \n  1: Latest version after completion of the conversion process or publication.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "models": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Model"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0056001  \n  Invalid parameter model_platform.  \n- E.SC.API.0056002  \n  Invalid parameter project_type.  \n- E.SC.API.0056003  \n  Invalid parameter latest_type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Train Model"
        ],
        "summary": "ImportBaseModel",
        "description": "Imports a base model into your project. When registering a new model ID, it will be added accordingly. Specifying an existing ID will result in overwriting.",
        "operationId": "import_base_model",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportBaseModelJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0047001  \n  Json format is invalid.  \n- E.SC.API.0047002  \n  Parameter model_id is not set.  \n- E.SC.API.0047003  \n  Invalid parameter model_id.  \n- E.SC.API.0047005  \n  Neither of  parameter model_list and model_file_id_list is set.  \n- E.SC.API.0047008  \n  Invalid parameter vendor_name.  \n- E.SC.API.0047009  \n  Invalid parameter comment.  \n- E.SC.API.0047010  \n  Bad request.  \n- E.SC.API.0047016  \n  Bad request.  \n- E.SC.API.0047017  \n  Invalid parameter converted.  \n- E.SC.API.0047018  \n  Invalid parameter network_type.  \n- E.SC.API.0047019  \n  Invalid parameter labels.  \n- E.SC.API.0047020  \n  Invalid parameter model_list.  \n- E.SC.API.0047021  \n  Invalid parameter input_format_param or input_format_param_file_id.  \n- E.SC.API.0047022  \n  Invalid parameter network_config or network_config_file_id.  \n- E.SC.API.0047024  \n  Bad request.  \n- E.SC.API.0047026  \n  Invalid parameter model_file_id_list.  \n- E.SC.API.0047027  \n  Invalid parameter model_platform.  \n- E.SC.API.0047029  \n  Only one model file allowed when converted is True.  \n- E.SC.API.0047038  \n  The model file exceed size limit.  \n- E.SC.API.0047039  \n  The components of import file is incorrect.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  \n- E.SC.API.0047030  \n  Unauthorized operation.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0047015  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0047011  \n  Internal server error.  \n- E.SC.API.0047012  \n  Internal server error.  \n- E.SC.API.0047013  \n  Internal server error.  \n- E.SC.API.0047014  \n  Internal server error.  \n- E.SC.API.0047023  \n  Internal server error.  \n- E.SC.API.0047025  \n  Get converter version failed.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/models/{model_id}": {
      "post": {
        "tags": [
          "Train Model"
        ],
        "summary": "PublishModel",
        "description": "Converts the AI model.\nThis process is handled asynchronously due to its time-consuming nature. \n*To check the processing status, refer to the result of GetBaseModelStatus API or the response from GetDeviceModelStatus API. When the process is completed, 'Import completed' is returned.",
        "operationId": "publish_model",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "model_id",
            "description": "AI model ID.",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "description": "The device ID. \n*Only available for device models. \nThis parameter is only available for deploying base models.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS or WARNING."
                    },
                    "import_id": {
                      "type": "string",
                      "description": "The conversion request ID (conv_id)."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- W.SC.API.0181006  \n  The version of keras is out of date. Please use 2.12 or higher."
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "examples": {
                  "SUCCESS": {
                    "value": {
                      "result": "SUCCESS",
                      "import_id": "550e8400-e29b-41d4-a716-446655440000"
                    }
                  },
                  "WARNING": {
                    "value": {
                      "result": "WARNING",
                      "code": "W.SC.API.0181006",
                      "message": "The version of keras is out of date. Please use 2.12 or higher.",
                      "time": "2022-01-01T01:01:01.000001"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0181002  \n  Bad request.  \n- E.SC.API.0181007  \n  Specified converter_version does not support the model's keras version.  \n- E.SC.API.0181008  \n  The model file exceed size limit.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  \n- E.SC.API.0181003  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0181001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0181004  \n  Internal server error.  \n- E.SC.API.0181005  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Train Model"
        ],
        "summary": "DeleteModel",
        "description": "Deletes the base model, device model, and projects associated with the specified model ID.",
        "operationId": "delete_model",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "model_id",
            "description": "AI model ID.",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- W.SC.API.0078002  \n  The model deletion process is complete. However  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0078003  \n  Since preparations for deletion have not been completed  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  \n- E.SC.API.0078004  \n  Unauthorized operation.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- W.SC.API.0078001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Train Model"
        ],
        "summary": "UpdateModel",
        "description": "Updates attribute information of the specified AI model.",
        "operationId": "update_model",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "model_id",
            "description": "AI model ID. The maximum number of characters that can be specified is 100.",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "comment",
            "description": "Description of the subject. The maximum number of characters that can be specified is 100.",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "version_number",
            "description": "Name of the vendor. The maximum number of characters that can be specified is 100.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0073001  \n  Invalid parameter comment.  \n- E.SC.API.0073002  \n  Invalid parameter vendor_name.  \n- E.SC.API.0073003  \n  Parameter is not set.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0073004  \n  Not found.  \n- E.SC.API.0073006  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0073005  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/models/{model_id}/base": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetBaseModelStatus",
        "description": "Returns an information of the specified base model.",
        "operationId": "get_base_model_status",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "model_id",
            "description": "AI model ID.",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "name": "latest_type",
            "description": "Classification of the latest version.\n- Value definition  \n  0: Latest published version  \n  1: Latest version after completion of the conversion process or publication.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0057001  \n  Invalid parameter latest_type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0057002  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/models/{model_id}/base/versions": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetBaseModelVersions",
        "description": "Lists the base model version.",
        "operationId": "get_base_model_versions",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "model_id",
            "description": "AI model ID.",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "version_number",
            "description": "Version number.",
            "in": "query"
          },
          {
            "description": "The scope of response parameters to return.\n - Value definition  \n  full : Return full parameters  \n  minimal : Return minimal parameters *effective for timesaving.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "full"
            },
            "name": "scope",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0058001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/models/{model_id}/base/versions/{version_number}": {
      "patch": {
        "tags": [
          "Train Model"
        ],
        "summary": "UpdateBaseModelVersion",
        "description": "Updates attribute information of the specified base model version.",
        "operationId": "update_base_model_version",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "model_id",
            "description": "AI model ID.",
            "in": "path"
          },
          {
            "description": "Version number.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "version_number",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBaseModelVersionJsonBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0076001  \n  Json format is invalid.  \n- E.SC.API.0076002  \n  Parameter is not set.  \n- E.SC.API.0076003  \n  Invalid parameter comment.  \n- E.SC.API.0076004  \n  Parameter input_format_param or network_config is not set.  \n- E.SC.API.0076006  \n  Bad request.  \n- E.SC.API.0076012  \n  Bad request.  \n- E.SC.API.0076013  \n  Invalid parameter input_format_param.  \n- E.SC.API.0076014  \n  Invalid parameter network_config.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0076005  \n  Not found.  \n- E.SC.API.0076010  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0076007  \n  Internal server error.  \n- E.SC.API.0076008  \n  Internal server error.  \n- E.SC.API.0076009  \n  Internal server error.  \n- E.SC.API.0076011  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/models/{model_id}/devices/{device_id}": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetDeviceModelStatus",
        "description": "Returns an information of the specified device model.",
        "operationId": "get_device_model_status_func",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "model_id",
            "description": "AI model ID.",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "description": "The Device ID.",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "name": "latest_type",
            "description": "Classification of the latest version. \n- Value definition  \n  0: Latest version after publication.  \n  1: Latest version after completion of the conversion process or publication.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0060001  \n  Invalid parameter latest_type.  \n- E.SC.API.0060002  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/models/{model_id}/devices/{device_id}/versions": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetDeviceModelVersions",
        "description": "Lists the device model version information",
        "operationId": "get_device_model_versions",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "model_id",
            "description": "AI model ID.",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "description": "The Device ID.",
            "in": "path"
          },
          {
            "description": "The scope of response parameters to return.\n - Value definition  \n  full : Returns full parameters  \n  minimal : Returns minimal parameters *effective for timesaving.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "full"
            },
            "name": "scope",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "version_number",
            "description": "Version number.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0061001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/models/{model_id}/devices/{device_id}/versions/{version_number}": {
      "patch": {
        "tags": [
          "Train Model"
        ],
        "summary": "UpdateDeviceModelVersion",
        "description": "Updates attribute information of the AI model version for the specified Edge Device.",
        "operationId": "update_device_model_version",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "model_id",
            "description": "AI model ID.",
            "in": "path"
          },
          {
            "description": "The Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "description": "Version number.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "version_number",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDeviceModelVersionJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0077001  \n  Invalid parameter comment.  \n- E.SC.API.0077002  \n  Parameter is not set.  \n- E.SC.API.0077006  \n  Json format is invalid.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0077003  \n  Not found.  \n- E.SC.API.0077005  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0077004  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/models/{model_id}/dnn_params": {
      "get": {
        "tags": [
          "Train Model"
        ],
        "summary": "GetDnnParams",
        "description": "Returns dnn_params of the specified AI model.",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "model_id",
            "description": "AI model ID.",
            "in": "path"
          },
          {
            "description": "Version number.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "latest"
            },
            "name": "version_number",
            "in": "query"
          },
          {
            "description": "The device ID.\n*Only available for device models. \nThis parameter is only available for deploying base models.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "contents"
                  ],
                  "properties": {
                    "contents": {
                      "description": "Returns base64-encoded dnnParams.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0272002  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0272003  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0272001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/firmwares": {
      "get": {
        "tags": [
          "Firmware"
        ],
        "summary": "GetFirmwares",
        "description": "Lists the information of the selected Edge System Software.",
        "operationId": "get_firmwares",
        "parameters": [
          {
            "description": "Type and ID of the Edge System Software.\n- Value definition  \n  00: Main Chip Firmware  \n  01: Sensor Chip Firmware (main)  \n  02: Chip Firmware (loader)  ",
            "required": false,
            "schema": {
              "type": "string",
              "description": "firmware type"
            },
            "name": "firmware_type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "firmwares"
                  ],
                  "properties": {
                    "firmwares": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Firmware"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0023001  \n  Invalid parameter firmware_type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Firmware"
        ],
        "summary": "CreateFirmware",
        "description": "Registers the selected Edge System Software to the Console.",
        "operationId": "create_firmware",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFirmwareJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0025001  \n  Parameter firmware_type is not set.  \n- E.SC.API.0025002  \n  Parameter version_number is not set.  \n- E.SC.API.0025004  \n  Invalid parameter comment.  \n- E.SC.API.0025006  \n  The specified firmware version is registered.  \n- E.SC.API.0025009  \n  Parameter file_name is not set.  \n- E.SC.API.0025010  \n  Parameter file_content is not set.  \n- E.SC.API.0025011  \n  Invalid parameter file_name.  \n- E.SC.API.0025012  \n  Invalid parameter version_number.  \n- E.SC.API.0025013  \n  Invalid parameter stored_type.  \n- E.SC.API.0025014  \n  Common firmware cannot be deleted.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0025005  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/firmwares/{firmware_type}/{version_number}": {
      "get": {
        "tags": [
          "Firmware"
        ],
        "summary": "GetFirmware",
        "description": "Returns the information of a selected Edge System Software.",
        "operationId": "get_firmware",
        "parameters": [
          {
            "description": "Type and ID of the Edge System Software.\n- Value definition  \n  00: Main Chip Firmware  \n  01: Sensor Chip Firmware (main) \n  02: Chip Firmware (loader)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "firmware_type",
            "in": "path"
          },
          {
            "description": "Version number.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "version_number",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Firmware"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0024001  \n  Invalid parameter firmware_type.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0024003  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Firmware"
        ],
        "summary": "DeleteFirmware",
        "description": "Deletes the selected Edge System Software from the Console.",
        "operationId": "delete_firmware",
        "parameters": [
          {
            "description": "Type and ID of the Edge System Software.\n- Value definition  \n  00: Main Chip Firmware  \n  01: Sensor Chip Firmware (main) \n  02: Chip Firmware (loader)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "firmware_type",
            "in": "path"
          },
          {
            "description": "Version number.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "version_number",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0026001  \n  Common firmware cannot be deleted.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- W.SC.API.0026003  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0026002  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/device_apps": {
      "get": {
        "tags": [
          "Device App"
        ],
        "summary": "GetDeviceApps",
        "description": "Lists the information of the Edge Applications that runs on the Edge Device.",
        "operationId": "get_device_apps",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "apps"
                  ],
                  "properties": {
                    "apps": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DeviceApp"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Device App"
        ],
        "summary": "ImportDeviceApp",
        "description": "Imports Edge Device Application for deployment to the Edge Device into the Console.",
        "operationId": "import_device_app",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportDeviceAppJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0170001  \n  Parameter compiled_flg is not set.  \n- E.SC.API.0170002  \n  Parameter app_name is not set.  \n- E.SC.API.0170003  \n  Parameter version_number is not set.  \n- E.SC.API.0170004  \n  Parameter file_name is not set.  \n- E.SC.API.0170005  \n  Parameter file_content is not set.  \n- E.SC.API.0170006  \n  Invalid parameter compiled_flg.  \n- E.SC.API.0170007  \n  Invalid parameter app_name.  \n- E.SC.API.0170008  \n  Invalid parameter version_number.  \n- E.SC.API.0170009  \n  Invalid parameter comment.  \n- E.SC.API.0170010  \n  Invalid parameter file_name.  \n- E.SC.API.0170011  \n  The specified app has already been registered.  \n- E.SC.API.0170012  \n  The specified file content is invalid.  \n- E.SC.API.0170016  \n  The length of parameter app_name and version_number exceeds limit.  \n- E.SC.API.0170018  \n  Invalid json format  \n- E.SC.API.0170019  \n  Invalid json format  \n- E.SC.API.0170020  \n  Invalid json format.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  \n- E.SC.API.0170017  \n  Unauthorized operation.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0170013  \n  Make sign failed.  \n- E.SC.API.0170014  \n  File upload failed.  \n- E.SC.API.0170015  \n  Failed to create app.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/device_apps/{app_name}/{version_number}": {
      "get": {
        "tags": [
          "Device App"
        ],
        "summary": "GetDeviceApp",
        "description": "Returns the information of a specific Edge Application.",
        "operationId": "get_device_app",
        "parameters": [
          {
            "description": "The application name.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The application name."
            },
            "name": "app_name",
            "in": "path"
          },
          {
            "description": "The application version.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The application version."
            },
            "name": "version_number",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The application name."
                    },
                    "create_by": {
                      "type": "string",
                      "description": "The subject that created the settings.\n- Value definition  \n  Self: Self-training models\n  Marketplace: Marketplace purchasing models\n"
                    },
                    "package_id": {
                      "type": "string",
                      "description": "Marketplace package ID."
                    },
                    "product_id": {
                      "type": "string",
                      "description": "Marketplace product ID."
                    },
                    "schema_info": {
                      "type": "object",
                      "description": "Schema information.",
                      "properties": {
                        "VnSAppId": {
                          "type": "string",
                          "description": "VnS application ID."
                        },
                        "version": {
                          "type": "string",
                          "description": "The VnS application version number."
                        },
                        "interfaces": {
                          "type": "object",
                          "description": "Metadata format IDs.",
                          "properties": {
                            "in": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "metadataFormatId": {
                                    "type": "string",
                                    "description": "Metadata format ID."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "version": {
                      "type": "string",
                      "description": "The application version number."
                    },
                    "compiled_flg": {
                      "type": "string",
                      "description": "Compilation status (flag) of the target application.\n- Value definition  \n  0 : Not compiled  \n  1 : Compiled\n"
                    },
                    "status": {
                      "type": "string",
                      "description": "Compilation status of the target application.  \n- Value definition  \n  0: Before compilation  \n  1: Compiling\n  2: Success \n  3: Fail\n"
                    },
                    "comment": {
                      "type": "string",
                      "description": "Description of the subject."
                    },
                    "deploy_count": {
                      "type": "object",
                      "description": "The deploy count."
                    },
                    "ins_id": {
                      "type": "string",
                      "description": "The subject that configured the feature."
                    },
                    "ins_date": {
                      "type": "string",
                      "description": "The date the settings were created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    },
                    "upd_id": {
                      "type": "string",
                      "description": "The subject that updated the settings."
                    },
                    "upd_date": {
                      "type": "string",
                      "description": "The date the settings were updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0720001  \n  The specified parameter app_name or version_number is not registered.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Device App"
        ],
        "summary": "DeleteDeviceApp",
        "description": "Deletes the specified Edge Application from the Console.",
        "operationId": "delete_device_app",
        "parameters": [
          {
            "description": "The application name.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The application name."
            },
            "name": "app_name",
            "in": "path"
          },
          {
            "description": "The application version.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The application version."
            },
            "name": "version_number",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  \n- E.SC.API.0173003  \n  Unauthorized operation.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- W.SC.API.0173001  \n  The specified parameter app_name or version_number is not registered.  \n- W.SC.API.0173002  \n  App file does not exist.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/device_apps/{app_name}/{version_number}/export": {
      "get": {
        "tags": [
          "Device App"
        ],
        "summary": "ExportDeviceApp",
        "description": "Exports the specified Edge Application information.",
        "operationId": "export_device_app",
        "parameters": [
          {
            "description": "The application name.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The application name."
            },
            "name": "app_name",
            "in": "path"
          },
          {
            "description": "The application version.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The application version."
            },
            "name": "version_number",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "contents",
                    "file_name"
                  ],
                  "properties": {
                    "contents": {
                      "type": "string",
                      "description": "Contents of the file in base64-encoded format."
                    },
                    "file_name": {
                      "type": "string",
                      "description": "Name of the subject file."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0177001  \n  The specified parameter app_name or version_number is not registered.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/device_apps/{app_name}/{version_number}/deploys": {
      "get": {
        "tags": [
          "Device App"
        ],
        "summary": "GetDeviceAppDeploys",
        "description": "Returns the specified Edge Application deployment status.",
        "operationId": "get_device_app_deploys",
        "parameters": [
          {
            "description": "The application name.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The application name."
            },
            "name": "app_name",
            "in": "path"
          },
          {
            "description": "The application version.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The application version."
            },
            "name": "version_number",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "deploys"
                  ],
                  "properties": {
                    "deploys": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DeviceAppDeployHistory"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0178001  \n  The specified parameter app_name or version_number is not registered.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/device_apps/{app_name}/{version_number}/devices": {
      "get": {
        "tags": [
          "Device App"
        ],
        "summary": "GetAppDevices",
        "description": "Lists the Edge Application deployment information.",
        "operationId": "get_app_devices",
        "parameters": [
          {
            "description": "The application name.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "app_name",
            "in": "path"
          },
          {
            "description": "The application version.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "version_number",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "device_ids": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The device list."
                    }
                  }
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0190001  \n  The specified parameter app_name or version_number is not registered.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/device_apps_deploys": {
      "post": {
        "tags": [
          "Device App"
        ],
        "summary": "DeployDeviceApp",
        "description": "Deploys Edge Application to specific devices.",
        "operationId": "deploy_device_app",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeployDeviceAppJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "app_deploy_id"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS"
                    },
                    "app_deploy_id": {
                      "type": "integer",
                      "description": "Set app_deploy_id."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0174001  \n  Parameter app_name is not set.  \n- E.SC.API.0174002  \n  Parameter version_number is not set.  \n- E.SC.API.0174003  \n  Parameter device_ids is not set.  \n- E.SC.API.0174004  \n  A duplicate value is specified for the parameter device_ids.  \n- E.SC.API.0174005  \n  Invalid parameter comment.  \n- E.SC.API.0174006  \n  The specified deploy parameter content is invalid.  \n- E.SC.API.0174009  \n  Unable to connect to device. device_ids = {0}  \n- E.SC.API.0174010  \n  The metadata format id is not match with the device. device_ids = {0}  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0174007  \n  The specified parameter app_name or version_number is not registered.  \n- E.SC.API.0174008  \n  The specified parameter device_id is not registered.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Device App"
        ],
        "summary": "UndeployDeviceApp",
        "description": "Undeploys the Edge Application from a specific device.",
        "operationId": "undeploy_device_app",
        "parameters": [
          {
            "description": "The target device IDs.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "To specify multiple device IDs, separate them with commas."
            },
            "name": "device_ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0176001  \n  Parameter device_id is not set.  \n- E.SC.API.0176002  \n  A duplicate value is specified for the parameter device_ids.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0176003  \n  The specified parameter device_id is not registered.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/devices/images/export": {
      "get": {
        "tags": [
          "Insight"
        ],
        "summary": "ExportImages",
        "description": "Returns a URL to export images in a ZIP file format based on the specified conditions.  \n*Encrypted, for use with training images in other environments. \n\n[Prerequisites]  \n- A zip file containing the target images can be downloaded by accessing the returned URL.  \n  Each image is encrypted using the method detailed below.  \n- The image is encrypted with a shared key, which is randomly generated and issued by the API. This shared key is required for decrypting the image.  \n- The image encryption method used is AES128 in CBC mode.  \n- The iv (*1) and the encrypted data (*2) are stored within the zip file.  \n  *1. The first 16 bytes represent the initial vector(iv). When decrypting, use this as the iv.  \n  *2. The encrypted image data starts from the 17th byte and is padded using the PKCS7 algorithm with an AES block size of 16 bytes. To decrypt, exclude the first 16 bytes (iv), then decrypt and unpad the remaining data.  \n- The shared key can be obtained by decrypting the key provided by the API (*3) using the secret key.  \n  *3. The key provided by the API is encrypted with RSA using OAEP padding and is also base64 encoded. To decrypt, first decode base64 and then decrypt the result.\n\n[Generating a Key]  \n- The public and private keys are generated by Sier.  \n- The keys are issued with a length of either 1024 or 2048 bits.\n- The public key provided to this API as a parameter should be the content of the public key PEM file, base64 encoded.\n  \n  Example: Base64 encode the entire string as follows:  \n  \n  -----BEGIN PUBLIC KEY-----  \n  MIGfMA0GCSqGSIb3DQEBAQUAA4GNADC  \n  ..  \n  -----END PUBLIC KEY-----",
        "operationId": "export_images",
        "parameters": [
          {
            "description": "The public key.  \n*The entire content of the public key PEM file, base64 encoded.    ",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Key"
            },
            "name": "key",
            "in": "query"
          },
          {
            "description": "Date and time (From).  \n- Format: yyyyMMddhhmm",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Date and time (From).    \n- Format: yyyyMMddhhmm",
              "default": ""
            },
            "name": "from_datetime",
            "in": "query"
          },
          {
            "description": "Date and time (To).  \n- Format: yyyyMMddhhmm  ",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Date and time (To).\n- Format: yyyyMMddhhmm",
              "default": ""
            },
            "name": "to_datetime",
            "in": "query"
          },
          {
            "description": "The Device ID.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The Device ID.",
              "default": ""
            },
            "name": "device_id",
            "in": "query"
          },
          {
            "description": "Image file format. If not specified, no filtering will be applied. \n- Value definition  \n  JPG  \n  BMP  ",
            "required": false,
            "schema": {
              "type": "string",
              "description": "File Format",
              "default": ""
            },
            "name": "file_format",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "The shared key for image decryption, encrypted with the public key."
                    },
                    "url": {
                      "type": "string",
                      "description": "The SUS URL for downloading the data."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0114001  \n  Parameter key is not set.  \n- E.SC.API.0114002  \n  Invalid parameter from_datetime.  \n- E.SC.API.0114003  \n  Invalid parameter to_datetime.  \n- E.SC.API.0114004  \n  Bad request.  \n- E.SC.API.0114005  \n  Bad request.  \n- E.SC.API.0114006  \n  Bad request.  \n- E.SC.API.0114007  \n  Invalid parameter file_format.  \n- E.SC.API.0114009  \n  RSA key format is not supported.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0114008  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/devices/images/directories": {
      "get": {
        "tags": [
          "Insight"
        ],
        "summary": "GetImageDirectories",
        "description": "Returns the directory information (device group and device information) where images are stored.  ",
        "operationId": "get_image_directories",
        "parameters": [
          {
            "description": "The device ID.  \nReturns an image directory list linked to the specified device ID. ",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "query"
          },
          {
            "description": "Specify whether to delete images from devices that have been removed from the Console.",
            "name": "include_deleted_device",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "group_id",
                      "devices"
                    ],
                    "properties": {
                      "group_id": {
                        "type": "string",
                        "description": "The device group ID."
                      },
                      "devices": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "device_id",
                            "device_name",
                            "Image"
                          ],
                          "properties": {
                            "device_id": {
                              "type": "string",
                              "description": "The device ID."
                            },
                            "device_name": {
                              "type": "string",
                              "description": "The device name."
                            },
                            "Image": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "The directory name."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0106001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}/images/directories/{sub_directory_name}": {
      "get": {
        "tags": [
          "Insight"
        ],
        "summary": "GetImages",
        "description": "Returns the (saved) images from a specific device.\n*Application: Displaying an image in a UI. \n*For Developer Edition V1.7.0 or later, please use GetImages Stable API.",
        "operationId": "get_images",
        "parameters": [
          {
            "description": "The Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "description": "Directory name.  ",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "sub_directory_name",
            "in": "path"
          },
          {
            "description": "Sort order: Sorted by the creation date of the image.\nValue range: DESC, ASC",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ASC"
            },
            "name": "order_by",
            "in": "query"
          },
          {
            "description": "The number of images to acquire information.\nValue range: 0 to 256",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50
            },
            "name": "number_of_images",
            "in": "query"
          },
          {
            "description": "The number of images to skip acquiring information.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "description": "Date and time (From).  \n- Format: yyyyMMddhhmm",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Date and time (From).    \n- Format: yyyyMMddhhmm",
              "default": ""
            },
            "name": "from_datetime",
            "in": "query"
          },
          {
            "description": "Date and time (To). \n- Format: yyyyMMddhhmm  ",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Date and time (To).   \n- Format: yyyyMMddhhmm",
              "default": ""
            },
            "name": "to_datetime",
            "in": "query"
          },
          {
            "description": "Specify whether to delete images from devices that have been removed from the Console.",
            "name": "include_deleted_device",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "total_image_count",
                    "images"
                  ],
                  "properties": {
                    "total_image_count": {
                      "type": "integer",
                      "description": "The total number of images."
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "contents"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The image filename."
                          },
                          "contents": {
                            "type": "string",
                            "description": "Returns a base64-encoded image file."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0107003  \n  Invalid parameter order_by.  \n- E.SC.API.0107004  \n  Invalid parameter number_of_images.  \n- E.SC.API.0107005  \n  Invalid parameter skip.  \n- E.SC.API.0107007  \n  Invalid parameter from_datetime.  \n- E.SC.API.0107008  \n  Invalid parameter to_datetime.  \n- E.SC.API.0107009  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0107001  \n  Not found.  \n- E.SC.API.0107006  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Insight"
        ],
        "summary": "DeleteImages",
        "description": "Deletes the saved images from a specific Edge Device. \n*For Developer Edition V1.7.0 or later, please use DeleteImages Stable API.",
        "operationId": "delete_images",
        "parameters": [
          {
            "description": "The Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "description": "Directory name.  ",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "sub_directory_name",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteImagesJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0198002  \n  Invalid parameter sub_directory_name.  \n- E.SC.API.0198003  \n  Invalid parameter filenames.  \n- E.SC.API.0198006  \n  Invalid parameter directory_deletion.  \n- W.SC.API.0198005  \n  {0} does not exist.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0198001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0198004  \n  Delete {0} failed.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/images/devices/{device_id}/directories/{sub_directory_name}": {
      "get": {
        "tags": [
          "Insight"
        ],
        "summary": "GetImages Stable",
        "description": "Returns a SAS URL to download images from the specific device. Copy the URL to access the data. \nThe URL will expire after one hour. \n*This API is available for Developer Edition V1.7.0 or later.",
        "operationId": "get_images_stable",
        "parameters": [
          {
            "description": "The Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "description": "Directory name. ",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "sub_directory_name",
            "in": "path"
          },
          {
            "description": "The number of images to acquire information.\nValue range: 1 to 256",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "Retrieves additional data beyond the number of images specified by the query parameter (limit). Specify the value obtained from the response (continuation_token) to fetch the next images.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "name": "starting_after",
            "in": "query"
          },
          {
            "description": "Return only objects that forward match the input string",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "name_starts_with",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "continuation_token",
                    "data"
                  ],
                  "properties": {
                    "continuation_token": {
                      "type": "string",
                      "description": "Last token of extracted data. If there is no continuation data, this will be empty."
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "sas_url"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The image filename."
                          },
                          "sas_url": {
                            "type": "string",
                            "description": "SAS URL of image."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0107009  \n  Bad request.  \n- E.SC.API.0107010  \n  Invalid starting after or error fetching blobs.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0107001  \n  Not found.  \n- E.SC.API.0107006  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Insight"
        ],
        "summary": "DeleteImages Stable",
        "description": "Deletes the (saved) images for the specified device.  \n*This API is available for Developer Edition V1.7.0 or later.",
        "operationId": "delete_images_stable",
        "parameters": [
          {
            "description": "The Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "description": "Directory name. ",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "sub_directory_name",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteImagesJsonBodyStable"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0198002  \n  Invalid parameter sub_directory_name.  \n- E.SC.API.0198003  \n  Invalid parameter filenames.  \n- E.SC.API.0198006  \n  Invalid parameter directory_deletion.  \n- E.SC.API.0198007  \n  Unable to send message to queue.  \n- W.SC.API.0198005  \n  {0} does not exist.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0198001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0198004  \n  Delete {0} failed.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}/inferenceresults/{id}": {
      "get": {
        "tags": [
          "Insight"
        ],
        "summary": "GetInferenceResult",
        "description": "Returns an inference result from a specific Edge Device.",
        "operationId": "get_inference_result",
        "parameters": [
          {
            "description": "The Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "description": "Inference result ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InferenceResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0109001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}/inferenceresults": {
      "get": {
        "tags": [
          "Insight"
        ],
        "summary": "GetInferenceResults",
        "description": "Returns inference results from a specific Edge Device.",
        "operationId": "get_inference_results",
        "parameters": [
          {
            "description": "The Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          },
          {
            "description": "Number of the items to fetch information.\nReturns the most recent records up to the specified number of cases. *Maximum value: 10,000",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20
            },
            "name": "NumberOfInferenceresults",
            "in": "query"
          },
          {
            "description": "Search filter.\n*The specifications are the same except for the CosmosDB UI of the Azure portal and for the differences listed below.\n- There is no need to prepend the \"where\" clause.\n- There is no need to include the deviceID.\n\nExample:\n- Filter by model ID  \n  c.ModelID = \"0201020001790103\"  \n- Filter by Cosmos time stamp  \n  c._ts > 1606897951",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "filter",
            "in": "query"
          },
          {
            "description": "If 1 is specified, the record will be added to CosmosDB and returned.\n- Value definition  \n  0: Do not add  \n  1: Add",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            },
            "name": "raw",
            "in": "query"
          },
          {
            "description": "Extracts the inference result within the following range:\n- Extraction range  \n  (time - threshold) <= T  *Time in inference result metadata < (time + threshold)  \n  * threshold = 5 msec\n\n- Value definition  \n  yyyy: 4-digit year string  \n  MM: 2-digit month string  \n  dd: 2-digit day string  \n  HH: 2-digit hour string  \n  mm: 2-digit minute string  \n  ss: 2-digit second string  \n  fff: 3-digit millisecond string  ",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            },
            "name": "time",
            "in": "query"
          },
          {
            "description": "Specify whether to delete inference result from devices that have been removed from the Console.",
            "name": "include_deleted_device",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Inference result metadata ID.  \n=GUID generated automatically by CosmosDB"
                      },
                      "device_id": {
                        "type": "string",
                        "description": "The Device ID."
                      },
                      "model_id": {
                        "type": "string",
                        "description": "AI model ID."
                      },
                      "version_number": {
                        "type": "string",
                        "description": "Version number."
                      },
                      "model_version_id": {
                        "type": "string",
                        "description": "Model version ID.  "
                      },
                      "model_type": {
                        "type": "string",
                        "description": "Model type.  \n00: Image category  \n01: Object detection"
                      },
                      "training_kit_name": {
                        "type": "string"
                      },
                      "_ts": {
                        "type": "integer",
                        "description": "Time stamp.  \n=_ts of CosmosDB"
                      },
                      "inference_result": {
                        "$ref": "#/components/schemas/InferenceResult"
                      },
                      "inferences": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Inference"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0108001  \n  Invalid parameter NumberOfInferenceresults.  \n- E.SC.API.0108003  \n  Invalid parameter raw.  \n- E.SC.API.0108004  \n  Invalid parameter time.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0108002  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Insight"
        ],
        "summary": "DeleteInferenceResults",
        "description": "Deletes the inference data retrieved through the GetInferenceResults.\n*This API is available for Developer Edition V1.7.0 or later.",
        "operationId": "delete_inference_results",
        "parameters": [
          {
            "name": "device_id",
            "description": "The Device ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "item_ids",
            "description": "The inference result ID of the deletion target obtained from GetInferenceResults.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1,2,3,5"
            }
          },
          {
            "description": "Specify whether to also delete inference results from devices that have been removed from the Console.",
            "name": "include_deleted_device",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "delete items response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0290002  \n  Invalid parameter items_ids.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000006",
                  "message": "Bad request.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000013  \n  Not found.  \n- E.SC.API.0290001\n  Not found."
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000013",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000008",
                  "message": "Invalid parameter.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0290003  \n  Delete {0} failed.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/connector/ir_hub": {
      "put": {
        "tags": [
          "Connector"
        ],
        "summary": "UpdateIRHubConnector",
        "description": "Updates the external transfer settings to forward inference results obtained from Edge Devices to Azure Event Hubs.",
        "operationId": "update_ir_hub_connector",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIRHubConnectorJsonBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0196001  \n  Bad request.  \n- E.SC.API.0196002  \n  Invalid parameter name.  \n- E.SC.API.0196003  \n  Invalid parameter url.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0196004  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/connector/storage": {
      "put": {
        "tags": [
          "Connector"
        ],
        "summary": "UpdateStorageConnector",
        "description": "Updates the storage hub connector. Specify the items (inference results, images, or both) to transfer to a storage service. To change the transmission destination of inference results, please modify the value of UploadMethodIR in the Command parameter. You can store inference results in your cloud storage by setting the value of UploadMethodIR to \"BlobStorage\". Likewise, to revert the transmission to AITRIOS internal storage, set the value of UploadMethodIR to \"Mqtt\".",
        "operationId": "update_storage_connector",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStorageConnectorJsonBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0195002  \n  Invalid parameter endpoint.  \n- E.SC.API.0195003  \n  Invalid parameter connection_string.  \n- E.SC.API.0195004  \n  Invalid parameter mode.  \n- E.SC.API.0195005  \n  Invalid parameter container_name.  \n- E.SC.API.0195007  \n  Invalid parameter type.  \n- E.SC.API.0195008  \n  Invalid parameter endpoint.  \n- E.SC.API.0195009  \n  Invalid parameter region.  \n- E.SC.API.0195010  \n  Invalid parameter bucket_name.  \n- E.SC.API.0195011  \n  Invalid parameter access_key_id.  \n- E.SC.API.0195012  \n  Invalid parameter secret_access_key.  \n- E.SC.API.0195013  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0195001  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0195006  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/files": {
      "post": {
        "tags": [
          "Utility"
        ],
        "summary": "UploadFile",
        "description": "Returns the parameter (file ID) used by the API below. Specify the returned 'file_info.id' as the parameter.\n  - ImportBaseModel",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "type_code": {
                    "description": "File type code.",
                    "type": "string",
                    "enum": [
                      "NonConverted",
                      "Converted",
                      "InputFormatParam",
                      "NetworkConfig",
                      "CustomSetup"
                    ],
                    "example": "NonConverted"
                  },
                  "file": {
                    "description": "File contents.",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "file_info"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "SUCCESS"
                    },
                    "file_info": {
                      "description": "The file info.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The file ID.",
                          "type": "string",
                          "format": "uuid",
                          "example": "10dd852a-a9b5-460a-a2a8-e89657f83c01"
                        },
                        "name": {
                          "description": "The file name.",
                          "type": "string",
                          "example": "object_detection.tflite"
                        },
                        "type_code": {
                          "description": "The file type code.",
                          "type": "string",
                          "enum": [
                            "NonConverted",
                            "Converted",
                            "InputFormatParam",
                            "NetworkConfig",
                            "CustomSetup"
                          ],
                          "example": "NonConverted"
                        },
                        "size": {
                          "description": "The file size.",
                          "type": "integer",
                          "example": 489813
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0199001  \n  Parameter type_code is not set.  \n- E.SC.API.0199002  \n  Invalid parameter type_code.  \n- E.SC.API.0199003  \n  Parameter file is not set.  \n- E.SC.API.0199004  \n  File size over limit.  \n- E.SC.API.0199006  \n  File name too long.  \n- E.SC.API.0199007  \n  Invalid file name.  \n- E.SC.API.0199008  \n  Invalid json format.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0199005  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{device_id}/configuration": {
      "put": {
        "tags": [
          "Device Command"
        ],
        "summary": "SetDeviceConfiguration",
        "description": "Applies the Device Configuration to the specified device. The configuration will be applied to the device asynchronously. To confirm whether the changes have been applied, use the GetDevices or GetDevice API.",
        "operationId": "set_device_configuration",
        "parameters": [
          {
            "description": "The Device ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "device_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetDeviceConfigurationJsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "result": "SUCCESS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000006  \n  Bad request.  \n- E.SC.API.0000012  \n  Device does not support.  \n- E.SC.API.0220002  \n  Unable to connect to device.  \n- E.SC.API.0220004  \n  {0}  \n- E.SC.API.0220005  \n  Bad request.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0091001",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000002  \n  Not signed in.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000002",
                  "message": "Not signed in.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000003  \n  Unauthorized user.  \n- E.SC.API.0000004  \n  Incorrect permissions.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000004",
                  "message": "Incorrect permissions.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0220001  \n  Not found.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0002001",
                  "message": "Not found.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000007  \n  Json format is invalid.  \n- E.SC.API.0000008  \n  Invalid parameter.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000007",
                  "message": "Json format is invalid.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000001  \n  Internal server error.  \n- E.SC.API.0220003  \n  Internal server error.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000001",
                  "message": "Internal server error.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "code",
                    "message",
                    "time"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "ERROR or WARNING."
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the cause or details.  \n[MessageList] *The message for each code is shown below:  \n- E.SC.API.0000005  \n  Service is temporarily unavailable.  "
                    },
                    "time": {
                      "type": "string",
                      "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
                    }
                  }
                },
                "example": {
                  "result": "ERROR",
                  "code": "E.SC.API.0000005",
                  "message": "Service is temporarily unavailable.",
                  "time": "2022-01-01T01:01:01.000001"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SuccessResponse": {
        "type": "object",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "string",
            "description": "SUCCESS"
          }
        }
      },
      "DeploySuccessResponse": {
        "type": "object",
        "required": [
          "result",
          "deploy_id"
        ],
        "properties": {
          "result": {
            "type": "string",
            "description": "SUCCESS"
          },
          "deploy_id": {
            "type": "integer",
            "description": "ID from sc_t_deploy."
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "required": [
          "result",
          "code",
          "message",
          "time"
        ],
        "properties": {
          "result": {
            "type": "string",
            "description": "ERROR or WARNING."
          },
          "code": {
            "type": "string",
            "description": "Error code."
          },
          "message": {
            "type": "string",
            "description": "Error message indicating the cause or details."
          },
          "time": {
            "type": "string",
            "description": "The time the error occurred.* yyyy-MM-ddTHH:mm:ss.SSSSSS."
          }
        }
      },
      "Device": {
        "type": "object",
        "required": [
          "device_id",
          "ins_id",
          "ins_date",
          "upd_id",
          "upd_date",
          "connectionState",
          "lastActivityTime"
        ],
        "properties": {
          "device_id": {
            "type": "string",
            "description": "The Device ID."
          },
          "place": {
            "type": "string",
            "description": "The location."
          },
          "comment": {
            "type": "string",
            "description": "The description of the device."
          },
          "property": {
            "type": "object",
            "required": [
              "device_name",
              "internal_device_id"
            ],
            "properties": {
              "device_name": {
                "type": "string",
                "description": "The device name."
              },
              "internal_device_id": {
                "type": "string",
                "description": "The internal device ID."
              }
            }
          },
          "device_type": {
            "type": "string",
            "description": "The device type."
          },
          "display_device_type": {
            "type": "string",
            "description": "The display device type."
          },
          "ins_id": {
            "type": "string",
            "description": "The subject that registered the device."
          },
          "ins_date": {
            "type": "string",
            "description": "The date the device was created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          },
          "upd_id": {
            "type": "string",
            "description": "The subject that updated the device."
          },
          "upd_date": {
            "type": "string",
            "description": "The date the device was updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          },
          "connectionState": {
            "type": "string",
            "description": "The device connection state."
          },
          "lastActivityTime": {
            "type": "string",
            "description": "The date the device last connected."
          },
          "models": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "model_version_id": {
                  "type": "string",
                  "description": "The model version ID. Format: modelid:v1.01  \n*For models that do not exist in the system, the network_id will be displayed.\n  Example: 000237  "
                }
              }
            }
          },
          "device_groups": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "device_group_id",
                "device_type",
                "ins_id",
                "ins_date",
                "upd_id",
                "upd_date"
              ],
              "properties": {
                "device_group_id": {
                  "type": "string",
                  "description": "The device group ID."
                },
                "device_type": {
                  "type": "string",
                  "description": "The device type."
                },
                "comment": {
                  "type": "string",
                  "description": "The device group comment."
                },
                "ins_id": {
                  "type": "string",
                  "description": "The device group author."
                },
                "ins_date": {
                  "type": "string",
                  "description": "The date the device group was created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                },
                "upd_id": {
                  "type": "string",
                  "description": "The device group updater."
                },
                "upd_date": {
                  "type": "string",
                  "description": "The date the device group was updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                }
              }
            }
          },
          "configuration": {
            "type": "object"
          },
          "state": {
            "type": "object"
          },
          "command_results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "command_name": {
                  "type": "string",
                  "description": "The device command name."
                },
                "result": {
                  "type": "string",
                  "description": "The commnad result."
                },
                "execute_time": {
                  "type": "string",
                  "description": "The command execute time."
                }
              }
            }
          },
          "apps": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The device app name."
                },
                "version": {
                  "type": "string",
                  "description": "The app version."
                },
                "comment": {
                  "type": "string",
                  "description": "The app comment."
                }
              }
            }
          }
        }
      },
      "Devices": {
        "type": "object",
        "required": [
          "device_id",
          "ins_id",
          "ins_date",
          "upd_id",
          "upd_date",
          "connectionState",
          "lastActivityTime"
        ],
        "properties": {
          "device_id": {
            "type": "string",
            "description": "The Device ID."
          },
          "place": {
            "type": "string",
            "description": "The location."
          },
          "comment": {
            "type": "string",
            "description": "The description of the device."
          },
          "property": {
            "type": "object",
            "required": [
              "device_name",
              "internal_device_id"
            ],
            "properties": {
              "device_name": {
                "type": "string",
                "description": "The device name."
              },
              "internal_device_id": {
                "type": "string",
                "description": "The internal device ID."
              }
            }
          },
          "device_type": {
            "type": "string",
            "description": "The device type."
          },
          "display_device_type": {
            "type": "string",
            "description": "The display device type."
          },
          "ins_id": {
            "type": "string",
            "description": "The subject that registered the device."
          },
          "ins_date": {
            "type": "string",
            "description": "The date the device was created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          },
          "upd_id": {
            "type": "string",
            "description": "The subject that updated the device."
          },
          "upd_date": {
            "type": "string",
            "description": "The date the device was updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          },
          "connectionState": {
            "type": "string",
            "description": "The device connection state."
          },
          "lastActivityTime": {
            "type": "string",
            "description": "The date the device last connected."
          },
          "models": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "model_version_id": {
                  "type": "string",
                  "description": "The model version ID. Format: modelid:v1.01  \n*For model that does not exist in the system, display network_id  \n  Example: 000237  "
                }
              }
            }
          },
          "configuration": {
            "type": "object"
          },
          "state": {
            "type": "object"
          },
          "device_groups": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "device_group_id",
                "device_type",
                "ins_id",
                "ins_date",
                "upd_id",
                "upd_date"
              ],
              "properties": {
                "device_group_id": {
                  "type": "string",
                  "description": "The device group ID."
                },
                "device_type": {
                  "type": "string",
                  "description": "The device type."
                },
                "comment": {
                  "type": "string",
                  "description": "The device group comment."
                },
                "ins_id": {
                  "type": "string",
                  "description": "The device group author."
                },
                "ins_date": {
                  "type": "string",
                  "description": "The date the device group was created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                },
                "upd_id": {
                  "type": "string",
                  "description": "The device group updater."
                },
                "upd_date": {
                  "type": "string",
                  "description": "The date the device group was updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                }
              }
            }
          }
        }
      },
      "EventLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The event ID."
          },
          "DeviceID": {
            "type": "string",
            "description": "The device ID.  "
          },
          "Level": {
            "type": "string",
            "description": "The log level.  \n  Example: Warn, Error  "
          },
          "Component": {
            "type": "string",
            "description": "The event component code.  "
          },
          "ErrorCode": {
            "type": "string",
            "description": "Error code.  "
          },
          "Description": {
            "type": "string",
            "description": "The description.  "
          },
          "Time": {
            "type": "string",
            "description": "The event time.  "
          },
          "ingestion_time": {
            "type": "string",
            "description": "The event log time ingested in system."
          }
        }
      },
      "VafeLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The log ID."
          },
          "log": {
            "type": "string",
            "description": "The log message."
          },
          "app": {
            "type": "string",
            "description": "The app instance name."
          },
          "stream": {
            "type": "string",
            "description": "The stream type."
          },
          "time": {
            "type": "string",
            "description": "The log time."
          },
          "ingestion_time": {
            "type": "string",
            "description": "The log time ingested in system."
          }
        }
      },
      "DeviceCertificate": {
        "type": "object",
        "properties": {
          "device_id": {
            "type": "string",
            "description": "The Device ID."
          },
          "internal_device_id": {
            "type": "string",
            "description": "The internal device ID."
          },
          "device_name": {
            "type": "string",
            "description": "The device name."
          },
          "credentials_id_object": {
            "type": "string",
            "description": "The credentials id object."
          },
          "credentials_type": {
            "type": "string",
            "description": "The credentials type."
          },
          "expiration_date": {
            "type": "string",
            "description": "The expiration date."
          },
          "created_time": {
            "type": "string",
            "description": "The created time."
          }
        }
      },
      "Inference": {
        "type": "object",
        "properties": {
          "T": {
            "type": "string",
            "description": "Time when retrieving data from the sensor."
          },
          "O": {
            "type": "string",
            "description": "Output tensor (Encoding format)."
          }
        }
      },
      "InferenceResult": {
        "type": "object",
        "properties": {
          "DeviceID": {
            "type": "string",
            "description": "The Device ID."
          },
          "ModelID": {
            "type": "string",
            "description": "DnnModelVersion."
          },
          "Image": {
            "type": "boolean",
            "description": "Synchronized to the InputTensor output."
          },
          "Inferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Inference"
            }
          },
          "id": {
            "type": "string"
          },
          "project_id": {
            "type": "string"
          },
          "_ts": {
            "type": "integer"
          }
        }
      },
      "DeviceGroup": {
        "type": "object",
        "properties": {
          "device_group_id": {
            "type": "string",
            "description": "The device group ID."
          },
          "device_type": {
            "type": "string",
            "description": "The device type."
          },
          "comment": {
            "type": "string",
            "description": "The device group comment."
          },
          "ins_id": {
            "type": "string",
            "description": "The device group author."
          },
          "ins_date": {
            "type": "string",
            "description": "The date the device group was created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          },
          "upd_id": {
            "type": "string",
            "description": "The device group updater."
          },
          "upd_date": {
            "type": "string",
            "description": "The date the device group was updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          },
          "devices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "device_id": {
                  "type": "string",
                  "description": "The Device ID."
                },
                "property": {
                  "type": "object",
                  "required": [
                    "device_name",
                    "internal_device_id"
                  ],
                  "properties": {
                    "device_name": {
                      "type": "string",
                      "description": "The device name."
                    },
                    "internal_device_id": {
                      "type": "string",
                      "description": "The internal device ID."
                    }
                  }
                },
                "device_type": {
                  "type": "string",
                  "description": "The device type."
                },
                "display_device_type": {
                  "type": "string",
                  "description": "The display device type."
                },
                "place": {
                  "type": "string",
                  "description": "The location."
                },
                "comment": {
                  "type": "string",
                  "description": "The device comment."
                },
                "ins_id": {
                  "type": "string",
                  "description": "The subject that registered the device."
                },
                "ins_date": {
                  "type": "string",
                  "description": "The date the device was created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                },
                "upd_id": {
                  "type": "string",
                  "description": "The subject that updated the device."
                },
                "upd_date": {
                  "type": "string",
                  "description": "The date the device was updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                }
              }
            }
          }
        }
      },
      "DeviceApp": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The application name."
          },
          "create_by": {
            "type": "string",
            "description": "Information on the creator.\n- Value definition  \n  Self: Self-training models\n  Marketplace: Marketplace purchasing model\n"
          },
          "package_id": {
            "type": "string",
            "description": "The marketplace package ID."
          },
          "product_id": {
            "type": "string",
            "description": "The marketplace product ID."
          },
          "schema_info": {
            "type": "object",
            "description": "Schema info.",
            "properties": {
              "VnSAppId": {
                "type": "string",
                "description": "The VnS app ID."
              },
              "version": {
                "type": "string",
                "description": "The application version number."
              },
              "interfaces": {
                "type": "object",
                "description": "The metadata format IDs.",
                "properties": {
                  "in": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "metadataFormatId": {
                          "type": "string",
                          "description": "The metadata format ID."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "versions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "The application version number."
                },
                "compiled_flg": {
                  "type": "string",
                  "description": "Compilation status (flag) of the target application.\n- Value definition  \n  0 : Not compiled\n  1 : Compiled\n"
                },
                "status": {
                  "type": "string",
                  "description": "The status.  \n- Value definition  \n  0: Before compilation  \n  1: Compiling\n  2: Successfully completed\n  3: Failed\n"
                },
                "comment": {
                  "type": "string",
                  "description": "The description of the subject."
                },
                "deploy_count": {
                  "type": "object",
                  "description": "The deploy count."
                },
                "ins_id": {
                  "type": "string",
                  "description": "The subject that configured the feature."
                },
                "ins_date": {
                  "type": "string",
                  "description": "The date the settings were created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                },
                "upd_id": {
                  "type": "string",
                  "description": "The subject that updated the settings."
                },
                "upd_date": {
                  "type": "string",
                  "description": "The date the settings were updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                }
              }
            }
          }
        }
      },
      "DeviceAppDeployHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The deploy ID."
          },
          "total_status": {
            "type": "string",
            "description": "The total status.\n- Value definition\n  0: Running\n  1: Successfully completed\n  2: Failed\n  3: Canceled\n  9: Undeploy\n"
          },
          "deploy_parameter": {
            "type": "string",
            "description": "The deploy parameter."
          },
          "devices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "device_id": {
                  "type": "string",
                  "description": "The Device ID."
                },
                "status": {
                  "type": "string",
                  "description": "The total status.\n- Value definition\n  0: Running\n  1: Successfully completed\n  2: Failed\n  3: Canceled\n"
                },
                "latest_deployment_flg": {
                  "type": "string",
                  "description": "The deployment flg.\n- Value definition\n  0: Old deployment history\n  1: Recent deployment history\n"
                },
                "ins_id": {
                  "type": "string",
                  "description": "The subject that configured the feature."
                },
                "ins_date": {
                  "type": "string",
                  "description": "The date the settings were created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                },
                "upd_id": {
                  "type": "string",
                  "description": "The subject that updated the settings."
                },
                "upd_date": {
                  "type": "string",
                  "description": "The date the settings were updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                }
              }
            }
          }
        }
      },
      "Firmware": {
        "type": "object",
        "properties": {
          "firmware_id": {
            "type": "string",
            "description": "The firmware ID returned in the response from the GetFirmwares API."
          },
          "firmware_type": {
            "type": "string",
            "description": "Type of the Edge System Software."
          },
          "comment": {
            "type": "string",
            "description": "Description of the Edge System Software."
          },
          "ins_id": {
            "type": "string",
            "description": "The subject that registered the Edge System Software."
          },
          "ins_date": {
            "type": "string",
            "description": "The date the Edge System Software was created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          },
          "upd_id": {
            "type": "string",
            "description": "The subject that updated the Edge System Software."
          },
          "upd_date": {
            "type": "string",
            "description": "The date the Edge System Software was updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          },
          "versions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "file_name": {
                  "type": "string",
                  "description": "The Edge System Software filename."
                },
                "version_number": {
                  "type": "string",
                  "description": "The Edge System Software version."
                },
                "ppl": {
                  "type": "string",
                  "description": "The ppl information."
                },
                "stored_type": {
                  "type": "string",
                  "description": "The storage location type."
                },
                "stored_uri": {
                  "type": "string",
                  "description": "The storage location URI."
                },
                "comment": {
                  "type": "string",
                  "description": "Description of the Edge System Software."
                },
                "ins_id": {
                  "type": "string",
                  "description": "The subject that registered the Edge System Software."
                },
                "ins_date": {
                  "type": "string",
                  "description": "The date the Edge System Software was created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                },
                "upd_id": {
                  "type": "string",
                  "description": "The subject that updated the Edge System Software."
                },
                "upd_date": {
                  "type": "string",
                  "description": "The date the Edge System Software was updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
                }
              }
            }
          }
        }
      },
      "BindCommandParameterFileToDeviceJsonBody": {
        "required": [
          "device_ids"
        ],
        "type": "object",
        "properties": {
          "device_ids": {
            "type": "string",
            "description": "To specify multiple device IDs, separate them with commas."
          }
        },
        "description": "BindCommandParameterFileToDevice Json Body"
      },
      "UnbindCommandParameterFileJsonBody": {
        "required": [
          "device_ids"
        ],
        "type": "object",
        "properties": {
          "device_ids": {
            "type": "string",
            "description": "To specify multiple device IDs, separate them with commas."
          }
        },
        "description": "UnbindCommandParameterFileJsonBody Json Body"
      },
      "ChangePasswordJsonBody": {
        "required": [
          "password"
        ],
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "Plaintext with a maximum of 32 characters allowed."
          }
        },
        "description": "ChangePassword API json_body"
      },
      "CreateFirmwareJsonBody": {
        "required": [
          "firmware_type",
          "version_number",
          "file_name",
          "file_content"
        ],
        "type": "object",
        "properties": {
          "firmware_type": {
            "type": "string",
            "description": "Type and ID of the Edge System Software.\n- Value definition  \n  00: Main Chip Firmware  \n  01: Sensor Chip Firmware (main) \n  02: Chip Firmware (loader)  "
          },
          "version_number": {
            "type": "string",
            "description": "The version number."
          },
          "comment": {
            "type": "string",
            "description": "Description. *The maximum number of characters that can be specified is 100.",
            "default": ""
          },
          "file_name": {
            "type": "string",
            "description": "The Edge System Software filename."
          },
          "file_content": {
            "type": "string",
            "description": "Firmware File in base64 encoding."
          }
        },
        "description": "CreateFirmware API model"
      },
      "DeployDeviceAppJsonBody": {
        "required": [
          "app_name",
          "version_number",
          "device_ids"
        ],
        "type": "object",
        "properties": {
          "app_name": {
            "type": "string",
            "description": "The application name."
          },
          "version_number": {
            "type": "string",
            "description": "The application version."
          },
          "device_ids": {
            "type": "string",
            "description": "To specify multiple device IDs, separate them with commas."
          },
          "comment": {
            "type": "string",
            "description": "Description of the subject. *The maximum number of characters that can be specified is 100."
          }
        },
        "description": "DeployDeviceApp Json Body"
      },
      "EnrollDeviceJsonBody": {
        "required": [
          "device_name",
          "primary_certificate"
        ],
        "type": "object",
        "properties": {
          "device_name": {
            "type": "string",
            "description": "The device name.\n*The maximum number of characters that can be specified is 255."
          },
          "primary_certificate": {
            "type": "string",
            "description": "X.509 primary certificate (.pem file or .cer file or .crt file) .\n*Specify the following certificate without the leading and trailing signatures. \n\n-----BEGIN CERTIFICATE-----  \n\n-----END CERTIFICATE-----\n\n Also, do not include line breaks. "
          }
        },
        "description": "EnrollDevice Json Body"
      },
      "ImportDeviceAppJsonBody": {
        "required": [
          "compiled_flg",
          "app_name",
          "version_number",
          "file_name",
          "file_content"
        ],
        "type": "object",
        "properties": {
          "compiled_flg": {
            "type": "string",
            "description": "Compilation status (flag) of the target application.\n- Value definition  \n  0 : Not compiled\n  1 : Compiled\n"
          },
          "entry_point": {
            "type": "string",
            "description": "App entry point.",
            "default": "ppl"
          },
          "app_name": {
            "type": "string",
            "description": "App name.  \n*Allow only the following characters.  \n Alphanumeric characters  \n Under bar  \n Dot  \n*The maximum number of characters is app_name + version_number <=31."
          },
          "version_number": {
            "type": "string",
            "description": "App version number.  \n*Allow only the following characters.  \n Alphanumeric characters  \n Under bar  \n Dot  \n*The maximum number of characters is app_name + version_number <=31."
          },
          "comment": {
            "type": "string",
            "description": "Description of the subject. *The maximum number of characters that can be specified is 100."
          },
          "file_name": {
            "type": "string",
            "description": "Name of the subject file."
          },
          "file_content": {
            "type": "string",
            "description": "App file content in base64 encoding."
          },
          "schema_info": {
            "type": "object",
            "description": "Schema info.",
            "properties": {
              "interfaces": {
                "type": "object",
                "description": "The metadata format IDs.",
                "properties": {
                  "in": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "metadataFormatId": {
                          "type": "string",
                          "description": "The metadata format ID."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "ImportDeviceApp Json Body"
      },
      "RegistCommandParameterFileBody": {
        "required": [
          "file_name",
          "parameter"
        ],
        "type": "object",
        "properties": {
          "file_name": {
            "type": "string",
            "description": "File name. The maximum number of characters that can be specified is 100.  "
          },
          "parameter": {
            "type": "string",
            "description": "Command parameter content in Base64 encoding. Refer to the Console User Manual for detailed format instructions."
          },
          "comment": {
            "type": "string",
            "description": "Description of the subject."
          }
        },
        "description": "RegistCommandParameterFile Json Body"
      },
      "UpdateCommandParameterFileBody": {
        "required": [
          "parameter"
        ],
        "type": "object",
        "properties": {
          "parameter": {
            "type": "string",
            "description": "Command parameter content in Base64 encoding. Refer to the Console User Manual for detailed format instructions."
          },
          "comment": {
            "type": "string",
            "description": "Description of the subject."
          }
        },
        "description": "UpdateCommandParameterFile Json Body"
      },
      "UpdateDeviceCertificateJsonBody": {
        "required": [
          "primary_certificate"
        ],
        "type": "object",
        "properties": {
          "primary_certificate": {
            "type": "string",
            "description": "Device certificate  X.509 primary certificate  \n(.pem file or .cer file)  \n\n*Specify the following certificate without the leading and trailing signatures  \n\n-----BEGIN CERTIFICATE-----  \n\n-----END CERTIFICATE-----  \n\n Also, do not include line breaks. "
          }
        },
        "description": "UpdateDeviceCertificate Json Body"
      },
      "ImportBaseModelJsonBody": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/InputFileOfImportBaseModelJsonBody",
            "description": "ImportBaseModel Json Body"
          },
          {
            "type": "object",
            "required": [
              "model_id"
            ],
            "properties": {
              "model_id": {
                "type": "string",
                "description": "Model ID for new registration or version upgrade. The maximum number of characters that can be specified is 100."
              },
              "converted": {
                "type": "boolean",
                "default": false,
                "description": "Specify whether to convert the specified model file."
              },
              "vendor_name": {
                "type": "string",
                "description": "Vendor Name. The maximum number of characters that can be specified is 100.  \n*Specify only when registering a new base model."
              },
              "comment": {
                "type": "string",
                "description": "Description. The maximum number of characters that can be specified is 100.  \n*When saving new, it is set as a description of the model and version.  \n*When saving version-up, it is set as a description of the version.  "
              },
              "network_type": {
                "type": "string",
                "default": "1",
                "description": "Specify whether or not application is required for the model.  \n- Value definition  \n  0 : Model required application  \n  1 : Model do not required application  "
              },
              "metadata_format_id": {
                "type": "string",
                "description": "Metadata Format ID. The maximum number of characters that can be specified is 100."
              }
            }
          }
        ]
      },
      "input_model_url": {
        "type": "object",
        "required": [
          "model"
        ],
        "properties": {
          "model": {
            "type": "string",
            "description": "SAS URI or Presigned URI of the model file."
          },
          "input_format_param": {
            "type": "string",
            "description": "SAS URI or Presigned URI of the input format param file.  \n*Usage: Packager conversion information (image format information).  \n*The json format is an array of objects. Each object contains the following values.  \n&nbsp;・ordinal: Order of DNN input to converter (value range: 0 to 2)  \n&nbsp;・format: Format (\"RGB\" or \"BGR\")  \n*Example:  \n&nbsp;[{  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"ordinal\": 0,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"format\": \"RGB\"  \n&nbsp;},  \n&nbsp;{  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"ordinal\": 1,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"format\": \"RGB\"  \n&nbsp;}]  "
          },
          "network_config": {
            "type": "string",
            "description": "SAS URI or Presigned URI of the network config file.  \n*Usage: Conversion parameter information of model converter. Therefore, it is not necessary to specify when specifying the model before conversion.  \n*Example:  \n&nbsp;{  \n&nbsp;&nbsp;&nbsp;\"Postprocessor\": {  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"params\": {  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"background\": false,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"scale_factors\": [  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.0,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.0,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.0,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.0  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;],  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"score_thresh\": 0.01,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"max_size_per_class\": 64,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"max_total_size\": 64,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"clip_window\": [  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;],  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"iou_threshold\": 0.45  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}  \n&nbsp;&nbsp;&nbsp;}  \n&nbsp;}  "
          }
        }
      },
      "file_id": {
        "type": "object",
        "required": [
          "model_file_id"
        ],
        "properties": {
          "model_file_id": {
            "type": "string",
            "description": "file ID of the model file."
          },
          "input_format_param_file_id": {
            "type": "string",
            "description": "file ID of the input format param file."
          },
          "network_config_file_id": {
            "type": "string",
            "description": "file ID of the network config file."
          }
        }
      },
      "InputFileOfImportBaseModelJsonBody": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/input_model_url"
          },
          {
            "$ref": "#/components/schemas/file_id"
          }
        ]
      },
      "CreateProjectImageRegionsJsonBody": {
        "type": "object",
        "properties": {
          "regions": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "image_id"
              ],
              "properties": {
                "image_id": {
                  "type": "string",
                  "description": "Image id."
                },
                "tag_id": {
                  "type": "string",
                  "description": "Tag Id. *Specify when assigning an existing tag."
                },
                "tag_name": {
                  "type": "string",
                  "description": "Tag Name. *Specify when assigning a new tag"
                },
                "left": {
                  "type": "number",
                  "description": "Left of the region (ratio of image size). *Available only for object detection."
                },
                "top": {
                  "type": "number",
                  "description": "Top of the region (ratio of image size). *Available only for object detection."
                },
                "width": {
                  "type": "number",
                  "description": "Width of the region (ratio of image size). *Available only for object detection."
                },
                "height": {
                  "type": "number",
                  "description": "Height of the region (ratio of image size). *Available only for object detection."
                }
              }
            }
          }
        },
        "description": "CreateProjectImageRegions JsonBody."
      },
      "UpdateProjectImageRegionsJsonBody": {
        "type": "object",
        "properties": {
          "regions": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "image_id"
              ],
              "properties": {
                "image_id": {
                  "type": "string",
                  "description": "Image id."
                },
                "tag_id": {
                  "type": "string",
                  "description": "Tag Id. *Specify when assigning an existing tag."
                },
                "tag_name": {
                  "type": "string",
                  "description": "Tag Name. *Specify when assigning a new tag"
                },
                "left": {
                  "type": "number",
                  "description": "Left of the region (ratio of image size). *Available only for object detection."
                },
                "top": {
                  "type": "number",
                  "description": "Top of the region (ratio of image size). *Available only for object detection."
                },
                "width": {
                  "type": "number",
                  "description": "Width of the region (ratio of image size). *Available only for object detection."
                },
                "height": {
                  "type": "number",
                  "description": "Height of the region (ratio of image size). *Available only for object detection."
                }
              }
            }
          }
        },
        "description": "UpdateProjectImageRegions JsonBody."
      },
      "UpdateProjectTagJsonBody": {
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name."
          },
          "description": {
            "type": "string",
            "description": "Description of the subject."
          },
          "type": {
            "type": "string",
            "description": "Type. *Specify Regular as fixed."
          }
        },
        "description": "UpdateProjectTag JsonBody."
      },
      "ImportImagesFromFilesJsonBody": {
        "required": [
          "images"
        ],
        "type": "object",
        "properties": {
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "file_name": {
                  "type": "string",
                  "description": "The filename."
                },
                "contents": {
                  "type": "string",
                  "description": "The image file (base64 encoding)."
                }
              }
            }
          },
          "tags_name": {
            "type": "array",
            "items": {},
            "description": "The label *Specify for classification. Supports only 1 tag.",
            "default": []
          }
        },
        "description": "ImportImagesFromFiles JsonBody."
      },
      "ImportImagesFromScblobJsonBody": {
        "required": [
          "container_url"
        ],
        "type": "object",
        "properties": {
          "container_url": {
            "type": "string",
            "description": "The SAS URI of Blob Storage Container. *Read and List permissions required"
          },
          "tags_name": {
            "type": "array",
            "items": {},
            "description": "The label *Specify for classification. Supports only 1 tag.",
            "default": []
          }
        },
        "description": "ImportImagesFromScblob JsonBody."
      },
      "UpdateBaseModelVersionJsonBody": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Description of version. The maximum number of characters that can be specified is 100.  "
          },
          "input_format_param": {
            "type": "string",
            "description": "SAS URI or Presigned URI of the input format param file.  \n*Usage: Packager conversion information (image format information).  \n*The json format is an array of objects. Each object contains the following values.  \n&nbsp;・ordinal: Order of DNN input to converter (value range: 0 to 2)  \n&nbsp;・format: Format (\"RGB\" or \"BGR\")  \n*Example:  \n&nbsp;[{  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"ordinal\": 0,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"format\": \"RGB\"  \n&nbsp;},  \n&nbsp;{  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"ordinal\": 1,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"format\": \"RGB\"  \n&nbsp;}]  "
          },
          "network_config": {
            "type": "string",
            "description": "SAS URI or Presigned URI of the network config file.  \n*Usage: Conversion parameter information of model converter. Therefore, it is not necessary to specify when specifying the model before conversion.  \n*Example:  \n&nbsp;{  \n&nbsp;&nbsp;&nbsp;\"Postprocessor\": {  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"params\": {  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"background\": false,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"scale_factors\": [  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.0,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.0,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.0,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.0  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;],  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"score_thresh\": 0.01,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"max_size_per_class\": 64,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"max_total_size\": 64,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"clip_window\": [  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1,  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;],  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"iou_threshold\": 0.45  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}  \n&nbsp;&nbsp;&nbsp;}  \n&nbsp;}  "
          }
        },
        "description": "UpdateBaseModelVersion JsonBody."
      },
      "UpdateDeviceModelVersionJsonBody": {
        "required": [
          "comment"
        ],
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Description of version."
          }
        },
        "description": "UpdateDeviceModelVersion JsonBody."
      },
      "Model": {
        "type": "object",
        "properties": {
          "model_id": {
            "type": "string",
            "description": "The model ID."
          },
          "model_type": {
            "type": "string",
            "description": "The model type."
          },
          "functionality": {
            "type": "string",
            "description": "The function descriptions."
          },
          "vendor_name": {
            "type": "string",
            "description": "The vendor name."
          },
          "model_comment": {
            "type": "string",
            "description": "The description of the subject."
          },
          "network_type": {
            "type": "string",
            "description": "The network type."
          },
          "create_by": {
            "type": "string",
            "description": "Information on the creator.\n- Value definition  \n  Self: Self-training models\n  Marketplace: Marketplace purchasing model\n"
          },
          "package_id": {
            "type": "string",
            "description": "The marketplace package ID."
          },
          "product_id": {
            "type": "string",
            "description": "The marketplace product ID."
          },
          "metadata_format_id": {
            "type": "string",
            "description": "The metadata_format_id."
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModelProjectOfModel"
            }
          }
        }
      },
      "ModelInfo": {
        "type": "object",
        "properties": {
          "model_id": {
            "type": "string",
            "description": "The model ID."
          },
          "model_type": {
            "type": "string",
            "description": "The model type."
          },
          "functionality": {
            "type": "string",
            "description": "The function descriptions."
          },
          "vendor_name": {
            "type": "string",
            "description": "The vendor name."
          },
          "model_comment": {
            "type": "string",
            "description": "The description of the subject."
          },
          "network_type": {
            "type": "string",
            "description": "The network type."
          },
          "create_by": {
            "type": "string",
            "description": "Information on the creator.\n- Value definition  \n  Self: Self-training models\n  Marketplace: Marketplace purchasing model\n"
          },
          "package_id": {
            "type": "string",
            "description": "The marketplace package ID."
          },
          "product_id": {
            "type": "string",
            "description": "The marketplace product ID."
          },
          "metadata_format_id": {
            "type": "string",
            "description": "The metadata_format_id."
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModelProjectOfModelInfo"
            }
          }
        }
      },
      "ModelProjectOfModel": {
        "type": "object",
        "properties": {
          "model_project_name": {
            "type": "string",
            "description": "The model project name."
          },
          "model_project_id": {
            "type": "string",
            "description": "The model project ID."
          },
          "model_platform": {
            "type": "string",
            "description": "The model platform."
          },
          "model_type": {
            "type": "string",
            "description": "The model type."
          },
          "project_type": {
            "type": "string",
            "description": "The project type."
          },
          "device_id": {
            "type": "string",
            "description": "The device ID."
          },
          "versions": {
            "type": "array",
            "description": "There must be one subordinate element for this API.",
            "items": {
              "$ref": "#/components/schemas/ModelVersion"
            }
          }
        }
      },
      "ModelProjectOfModelInfo": {
        "type": "object",
        "properties": {
          "model_project_name": {
            "type": "string",
            "description": "The model project name."
          },
          "model_project_id": {
            "type": "string",
            "description": "The model project ID."
          },
          "model_platform": {
            "type": "string",
            "description": "The model platform."
          },
          "model_type": {
            "type": "string",
            "description": "The model type."
          },
          "project_type": {
            "type": "string",
            "description": "The project type."
          },
          "device_id": {
            "type": "string",
            "description": "The device ID."
          },
          "versions": {
            "type": "array",
            "description": "There must be one subordinate element for this API.",
            "items": {
              "$ref": "#/components/schemas/ModelVersionInfo"
            }
          }
        }
      },
      "ModelVersion": {
        "type": "object",
        "properties": {
          "version_number": {
            "type": "string",
            "description": "The Edge System Software version."
          },
          "iteration_id": {
            "type": "string",
            "description": "The iteration ID."
          },
          "iteration_name": {
            "type": "string",
            "description": "The iteration name."
          },
          "accuracy": {
            "type": "string",
            "description": "The accuracy."
          },
          "model_performances": {
            "type": "object",
            "description": "The performance information of the AI model."
          },
          "latest_flg": {
            "type": "string",
            "description": "The latest flag."
          },
          "publish_latest_flg": {
            "type": "string",
            "description": "The latest published flag."
          },
          "version_status": {
            "type": "string",
            "description": "The status."
          },
          "org_file_name": {
            "type": "string",
            "description": "The pre-conversion model filename."
          },
          "org_file_size": {
            "type": "integer",
            "description": "The publish model file size."
          },
          "publish_file_name": {
            "type": "string",
            "description": "The publish model filename."
          },
          "publish_file_size": {
            "type": "integer",
            "description": "The publish model file size."
          },
          "model_file_size": {
            "type": "integer",
            "description": "The publish model file size."
          },
          "model_framework": {
            "type": "string",
            "description": "The model framework."
          },
          "conv_id": {
            "type": "string",
            "description": "The conversion request ID."
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The label array."
          },
          "stage": {
            "type": "string",
            "description": "The conversion stage."
          },
          "result": {
            "type": "string",
            "description": "The conversion result."
          },
          "kpi": {
            "type": "object"
          }
        }
      },
      "ModelVersionInfo": {
        "type": "object",
        "properties": {
          "version_number": {
            "type": "string",
            "description": "The Edge System Software version."
          },
          "iteration_id": {
            "type": "string",
            "description": "The iteration ID."
          },
          "iteration_name": {
            "type": "string",
            "description": "The iteration name."
          },
          "accuracy": {
            "type": "string",
            "description": "The accuracy."
          },
          "model_performances": {
            "type": "object",
            "description": "The performance information of the AI model."
          },
          "latest_flg": {
            "type": "string",
            "description": "The latest flag."
          },
          "publish_latest_flg": {
            "type": "string",
            "description": "The latest published flag."
          },
          "version_status": {
            "type": "string",
            "description": "The status."
          },
          "org_file_name": {
            "type": "string",
            "description": "The pre-conversion model filename."
          },
          "org_file_size": {
            "type": "integer",
            "description": "The publish model file size."
          },
          "publish_file_name": {
            "type": "string",
            "description": "The publish model filename."
          },
          "publish_file_size": {
            "type": "integer",
            "description": "The publish model file size."
          },
          "model_file_size": {
            "type": "integer",
            "description": "The publish model file size."
          },
          "model_framework": {
            "type": "string",
            "description": "The model framework."
          },
          "conv_id": {
            "type": "string",
            "description": "The conversion request ID."
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The label array."
          },
          "stage": {
            "type": "string",
            "description": "The conversion stage."
          },
          "result": {
            "type": "string",
            "description": "The conversion result."
          },
          "kpi": {
            "type": "object"
          },
          "converter_log": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "converter log."
          },
          "convert_start_date": {
            "type": "string",
            "description": "The conversion start date."
          },
          "convert_end_date": {
            "type": "string",
            "description": "The conversion end date."
          },
          "publish_start_date": {
            "type": "string",
            "description": "The publish start date."
          },
          "publish_end_date": {
            "type": "string",
            "description": "The publish end date."
          },
          "version_comment": {
            "type": "string",
            "description": "The description of the subject."
          },
          "version_ins_date": {
            "type": "string",
            "description": "The created time of the version."
          },
          "version_upd_date": {
            "type": "string",
            "description": "The created time of the version."
          }
        }
      },
      "ModelVersionJsonBody": {
        "type": "object",
        "properties": {
          "version_number": {
            "type": "string",
            "description": "The Edge System Software version."
          },
          "iteration_id": {
            "type": "string",
            "description": "The iteration ID."
          },
          "iteration_name": {
            "type": "string",
            "description": "The iteration name."
          },
          "accuracy": {
            "type": "string",
            "description": "The accuracy."
          },
          "model_performances": {
            "type": "object",
            "description": "The performance information of the AI model."
          },
          "latest_flg": {
            "type": "string",
            "description": "The latest flag."
          },
          "publish_latest_flg": {
            "type": "string",
            "description": "The latest published flag."
          },
          "version_status": {
            "type": "string",
            "description": "The status."
          },
          "org_file_name": {
            "type": "string",
            "description": "The pre-conversion model filename."
          },
          "org_file_size": {
            "type": "integer",
            "description": "The publish model file size."
          },
          "publish_file_name": {
            "type": "string",
            "description": "The publish model filename."
          },
          "publish_file_size": {
            "type": "integer",
            "description": "The publish model file size."
          },
          "model_file_size": {
            "type": "integer",
            "description": "The publish model file size."
          },
          "model_framework": {
            "type": "string",
            "description": "The model framework."
          },
          "conv_id": {
            "type": "string",
            "description": "The conversion request ID."
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The label array."
          },
          "stage": {
            "type": "string",
            "description": "The conversion stage."
          },
          "result": {
            "type": "string",
            "description": "The conversion result."
          },
          "kpi": {
            "type": "object"
          },
          "converter_log": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "converter log."
          },
          "convert_start_date": {
            "type": "string",
            "description": "The conversion start date."
          },
          "convert_end_date": {
            "type": "string",
            "description": "The conversion end date."
          },
          "publish_start_date": {
            "type": "string",
            "description": "The publish start date."
          },
          "publish_end_date": {
            "type": "string",
            "description": "The publish end date."
          },
          "version_comment": {
            "type": "string",
            "description": "The description of the subject."
          },
          "version_ins_date": {
            "type": "string",
            "description": "The created time of the version."
          },
          "version_upd_date": {
            "type": "string",
            "description": "The created time of the version."
          }
        }
      },
      "ModelProject": {
        "type": "object",
        "required": [
          "model_project_name",
          "model_project_id"
        ],
        "properties": {
          "model_project_name": {
            "type": "string",
            "description": "The model project name."
          },
          "model_project_id": {
            "type": "string",
            "description": "The model project ID."
          },
          "model_platform": {
            "type": "string",
            "description": "The model platform."
          },
          "model_type": {
            "type": "string",
            "description": "The model type."
          },
          "project_type": {
            "type": "string",
            "description": "The project type."
          },
          "device_id": {
            "type": "string",
            "description": "The model device id."
          },
          "project_model_file_name": {
            "type": "string",
            "description": "The project model filename."
          },
          "project_model_accuracy": {
            "type": "string",
            "description": "The project model accuracy."
          },
          "project_comment": {
            "type": "string",
            "description": "The project comment."
          },
          "project": {
            "type": "object",
            "properties": {
              "training_kit_id": {
                "type": "string",
                "description": "The training kit id."
              },
              "training_kit_name": {
                "type": "string",
                "description": "The training kit name."
              },
              "description": {
                "type": "string",
                "description": "The description of the subject."
              },
              "iteration_id": {
                "type": "string",
                "description": "The iteration id."
              },
              "iteration_name": {
                "type": "string",
                "description": "The iteration name."
              },
              "last_modified": {
                "type": "string",
                "description": "The last modified."
              }
            }
          },
          "model": {
            "type": "object",
            "properties": {
              "model_id": {
                "type": "string",
                "description": "The model ID."
              },
              "model_type": {
                "type": "string",
                "description": "The device type."
              },
              "functionality": {
                "type": "string",
                "description": "The function descriptions."
              },
              "vendor_name": {
                "type": "string",
                "description": "The vendor name."
              },
              "model_comment": {
                "type": "string",
                "description": "The description of the subject."
              },
              "create_by": {
                "type": "string",
                "description": "Information on the creator.\n- Value definition  \n  Self: Self-training models\n  Marketplace: Marketplace purchasing model\n"
              },
              "package_id": {
                "type": "string",
                "description": "The marketplace package ID."
              },
              "product_id": {
                "type": "string",
                "description": "The marketplace product ID."
              },
              "metadata_format_id": {
                "type": "string",
                "description": "The metadata_format_id."
              },
              "latest_version": {
                "$ref": "#/components/schemas/ModelVersion"
              }
            }
          }
        }
      },
      "ModelProjectInfo": {
        "type": "object",
        "required": [
          "model_project_name",
          "model_project_id"
        ],
        "properties": {
          "model_project_name": {
            "type": "string",
            "description": "The model project name."
          },
          "model_project_id": {
            "type": "string",
            "description": "The model project ID."
          },
          "model_platform": {
            "type": "string",
            "description": "The model platform."
          },
          "model_type": {
            "type": "string",
            "description": "The model type."
          },
          "project_type": {
            "type": "string",
            "description": "The project type."
          },
          "device_id": {
            "type": "string",
            "description": "The model device id."
          },
          "project_model_file_name": {
            "type": "string",
            "description": "The project model filename."
          },
          "project_model_accuracy": {
            "type": "string",
            "description": "The project model accuracy."
          },
          "project_comment": {
            "type": "string",
            "description": "The project comment."
          },
          "project": {
            "type": "object",
            "properties": {
              "training_kit_id": {
                "type": "string",
                "description": "The training kit id."
              },
              "training_kit_name": {
                "type": "string",
                "description": "The training kit name."
              },
              "description": {
                "type": "string",
                "description": "The description of the subject."
              },
              "iteration_id": {
                "type": "string",
                "description": "The iteration id."
              },
              "iteration_name": {
                "type": "string",
                "description": "The iteration name."
              },
              "last_modified": {
                "type": "string",
                "description": "The last modified."
              }
            }
          },
          "model": {
            "type": "object",
            "properties": {
              "model_id": {
                "type": "string",
                "description": "The model ID."
              },
              "model_type": {
                "type": "string",
                "description": "The device type."
              },
              "functionality": {
                "type": "string",
                "description": "The function descriptions."
              },
              "vendor_name": {
                "type": "string",
                "description": "The vendor name."
              },
              "model_comment": {
                "type": "string",
                "description": "The description of the subject."
              },
              "create_by": {
                "type": "string",
                "description": "Information on the creator.\n- Value definition  \n  Self: Self-training models\n  Marketplace: Marketplace purchasing model\n"
              },
              "package_id": {
                "type": "string",
                "description": "The marketplace package ID."
              },
              "product_id": {
                "type": "string",
                "description": "The marketplace product ID."
              },
              "metadata_format_id": {
                "type": "string",
                "description": "The metadata_format_id."
              },
              "latest_version": {
                "$ref": "#/components/schemas/ModelVersionJsonBody"
              }
            }
          }
        }
      },
      "Image": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The image ID."
          },
          "created": {
            "type": "string",
            "description": "The creation date."
          },
          "width": {
            "type": "integer",
            "description": "The image width."
          },
          "height": {
            "type": "integer",
            "description": "The image height."
          },
          "image": {
            "type": "string",
            "description": "The image file (base64 encoding)."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "tag_id": {
                  "type": "string",
                  "description": "The tag ID."
                },
                "tag_name": {
                  "type": "string",
                  "description": "The tag name."
                },
                "created": {
                  "type": "string",
                  "description": "The creation date."
                }
              }
            }
          },
          "regions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Region"
            }
          }
        }
      },
      "Region": {
        "type": "object",
        "properties": {
          "region_id": {
            "type": "string",
            "description": "The region ID."
          },
          "tag_id": {
            "type": "string",
            "description": "The tag ID."
          },
          "tag_name": {
            "type": "string",
            "description": "The tag name."
          },
          "created": {
            "type": "string",
            "description": "The creation date."
          },
          "left": {
            "type": "number",
            "description": "Left of the region (ratio of image size). *Available only for object detection."
          },
          "top": {
            "type": "number",
            "description": "Top of the region (ratio of image size). *Available only for object detection."
          },
          "width": {
            "type": "number",
            "description": "Width of the region (ratio of image size). *Available only for object detection."
          },
          "height": {
            "type": "number",
            "description": "Height of the region (ratio of image size). *Available only for object detection."
          }
        }
      },
      "TrainingKit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The training kit ID."
          },
          "name": {
            "type": "string",
            "description": "The training kit name."
          },
          "description": {
            "type": "string",
            "description": "The tag description."
          },
          "created_on": {
            "type": "string",
            "description": "The date the training kit was created."
          },
          "status": {
            "type": "string",
            "description": "The status."
          },
          "training_kit_type": {
            "type": "string",
            "description": "The training kit type."
          },
          "default_dataset_split_percentage": {
            "type": "number",
            "description": "The default dataset split percentage."
          },
          "framework": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The framework name."
              },
              "version": {
                "type": "string",
                "description": "The framework version."
              }
            }
          },
          "owner": {
            "type": "string",
            "description": "The owner."
          },
          "is_public": {
            "type": "boolean",
            "description": "Whether to publish or not."
          }
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "tag_id": {
            "type": "string",
            "description": "The tag ID."
          },
          "tag_name": {
            "type": "string",
            "description": "The tag name."
          },
          "tag_description": {
            "type": "string",
            "description": "The tag description."
          },
          "tag_type": {
            "type": "number",
            "description": "The tag type."
          },
          "image_count": {
            "type": "number",
            "description": "The number of tagged images."
          }
        }
      },
      "DeployConfiguration": {
        "type": "object",
        "required": [
          "config_id",
          "device_type",
          "config_comment",
          "running_cnt",
          "success_cnt",
          "fail_cnt",
          "firmware",
          "model",
          "custom_setup",
          "ins_id",
          "ins_date",
          "upd_id",
          "upd_date"
        ],
        "properties": {
          "config_id": {
            "type": "string",
            "description": "The config ID."
          },
          "device_type": {
            "type": "string",
            "description": "The device type."
          },
          "config_comment": {
            "type": "string",
            "description": "The config comment."
          },
          "running_cnt": {
            "type": "integer",
            "description": "The running cnt."
          },
          "success_cnt": {
            "type": "integer",
            "description": "The success cnt."
          },
          "fail_cnt": {
            "type": "integer",
            "description": "The fail cnt."
          },
          "firmware": {
            "type": "object",
            "properties": {
              "sensor_loader_file_name": {
                "type": "string",
                "description": "The sensor loader filename."
              },
              "sensor_loader_version_number": {
                "type": "string",
                "description": "The sensor loader version number."
              },
              "sensor_loader_firmware_comment": {
                "type": "string",
                "description": "The sensor loader firmware comment."
              },
              "sensor_file_name": {
                "type": "string",
                "description": "The sensor filename."
              },
              "sensor_version_number": {
                "type": "string",
                "description": "The sensor version number."
              },
              "sensor_firmware_comment": {
                "type": "string",
                "description": "The sensor firmware comment."
              },
              "apfw_file_name": {
                "type": "string",
                "description": "The main chip firmware filename."
              },
              "apfw_version_number": {
                "type": "string",
                "description": "The main chip firmware version number."
              },
              "apfw_firmware_comment": {
                "type": "string",
                "description": "The main chip firmware comment."
              }
            }
          },
          "model": {
            "type": "object",
            "properties": {
              "model_id": {
                "type": "string",
                "description": "The model ID."
              },
              "model_version_number": {
                "type": "string",
                "description": "The model version number."
              },
              "model_comment": {
                "type": "string",
                "description": "The model comment."
              },
              "model_version_comment": {
                "type": "string",
                "description": "The model version comment."
              }
            }
          },
          "custom_setup": {
            "type": "object",
            "properties": {
              "gamma_mode": {
                "type": "string",
                "description": "Gamma mode."
              },
              "gamma_file_name": {
                "type": "string",
                "description": "Gamma file name."
              },
              "gamma_comment": {
                "type": "string",
                "description": "Gamma comment."
              }
            }
          },
          "ins_id": {
            "type": "string",
            "description": "The deployment author."
          },
          "ins_date": {
            "type": "string",
            "description": "The date the deployment was created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          },
          "upd_id": {
            "type": "string",
            "description": "The deployment updater."
          },
          "upd_date": {
            "type": "string",
            "description": "The date the deployment was updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          }
        }
      },
      "StatusHistory": {
        "type": "object",
        "required": [
          "deploy_id",
          "from_datetime",
          "deploy_type",
          "running_cnt",
          "success_cnt",
          "fail_cnt"
        ],
        "properties": {
          "deploy_id": {
            "type": "integer",
            "description": "ID in table sc_t_deploy or sc_t_app_deploy."
          },
          "from_datetime": {
            "type": "string",
            "description": "Deployment from datetime."
          },
          "deploy_type": {
            "type": "string",
            "description": "Deployment Type."
          },
          "running_cnt": {
            "type": "integer",
            "description": "The running cnt."
          },
          "success_cnt": {
            "type": "integer",
            "description": "The success cnt."
          },
          "fail_cnt": {
            "type": "integer",
            "description": "The fail cnt."
          },
          "config_id": {
            "type": "string",
            "description": "The deployment configuration ID."
          },
          "dnn_model": {
            "type": "string",
            "description": "The DNN model name."
          },
          "dnn_model_version": {
            "type": "string",
            "description": "The DNN model version."
          },
          "device_firmware": {
            "type": "string",
            "description": "The Edge System Software name."
          },
          "device_sensor": {
            "type": "string",
            "description": "Sensor Chip Firmware (main) name."
          },
          "device_sensor_loader": {
            "type": "string",
            "description": "Chip Firmware (loader) name."
          },
          "app_name": {
            "type": "string",
            "description": "Edge Application name."
          },
          "app_version": {
            "type": "string",
            "description": "Edge Application version."
          },
          "app_description": {
            "type": "string",
            "description": "The description of Edge Application."
          },
          "gamma_mode": {
            "type": "string",
            "description": "The gamma mode."
          },
          "gamma_file_name": {
            "type": "string",
            "description": "The gamma file name."
          }
        },
        "x-apifox-orders": [
          "deploy_id",
          "from_datetime",
          "deploy_type",
          "running_cnt",
          "success_cnt",
          "fail_cnt",
          "config_id",
          "dnn_model",
          "dnn_model_version",
          "device_firmware",
          "device_sensor",
          "device_sensor_loader",
          "app_name",
          "app_version",
          "app_description"
        ],
        "x-apifox-ignore-properties": []
      },
      "DeployDeviceInfo": {
        "type": "object",
        "required": [
          "deploy_id",
          "from_datetime",
          "deploy_type",
          "running_cnt",
          "success_cnt",
          "fail_cnt",
          "devices"
        ],
        "properties": {
          "deploy_id": {
            "type": "integer",
            "description": "ID in table sc_t_deploy or sc_t_app_deploy"
          },
          "from_datetime": {
            "type": "string",
            "description": "Deployment start date and time."
          },
          "deploy_type": {
            "type": "string",
            "description": "Deployment Type."
          },
          "running_cnt": {
            "type": "integer",
            "description": "The running cnt."
          },
          "success_cnt": {
            "type": "integer",
            "description": "The success cnt."
          },
          "fail_cnt": {
            "type": "integer",
            "description": "The fail cnt."
          },
          "config_id": {
            "type": "string",
            "description": "The deployment configuration ID."
          },
          "dnn_model": {
            "type": "string",
            "description": "The DNN model name."
          },
          "dnn_model_version": {
            "type": "string",
            "description": "The DNN model version."
          },
          "device_firmware": {
            "type": "string",
            "description": "The Edge System Software name."
          },
          "device_sensor": {
            "type": "string",
            "description": "Sensor Chip Firmware (main) name."
          },
          "device_sensor_loader": {
            "type": "string",
            "description": "Chip Firmware (loader) name."
          },
          "app_name": {
            "type": "string",
            "description": "Edge Application name."
          },
          "app_version": {
            "type": "string",
            "description": "Edge Application version."
          },
          "app_description": {
            "type": "string",
            "description": "The description of Edge Application."
          },
          "gamma_mode": {
            "type": "string",
            "description": "The gamma mode."
          },
          "gamma_file_name": {
            "type": "string",
            "description": "The gamma file name."
          },
          "devices": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "device_id",
                "device_name",
                "deploy_status"
              ],
              "properties": {
                "device_id": {
                  "type": "string",
                  "description": "The Device ID."
                },
                "device_name": {
                  "type": "string",
                  "description": "The device name."
                },
                "deploy_status": {
                  "type": "string",
                  "description": "The deployment status of the target device.\n- Value definition  \n  0: Deploying  \n  1: Success  \n  2: Fail  \n  5: UnsupportedVersion  "
                },
                "update_progress": {
                  "type": "string",
                  "description": "The update progress in percentage."
                }
              }
            }
          }
        },
        "x-apifox-orders": [
          "device_id",
          "device_name",
          "deploy_status",
          "running_cnt",
          "success_cnt",
          "fail_cnt",
          "config_id",
          "dnn_model",
          "dnn_model_version",
          "device_firmware",
          "device_sensor",
          "device_sensor_loader",
          "app_name",
          "app_version",
          "app_description",
          "device"
        ],
        "x-apifox-ignore-properties": []
      },
      "DeployHistory": {
        "type": "object",
        "required": [
          "id",
          "deploy_type",
          "deploy_status",
          "replace_network_id",
          "current_target",
          "firmware",
          "model",
          "custom_setting",
          "ins_id",
          "ins_date",
          "upd_id",
          "upd_date"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Deploy ID."
          },
          "deploy_type": {
            "type": "string",
            "description": "The deploy type.\n- Value definition  \n  0: Deploy config  \n  1: Device Model  \n  App: DeviceApp  "
          },
          "deploy_status": {
            "type": "string",
            "description": "The deployment status of the target device.\n- Value definition  \n  0: Deploying  \n  1: Success  \n  2: Fail  \n  3: Cancel  \n  4: Model undeploy  \n  7: Waiting  \n  9: DeviceApp undeploy  "
          },
          "update_progress": {
            "type": "string",
            "description": "The update progress in percentage."
          },
          "deploy_comment": {
            "type": "string",
            "description": "The deploy comment."
          },
          "config_id": {
            "type": "string",
            "description": "The deployment configuration ID."
          },
          "replace_network_id": {
            "type": "string",
            "description": "The replace network ID."
          },
          "current_target": {
            "type": "string",
            "description": "The current target."
          },
          "total_status": {
            "type": "string",
            "description": "The deployment status. *Total status of devices deployed together.\n- Value definition  \n  0: Deploying  \n  1: Success  \n  2: Fail  \n  3: Cancel  \n  4: Model undeploy  \n  5: UnsupportedVersion  \n  9: DeviceApp undeploy  "
          },
          "app_name": {
            "type": "string",
            "description": "The application name."
          },
          "version_number": {
            "type": "string",
            "description": "The Edge System Software version."
          },
          "firmware": {
            "type": "object",
            "properties": {
              "sensor_loader_target_flg": {
                "type": "string",
                "description": "The deployment target flag.  \n- Value definition  \n  0: Not for deployment  \n  1: Deployment target  "
              },
              "sensor_loader_status": {
                "type": "string",
                "description": "The deployment status.  \n- Value definition  \n  0: Waiting  \n  1: Deploying  \n  2: Success  \n  3: Fail  "
              },
              "sensor_loader_retry_count": {
                "type": "string",
                "description": "The sensor loader retry count."
              },
              "sensor_loader_start_date": {
                "type": "string",
                "description": "The sensor loader start date."
              },
              "sensor_loader_end_date": {
                "type": "string",
                "description": "The sensor loader end date."
              },
              "sensor_loader_version_number": {
                "type": "string",
                "description": "The sensor loader version number."
              },
              "sensor_loader_version_comment": {
                "type": "string",
                "description": "The sensor loader version comment."
              },
              "sensor_target_flg": {
                "type": "string",
                "description": "The deployment target flag.  \n- Value definition  \n  0: Not for deployment  \n  1: Deployment target  "
              },
              "sensor_status": {
                "type": "string",
                "description": "The deployment status.  \n- Value definition  \n  0: Waiting  \n  1: Deploying  \n  2: Success  \n  3: Fail  "
              },
              "sensor_retry_count": {
                "type": "string",
                "description": "The sensor retry count."
              },
              "sensor_start_date": {
                "type": "string",
                "description": "The sensor start date."
              },
              "sensor_end_date": {
                "type": "string",
                "description": "The sensor end date."
              },
              "sensor_version_number": {
                "type": "string",
                "description": "The sensor version number."
              },
              "sensor_version_comment": {
                "type": "string",
                "description": "The sensor version comment."
              },
              "apfw_target_flg": {
                "type": "string",
                "description": "The deployment target flag.  \n- Value definition  \n  0: Not for deployment  \n  1: Deployment target  "
              },
              "apfw_status": {
                "type": "string",
                "description": "The deployment status.  \n- Value definition  \n  0: Waiting  \n  1: Deploying  \n  2: Success  \n  3: Fail  "
              },
              "apfw_retry_count": {
                "type": "string",
                "description": "The appfw retry count."
              },
              "apfw_start_date": {
                "type": "string",
                "description": "The appfw start date."
              },
              "apfw_end_date": {
                "type": "string",
                "description": "The appfw end date."
              },
              "apfw_version_number": {
                "type": "string",
                "description": "The appfw version number."
              },
              "apfw_version_comment": {
                "type": "string",
                "description": "The appfw version comment."
              }
            }
          },
          "model": {
            "type": "object",
            "properties": {
              "model_target_flg": {
                "type": "string",
                "description": "The deployment target flag.  \n- Value definition  \n  0: Not for deployment  \n  1: Deployment target  "
              },
              "model_status": {
                "type": "string",
                "description": "The deployment status.  \n- Value definition  \n  0: Waiting  \n  1: Deploying  \n  2: Success  \n  3: Fail  "
              },
              "model_retry_count": {
                "type": "string",
                "description": "The model retry count."
              },
              "model_start_date": {
                "type": "string",
                "description": "The model start date."
              },
              "model_end_date": {
                "type": "string",
                "description": "The model end date."
              },
              "model_id": {
                "type": "string",
                "description": "The model id."
              },
              "model_version_number": {
                "type": "string",
                "description": "The model version number."
              },
              "model_comment": {
                "type": "string",
                "description": "The model version comment."
              }
            }
          },
          "custom_setting": {
            "type": "object",
            "properties": {
              "gamma_target_flg": {
                "type": "string",
                "description": "The deployment target flag.  \n- Value definition  \n  0: Not for deployment  \n  1: Deployment target  "
              },
              "gamma_status": {
                "type": "string",
                "description": "The deployment status.  \n- Value definition  \n  0: Waiting  \n  1: Deploying  \n  2: Success  \n  3: Fail  "
              },
              "gamma_retry_count": {
                "type": "string",
                "description": "The gamma retry count."
              },
              "gamma_start_date": {
                "type": "string",
                "description": "The gamma start date."
              },
              "gamma_end_date": {
                "type": "string",
                "description": "The gamma end date."
              },
              "gamma_mode": {
                "type": "string",
                "description": "The gamma mode."
              },
              "gamma_file_name": {
                "type": "string",
                "description": "The gamma file name."
              },
              "gamma_comment": {
                "type": "string",
                "description": "The gamma comment."
              }
            }
          },
          "ins_id": {
            "type": "string",
            "description": "The subject that configured the feature."
          },
          "ins_date": {
            "type": "string",
            "description": "The date the settings were created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          },
          "upd_id": {
            "type": "string",
            "description": "The subject that updated the settings."
          },
          "upd_date": {
            "type": "string",
            "description": "The date the settings were updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          }
        }
      },
      "CustomSetupFiles": {
        "type": "object",
        "required": [
          "file_name",
          "type",
          "ins_id",
          "ins_date",
          "upd_id",
          "upd_date"
        ],
        "properties": {
          "file_name": {
            "type": "string",
            "description": "The custom setup file filename."
          },
          "type": {
            "type": "string",
            "description": "The custom setup file type."
          },
          "comment": {
            "type": "string",
            "description": "The description of the subject."
          },
          "ins_id": {
            "type": "string",
            "description": "The custom setup file author."
          },
          "ins_date": {
            "type": "string",
            "description": "The date the custom setup file was created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          },
          "upd_id": {
            "type": "string",
            "description": "The custom setup file updater."
          },
          "upd_date": {
            "type": "string",
            "description": "The date the custom setup file was updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          }
        }
      },
      "CustomSetupFile": {
        "type": "object",
        "required": [
          "file_name",
          "type",
          "ins_id",
          "ins_date",
          "upd_id",
          "upd_date"
        ],
        "properties": {
          "file_name": {
            "type": "string",
            "description": "The custom setup file filename."
          },
          "type": {
            "type": "string",
            "description": "The custom setup file type."
          },
          "comment": {
            "type": "string",
            "description": "The description of the subject."
          },
          "ins_id": {
            "type": "string",
            "description": "The custom setup file author."
          },
          "ins_date": {
            "type": "string",
            "description": "The date the custom setup file was created.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          },
          "upd_id": {
            "type": "string",
            "description": "The custom setup file updater."
          },
          "upd_date": {
            "type": "string",
            "description": "The date the custom setup file was updated.* yyyy-MM-ddTHH:mm:ss.SSSSSS+00:00."
          }
        }
      },
      "UpdateIRHubConnectorJsonBody": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Connection string for Azure Event Hubs forwarding inference result. *Do not specify when returning to the initial value. In the case of the initial value, it will be streamed within this service.  "
          },
          "name": {
            "type": "string",
            "description": "Azure Event Hubs Instance Name. *Do not specify when returning to the initial value. In the case of the initial value, it will be streamed within this service.  "
          }
        },
        "description": "UpdateIRHubConnector JsonBody."
      },
      "SetImageConfigurationJsonBody": {
        "type": "object",
        "properties": {
          "frame_rate": {
            "type": "integer",
            "description": "The frame rate. *Set an integer value multiplied by 100 for the frame rate that output from the sensor. The maximum value of the frame rate depends on the DriveMode value (refer to the Drive mode specification for the details on the drive_mode parameters).\n- Value definition  \n  99  \n  499  \n  999  \n  1248  \n  1498  \n  1998  \n  2497  \n  2997  ",
            "default": 2997
          },
          "drive_mode": {
            "type": "integer",
            "description": "The drive mode.\n- Value definition  \n  1  \n  2  \n  3  \n  4  \n- Drive mode spec  \n  <table>\n    <thead>\n      <tr>\n        <th>Mode</th>\n        <th>Binning</th>\n        <th>Scale</th>\n        <th>Crop</th>\n        <th>Raw Size</th>\n        <th>Max Frame Rate</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>1</td>\n        <td>On</td>\n        <td>-</td>\n        <td>-</td>\n        <td>2028x1520</td>\n        <td>30(29.97)fps</td>\n      </tr>\n      <tr>\n        <td>2</td>\n        <td>Off</td>\n        <td>On</td>\n        <td>-</td>\n        <td>2028x1520</td>\n        <td>20(19.98)fps</td>\n      </tr>\n      <tr>\n        <td>3</td>\n        <td>Off</td>\n        <td>Off</td>\n        <td>On</td>\n        <td>2028x1520</td>\n        <td>20(19.98)fps</td>\n      </tr>\n      <tr>\n        <td>4</td>\n        <td>Off</td>\n        <td>Off</td>\n        <td>Off</td>\n        <td>4056x3040</td>\n        <td>10(9.99)fps</td>\n      </tr>\n    </tbody>\n  </table>",
            "default": 1
          }
        },
        "description": "SetImageConfiguration JsonBody."
      },
      "SetDeviceAppLogJsonBody": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "Enable or disable the feature.\n- Value definition  \n  true : enable  \n  false : disable  ",
            "default": true
          }
        },
        "description": "SetDeviceLog JsonBody."
      },
      "DeleteImagesJsonBody": {
        "type": "object",
        "properties": {
          "directory_deletion": {
            "type": "string",
            "default": "0",
            "description": "Flag that specifies the method for deleting images.\n- Value definition  \n  0 : Delete by specifying the file\n  1 : Delete by specifying the directory\n"
          },
          "filenames": {
            "description": "The file to deleted when directory_deletion is set to 0.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "DeleteImages JsonBody."
      },
      "DeleteImagesJsonBodyStable": {
        "type": "object",
        "properties": {
          "directory_deletion": {
            "type": "string",
            "default": "0",
            "description": "Flag that specifies the method for deleting images.\n- Value definition  \n  0 : Delete by specifying the file\n  1 : Delete files by specifying the directory\n"
          },
          "filenames": {
            "description": "The file to deleted when directory_deletion is set to 0.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "limit": {
            "type": "integer",
            "default": 10000,
            "description": "Number of images to delete. The oldest stored items are deleted first.  \nValue range: 1 to 10000\n"
          }
        },
        "description": "DeleteImages JsonBody stable."
      },
      "SetDeviceConfigurationJsonBody": {
        "type": "object",
        "properties": {
          "payload": {
            "type": "object",
            "properties": {
              "FWOperation": {
                "$ref": "#/components/schemas/FWOperation"
              },
              "Direction": {
                "$ref": "#/components/schemas/Direction"
              },
              "Adjustment": {
                "$ref": "#/components/schemas/Adjustment"
              }
            }
          }
        },
        "description": "The template configuration.  "
      },
      "FWOperation": {
        "type": "object",
        "required": [
          "ErrorHandling"
        ],
        "properties": {
          "OperatingMode": {
            "type": "string",
            "default": "Manual",
            "enum": [
              "Manual",
              "Periodic"
            ]
          },
          "ErrorHandling": {
            "type": "string",
            "enum": [
              "ManualReset",
              "AutoReboot"
            ]
          },
          "PeriodicParameter": {
            "type": "object",
            "required": [
              "PrimaryInterval",
              "SecondaryInterval",
              "UploadInferenceParameter"
            ],
            "properties": {
              "NetworkParameter": {
                "type": "string",
                "default": "Save",
                "enum": [
                  "Save",
                  "DHCP"
                ]
              },
              "PrimaryInterval": {
                "type": "object",
                "$ref": "#/components/schemas/PrimaryInterval"
              },
              "SecondaryInterval": {
                "type": "object",
                "$ref": "#/components/schemas/SecondaryInterval"
              },
              "UploadInferenceParameter": {
                "type": "object",
                "$ref": "#/components/schemas/UploadInferenceParameter"
              }
            }
          }
        }
      },
      "PrimaryInterval": {
        "type": "object",
        "required": [
          "BaseTime"
        ],
        "properties": {
          "ConfigInterval": {
            "type": "integer",
            "default": 0,
            "description": "Interval for checking Config updates, specified in minutes.  0 : No Config.\n- Value definition  \n  5 to 1440 :(24 hours)  "
          },
          "CaptureInterval": {
            "type": "integer",
            "default": 0,
            "description": "Shooting interval, specified in minutes.  0 : No shooting.\n- Value definition  \n  3 to 1440 :(24 hours)  "
          },
          "BaseTime": {
            "type": "string",
            "description": "Reference time (hour:minute). The seconds are fixed at 00.\n- Value definition  \n  \"00:00\" to \"23:59\""
          },
          "UploadCount": {
            "type": "integer",
            "default": 1,
            "description": "Primary is fixed at 1.\n- Value definition  \n  1"
          }
        }
      },
      "SecondaryInterval": {
        "type": "object",
        "required": [
          "BaseTime"
        ],
        "properties": {
          "ConfigInterval": {
            "type": "integer",
            "default": 0,
            "description": "Interval for checking Config updates, specified in minutes.  0 : No Config.\n- Value definition  \n  5 to 1440 :(24 hours)  "
          },
          "CaptureInterval": {
            "type": "integer",
            "default": 0,
            "description": "Shooting interval, specified in minutes.  0 : No shooting.\n- Value definition  \n  3 to 1440 :(24 hours)  "
          },
          "BaseTime": {
            "type": "string",
            "description": "Reference time (hour:minute). The seconds are fixed at 00. \n- Value definition  \n  \"00:00\" to \"23:59\""
          },
          "UploadCount": {
            "type": "integer",
            "default": 0,
            "description": "Uploads the data after the specified number of shots have been taken. For Secondary, if set to 0, the SecondaryInterval is disabled.  \nPrimary is fixed at 1. Secondary is 0 or 1."
          }
        }
      },
      "UploadInferenceParameter": {
        "type": "object",
        "required": [
          "StorageNameIR",
          "StorageSubDirectoryPathIR"
        ],
        "properties": {
          "UploadMethodIR": {
            "type": "string",
            "default": "BlobStorage",
            "description": "How to upload the inference result.\n- Value definition  \n  BlobStorage  \n  HttpStorage"
          },
          "StorageNameIR": {
            "type": "string",
            "description": "If UploadMethodIR is set to \"BlobStorage,\" specify the following format.  \n[project_id(lowercase)]_ir  \nIf UploadMethodIR is set to \"HttpStorage\", specify the URL of the HTTP server where the inference results will be saved.  \n*The maximum number of characters that can be specified is 64."
          },
          "StorageSubDirectoryPathIR": {
            "type": "string",
            "description": "Specify the save destination path of Inference Result.  \n*The maximum number of characters that can be specified is 256."
          },
          "PPLParameter": {
            "type": "string",
            "description": "The maximum number of characters that can be specified is 1364. Please apply base64 encoding to PPLparameter."
          },
          "CropHOffset": {
            "type": "integer",
            "default": 0,
            "description": "- Value definition  \n  0 to 4055"
          },
          "CropVOffset": {
            "type": "integer",
            "default": 0,
            "description": "- Value definition  \n  0 to 3039"
          },
          "CropHSize": {
            "type": "integer",
            "default": 4056,
            "description": "- Value definition  \n  0 to 4056"
          },
          "CropVSize": {
            "type": "integer",
            "default": 3040,
            "description": "- Value definition  \n  0 to 3040"
          },
          "NetworkId": {
            "type": "string",
            "description": "Empty characters are also allowed. The behavior in the case of an empty string is as follows:  \nA. If the number of arrays reported by Version.DnnModelVersion is 1 or more, the system operates using the DNN model of the first element. \nB. If the number of arrays reported by Version.DnnModelVersion is 0, the parameter is considered invalid. The system will immediately go to sleep, and on the next startup, it will operate in Config mode.\n- Value definition  \n  \"000000\" to \"999999\""
          }
        }
      },
      "UpdateStorageConnectorJsonBody": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudTypeConnectorJsonBody",
            "description": "UpdateStorageConnector Json Body"
          },
          {
            "type": "object"
          }
        ]
      },
      "Azure": {
        "type": "object",
        "properties": {
          "type": {
            "default": "AZURE",
            "type": "string",
            "description": "The storage service type. Specify “AZURE” as the value.  \n- Value definition  \n  AZURE"
          },
          "mode": {
            "default": 0,
            "type": "integer",
            "description": "The mode to specify whether the image, inference results, or both should be included. \n- Value definition  \n  0 : image only  \n  1 : both, image and inference result    \n  2 : inference result only"
          },
          "endpoint": {
            "type": "string",
            "description": "Destination Azure Blob Storage endpoint.  \n*When resetting to the default values, do not specify “endpoint,” “connection_string,” or “container_name.” If “input image” is specified in “mode,” it will be streamed within this service. If “inference result” is specified in “mode,” the inference settings will be deleted."
          },
          "connection_string": {
            "type": "string",
            "description": "Connection string for Azure Blob Storage.  \n*To initialize, refer to the description of “endpoint”."
          },
          "container_name": {
            "type": "string",
            "description": "Container name of Azure Blob Storage.  \n*To initialize, refer to the description of “endpoint”."
          }
        }
      },
      "AWS": {
        "type": "object",
        "required": [
          "type",
          "endpoint",
          "region",
          "bucket_name",
          "secret_access_key",
          "access_key_id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "The storage service type. Specify “AWS” as the value.  \n- Value definition  \n  AWS"
          },
          "mode": {
            "default": 0,
            "type": "integer",
            "description": "The mode to specify whether the image, inference results, or both should be included. \n- Value definition  \n  0 : image only  \n  1 : both, image and inference result    \n  2 : inference result only"
          },
          "endpoint": {
            "type": "string",
            "description": "Destination AWS S3 endpoint.  "
          },
          "region": {
            "type": "string",
            "description": "AWS Region. *Select from the official list.  "
          },
          "bucket_name": {
            "type": "string",
            "description": "AWS S3 Bucket name.  "
          },
          "secret_access_key": {
            "type": "string",
            "description": "AWS Secret Access key.  "
          },
          "access_key_id": {
            "type": "string",
            "description": "AWS Access key ID.  "
          }
        }
      },
      "CloudTypeConnectorJsonBody": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/Azure"
          },
          {
            "$ref": "#/components/schemas/AWS"
          }
        ]
      },
      "Direction": {
        "type": "object",
        "properties": {
          "Vertical": {
            "type": "string",
            "default": "Normal",
            "enum": [
              "Normal",
              "Reverse"
            ]
          },
          "Horizontal": {
            "type": "string",
            "default": "Normal",
            "enum": [
              "Normal",
              "Reverse"
            ]
          }
        }
      },
      "Exposure": {
        "type": "object",
        "properties": {
          "ExposureMode": {
            "type": "string",
            "default": "auto",
            "enum": [
              "auto",
              "manual"
            ]
          },
          "ExposureMaxExposureTime": {
            "type": "integer",
            "default": 20,
            "description": "- Value definition  \n  16 to 33"
          },
          "ExposureMinExposureTime": {
            "type": "integer",
            "default": 33,
            "description": "- Value definition  \n  26 to 33"
          },
          "ExposureMaxGain": {
            "type": "integer",
            "default": 24,
            "description": "- Value definition  \n  1 to 24"
          },
          "AESpeed": {
            "type": "integer",
            "default": 3,
            "description": "- Value definition  \n  1 to 5"
          },
          "ExposureCompensation": {
            "type": "integer",
            "default": 6,
            "description": "- Value definition  \n  0 to 12"
          },
          "ExposureTime": {
            "type": "integer",
            "default": 18,
            "description": "- Value definition  \n  16 to 33"
          },
          "ExposureGain": {
            "type": "integer",
            "default": 1,
            "description": "- Value definition  \n  1 to 24"
          },
          "FlickerReduction": {
            "type": "integer",
            "default": 7,
            "description": "- Value definition  \n  0 to 7"
          }
        }
      },
      "Adjustment": {
        "type": "object",
        "properties": {
          "Gamma": {
            "type": "string",
            "default": "std",
            "enum": [
              "std",
              "custom"
            ]
          }
        }
      },
      "CreateDeviceCustomSetupFileJsonBody": {
        "required": [
          "type",
          "file_name",
          "file_id"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of device custom setup file.\n- Value definition  \n  'Gamma'\n"
          },
          "file_name": {
            "type": "string",
            "description": "File name."
          },
          "file_id": {
            "type": "string",
            "description": "File ID of the device custom setup file."
          },
          "comment": {
            "type": "string",
            "description": "Description of the subject."
          }
        },
        "description": "CreateDeviceCustomSetupFile JsonBody."
      }
    }
  }
}