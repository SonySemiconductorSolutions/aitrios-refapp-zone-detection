# automatically generated by the FlatBuffers compiler, do not modify
# namespace: SmartCamera
import flatbuffers
from flatbuffers.compat import import_numpy

np = import_numpy()


class GeneralObject:
    __slots__ = ["_tab"]

    @classmethod
    def GetRootAsGeneralObject(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = GeneralObject()
        x.Init(buf, n + offset)
        return x

    # GeneralObject
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # GeneralObject
    def ClassId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(
                flatbuffers.number_types.Uint32Flags, o + self._tab.Pos
            )
        return 0

    # GeneralObject
    def BoundingBoxType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # GeneralObject
    def BoundingBox(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            from flatbuffers.table import Table

            obj = Table(bytearray(), 0)
            self._tab.Union(obj, o)
            return obj
        return None

    # GeneralObject
    def Score(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(
                flatbuffers.number_types.Float32Flags, o + self._tab.Pos
            )
        return 0.0

    # GeneralObject
    def Iou(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(
                flatbuffers.number_types.Float32Flags, o + self._tab.Pos
            )
        return 0.0

    # GeneralObject
    def Zoneflag(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return bool(
                self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos)
            )
        return False


def GeneralObjectStart(builder):
    builder.StartObject(6)


def GeneralObjectAddClassId(builder, classId):
    builder.PrependUint32Slot(0, classId, 0)


def GeneralObjectAddBoundingBoxType(builder, boundingBoxType):
    builder.PrependUint8Slot(1, boundingBoxType, 0)


def GeneralObjectAddBoundingBox(builder, boundingBox):
    builder.PrependUOffsetTRelativeSlot(
        2, flatbuffers.number_types.UOffsetTFlags.py_type(boundingBox), 0
    )


def GeneralObjectAddScore(builder, score):
    builder.PrependFloat32Slot(3, score, 0.0)


def GeneralObjectAddIou(builder, iou):
    builder.PrependFloat32Slot(4, iou, 0.0)


def GeneralObjectAddZoneflag(builder, zoneflag):
    builder.PrependBoolSlot(5, zoneflag, 0)


def GeneralObjectEnd(builder):
    return builder.EndObject()
